{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_BASE_URI",
          "type": "string"
        },
        {
          "internalType": "contract Soul",
          "name": "_soul",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "onCelestialCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "celestialType",
          "type": "uint256"
        }
      ],
      "name": "onCelestialRevealed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ANGEL_TYPE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AngelsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_URI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CELESTIAL_PER_SOUL_MINT_LEVEL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CELESTIAL_PRICE_AVAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CELESTIAL_PRICE_WHITELIST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CelestialsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CelestialsMintedWhitelist",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CelestialsMintedWithAVAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CelestialsMintedWithSOUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "CelestialsOfOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "celestialType",
              "type": "uint256"
            }
          ],
          "internalType": "struct Celestial.CelestialInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEMON_TYPE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DemonsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "GetTokenIdsOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NEPHILIM_TYPE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NUM_GEN0_CELESTIAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NUM_GEN1_CELESTIAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NephilimsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Stake",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_page",
          "type": "uint256"
        }
      ],
      "name": "bachedCelestialsOfOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "celestialType",
              "type": "uint256"
            }
          ],
          "internalType": "struct Celestial.CelestialInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "celestialverseAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentSOULMintCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "forwardERC20s",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "celestialTypes",
          "type": "uint256[]"
        }
      ],
      "name": "mintCelestialWhitelist",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "celestialTypes",
          "type": "uint256[]"
        }
      ],
      "name": "mintCelestialWithAVAX",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "celestialTypes",
          "type": "uint256[]"
        }
      ],
      "name": "mintCelestialWithSoul",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingStartedAVAX",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingStartedSOUL",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_BASE_URI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stake",
          "type": "address"
        }
      ],
      "name": "setStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "setStartTimeAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "setStartTimeSOUL",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "soul",
      "outputs": [
        {
          "internalType": "contract Soul",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTimeAVAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTimeSOUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenTypes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAVAX",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/Pausable.sol",
    "10": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "11": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "12": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "13": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
    "14": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "15": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Strings.sol",
    "16": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/cryptography/MerkleProof.sol",
    "17": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/ERC165.sol",
    "18": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/IERC165.sol",
    "19": "contracts/Celestial.sol",
    "21": "contracts/Soul.sol",
    "3": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "6": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "7": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/ERC721.sol",
    "8": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721.sol"
  },
  "ast": {
    "absolutePath": "contracts/Celestial.sol",
    "exportedSymbols": {
      "Address": [
        3569
      ],
      "Celestial": [
        1037
      ],
      "Context": [
        3195
      ],
      "ERC165": [
        5396
      ],
      "ERC20": [
        4964
      ],
      "ERC20Burnable": [
        5026
      ],
      "ERC721": [
        4387
      ],
      "ERC721Enumerable": [
        2875
      ],
      "IERC165": [
        5433
      ],
      "IERC20": [
        3273
      ],
      "IERC20Metadata": [
        5421
      ],
      "IERC721": [
        5142
      ],
      "IERC721Enumerable": [
        4418
      ],
      "IERC721Metadata": [
        5169
      ],
      "IERC721Receiver": [
        3174
      ],
      "MerkleProof": [
        2946
      ],
      "Ownable": [
        2221
      ],
      "Pausable": [
        2313
      ],
      "SafeERC20": [
        2537
      ],
      "Soul": [
        3156
      ],
      "Strings": [
        5372
      ]
    },
    "id": 1038,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:19"
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 2538,
        "src": "62:65:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 2876,
        "src": "128:78:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 2222,
        "src": "207:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 2314,
        "src": "260:55:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 2947,
        "src": "316:68:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Soul.sol",
        "file": "./Soul.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 3157,
        "src": "386:20:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2875,
              "src": "430:16:19"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "430:16:19"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2221,
              "src": "448:7:19"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "448:7:19"
          },
          {
            "baseName": {
              "id": 12,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2313,
              "src": "457:8:19"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "457:8:19"
          }
        ],
        "canonicalName": "Celestial",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1037,
        "linearizedBaseContracts": [
          1037,
          2313,
          2221,
          2875,
          4418,
          4387,
          5169,
          5142,
          5396,
          5433,
          3195
        ],
        "name": "Celestial",
        "nameLocation": "417:9:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 17,
            "libraryName": {
              "id": 14,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2537,
              "src": "478:9:19"
            },
            "nodeType": "UsingForDirective",
            "src": "472:27:19",
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3273,
                "src": "492:6:19"
              },
              "referencedDeclaration": 3273,
              "src": "492:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3273",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "global": false,
            "id": 20,
            "libraryName": {
              "id": 18,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5372,
              "src": "510:7:19"
            },
            "nodeType": "UsingForDirective",
            "src": "504:26:19",
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Celestial.CelestialInfo",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "575:7:19",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "567:15:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "567:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "celestialType",
                "nameLocation": "600:13:19",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "592:21:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "592:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CelestialInfo",
            "nameLocation": "543:13:19",
            "nodeType": "StructDefinition",
            "scope": 1037,
            "src": "536:84:19",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "b4fad9af",
            "id": 28,
            "mutability": "constant",
            "name": "CELESTIAL_PRICE_AVAX",
            "nameLocation": "666:20:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "642:56:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "642:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "312e35",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "689:9:19",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1500000000000000000_by_1",
                "typeString": "int_const 1500000000000000000"
              },
              "value": "1.5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2cfb18b1",
            "id": 31,
            "mutability": "constant",
            "name": "CELESTIAL_PRICE_WHITELIST",
            "nameLocation": "749:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "725:61:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "725:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "312e33",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "777:9:19",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1300000000000000000_by_1",
                "typeString": "int_const 1300000000000000000"
              },
              "value": "1.3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "6b988176",
            "id": 34,
            "mutability": "constant",
            "name": "CELESTIAL_PER_SOUL_MINT_LEVEL",
            "nameLocation": "894:29:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "870:60:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "870:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "926:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "73033bda",
            "id": 37,
            "mutability": "constant",
            "name": "NUM_GEN0_CELESTIAL",
            "nameLocation": "1031:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1007:51:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1007:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1052:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "a756a1df",
            "id": 40,
            "mutability": "constant",
            "name": "NUM_GEN1_CELESTIAL",
            "nameLocation": "1088:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1064:51:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1064:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31355f303030",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1109:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15000_by_1",
                "typeString": "int_const 15000"
              },
              "value": "15_000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2a6414b0",
            "id": 43,
            "mutability": "constant",
            "name": "ANGEL_TYPE",
            "nameLocation": "1145:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1121:38:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1121:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1158:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2b95b732",
            "id": 46,
            "mutability": "constant",
            "name": "DEMON_TYPE",
            "nameLocation": "1189:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1165:38:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1202:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f7be4f11",
            "id": 49,
            "mutability": "constant",
            "name": "NEPHILIM_TYPE",
            "nameLocation": "1233:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1209:41:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1209:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1249:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7d97e52",
            "id": 54,
            "mutability": "mutable",
            "name": "currentSOULMintCost",
            "nameLocation": "1304:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1289:50:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1289:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000000"
              },
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32305f303030",
                "id": 51,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1326:6:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_20000_by_1",
                  "typeString": "int_const 20000"
                },
                "value": "20_000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653138",
                "id": 52,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1335:4:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1e18"
              },
              "src": "1326:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "815b7a8c",
            "id": 57,
            "mutability": "mutable",
            "name": "soul",
            "nameLocation": "1384:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1372:16:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Soul_$3156",
              "typeString": "contract Soul"
            },
            "typeName": {
              "id": 56,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55,
                "name": "Soul",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3156,
                "src": "1372:4:19"
              },
              "referencedDeclaration": 3156,
              "src": "1372:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Soul_$3156",
                "typeString": "contract Soul"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc7d4034",
            "id": 59,
            "mutability": "mutable",
            "name": "celestialverseAddress",
            "nameLocation": "1409:21:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1394:36:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1394:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de20bc92",
            "id": 61,
            "mutability": "mutable",
            "name": "Stake",
            "nameLocation": "1451:5:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1436:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 60,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1436:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dbddb26a",
            "id": 63,
            "mutability": "mutable",
            "name": "BASE_URI",
            "nameLocation": "1497:8:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1483:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 62,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1483:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 65,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1544:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1529:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 64,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1529:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db4bec44",
            "id": 69,
            "mutability": "mutable",
            "name": "whitelistClaimed",
            "nameLocation": "1595:16:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1560:51:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 66,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1568:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1560:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 67,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1579:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65e940a2",
            "id": 71,
            "mutability": "mutable",
            "name": "CelestialsMintedWithAVAX",
            "nameLocation": "1654:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1639:39:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1639:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e9f169f7",
            "id": 73,
            "mutability": "mutable",
            "name": "CelestialsMintedWithSOUL",
            "nameLocation": "1699:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1684:39:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 72,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1684:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff2a7656",
            "id": 75,
            "mutability": "mutable",
            "name": "CelestialsMintedWhitelist",
            "nameLocation": "1744:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1729:40:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1729:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b76dbca",
            "id": 78,
            "mutability": "mutable",
            "name": "CelestialsMinted",
            "nameLocation": "1790:16:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1775:35:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1775:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 77,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1809:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32a2ec41",
            "id": 80,
            "mutability": "mutable",
            "name": "AngelsMinted",
            "nameLocation": "1832:12:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1817:27:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1817:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "758c0b9e",
            "id": 82,
            "mutability": "mutable",
            "name": "DemonsMinted",
            "nameLocation": "1865:12:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1850:27:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 81,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1850:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aff9efe8",
            "id": 84,
            "mutability": "mutable",
            "name": "NephilimsMinted",
            "nameLocation": "1898:15:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1883:30:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 83,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1883:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a682f862",
            "id": 86,
            "mutability": "mutable",
            "name": "startTimeAVAX",
            "nameLocation": "2006:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "1991:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1991:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7b27af7",
            "id": 88,
            "mutability": "mutable",
            "name": "startTimeSOUL",
            "nameLocation": "2040:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "2025:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2025:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33f6832a",
            "id": 92,
            "mutability": "mutable",
            "name": "tokenTypes",
            "nameLocation": "2158:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "2123:45:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 91,
              "keyType": {
                "id": 89,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2131:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2123:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 90,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2142:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "b0c73316550069520aa3bffd50be8c7989584da8716295793eda73dbcd1c154c",
            "id": 96,
            "name": "onCelestialCreated",
            "nameLocation": "2224:18:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2251:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2243:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2243:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:17:19"
            },
            "src": "2218:42:19"
          },
          {
            "anonymous": false,
            "eventSelector": "c3446d569695aa78750f8132ce4941514489a02c8ca9a2078ee392dccd96474e",
            "id": 102,
            "name": "onCelestialRevealed",
            "nameLocation": "2271:19:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2299:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "2291:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "celestialType",
                  "nameLocation": "2316:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "2308:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2290:40:19"
            },
            "src": "2265:66:19"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2453:89:19",
              "statements": [
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "CelestialsMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2463:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2482:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2463:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:20:19"
                },
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "BASE_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2493:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 119,
                      "name": "_BASE_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2504:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2493:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:20:19"
                },
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 122,
                      "name": "soul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "2523:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Soul_$3156",
                        "typeString": "contract Soul"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123,
                      "name": "_soul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "2530:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Soul_$3156",
                        "typeString": "contract Soul"
                      }
                    },
                    "src": "2523:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Soul_$3156",
                      "typeString": "contract Soul"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2523:12:19"
                }
              ]
            },
            "id": 127,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43656c65737469616c2056657273652047616d65",
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2401:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_46403887fa82a4ea549c82d33786653322f8753e53a1cc1e407acb2c256bded4",
                      "typeString": "literal_string \"Celestial Verse Game\""
                    },
                    "value": "Celestial Verse Game"
                  },
                  {
                    "hexValue": "43454c45535449414c2d56455253452d47414d45",
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2425:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_932c92cb2329a5e01ef52b76131c14c1503ed581bc7b09f2d46ea71f58177b6c",
                      "typeString": "literal_string \"CELESTIAL-VERSE-GAME\""
                    },
                    "value": "CELESTIAL-VERSE-GAME"
                  }
                ],
                "id": 112,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 109,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4387,
                  "src": "2394:6:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2394:54:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_BASE_URI",
                  "nameLocation": "2363:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2349:23:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "2379:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2374:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Soul_$3156",
                    "typeString": "contract Soul"
                  },
                  "typeName": {
                    "id": 106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 105,
                      "name": "Soul",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3156,
                      "src": "2374:4:19"
                    },
                    "referencedDeclaration": 3156,
                    "src": "2374:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Soul_$3156",
                      "typeString": "contract Soul"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2348:37:19"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2453:0:19"
            },
            "scope": 1037,
            "src": "2337:205:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "2600:31:19",
              "statements": [
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2610:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 135,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "2618:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2610:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "2610:14:19"
                }
              ]
            },
            "functionSelector": "e2ea1319",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 131,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2164,
                  "src": "2591:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2591:9:19"
              }
            ],
            "name": "setStake",
            "nameLocation": "2557:8:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "2574:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2566:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2565:16:19"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2600:0:19"
            },
            "scope": 1037,
            "src": "2548:83:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2702:160:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 147,
                          "name": "_startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2733:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 148,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2747:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2747:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2733:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "737461727454696d652063616e6e6f7420626520696e207468652070617374",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2776:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71ce12c838f5b11d2075effbf86f6dddbb5c9b8a39eb41662ba13a6f92d262f3",
                          "typeString": "literal_string \"startTime cannot be in the past\""
                        },
                        "value": "startTime cannot be in the past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71ce12c838f5b11d2075effbf86f6dddbb5c9b8a39eb41662ba13a6f92d262f3",
                          "typeString": "literal_string \"startTime cannot be in the past\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2712:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:107:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:107:19"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 154,
                      "name": "startTimeAVAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2829:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 155,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2845:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2829:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:26:19"
                }
              ]
            },
            "functionSelector": "3c1d4de7",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 143,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2164,
                  "src": "2692:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2692:9:19"
              }
            ],
            "name": "setStartTimeAVAX",
            "nameLocation": "2646:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nameLocation": "2671:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2663:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2663:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2662:20:19"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2702:0:19"
            },
            "scope": 1037,
            "src": "2637:225:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "2933:160:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 167,
                          "name": "_startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "2964:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 168,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2978:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2978:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2964:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "737461727454696d652063616e6e6f7420626520696e207468652070617374",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3007:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71ce12c838f5b11d2075effbf86f6dddbb5c9b8a39eb41662ba13a6f92d262f3",
                          "typeString": "literal_string \"startTime cannot be in the past\""
                        },
                        "value": "startTime cannot be in the past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71ce12c838f5b11d2075effbf86f6dddbb5c9b8a39eb41662ba13a6f92d262f3",
                          "typeString": "literal_string \"startTime cannot be in the past\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2943:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2943:107:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:107:19"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "startTimeSOUL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "3060:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 175,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "3076:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3060:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:26:19"
                }
              ]
            },
            "functionSelector": "200ed855",
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 163,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2164,
                  "src": "2923:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2923:9:19"
              }
            ],
            "name": "setStartTimeSOUL",
            "nameLocation": "2877:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nameLocation": "2902:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "2894:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2894:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2893:20:19"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2933:0:19"
            },
            "scope": 1037,
            "src": "2868:225:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3786
            ],
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "3191:32:19",
              "statements": [
                {
                  "expression": {
                    "id": 185,
                    "name": "BASE_URI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63,
                    "src": "3208:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 184,
                  "id": 186,
                  "nodeType": "Return",
                  "src": "3201:15:19"
                }
              ]
            },
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3125:8:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 181,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3158:8:19"
            },
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3133:2:19"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3176:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3175:15:19"
            },
            "scope": 1037,
            "src": "3116:107:19",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "3295:37:19",
              "statements": [
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 195,
                      "name": "BASE_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3305:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 196,
                      "name": "_BASE_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "3316:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "3305:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3305:20:19"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 193,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 192,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2164,
                  "src": "3285:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3285:9:19"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "3238:10:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_BASE_URI",
                  "nameLocation": "3265:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "3249:25:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3249:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3248:27:19"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3295:0:19"
            },
            "scope": 1037,
            "src": "3229:103:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "3403:104:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 209,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "3429:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 208,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4025,
                          "src": "3421:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3421:17:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e20646f6573206e6f74206578697374",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3440:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3dfe0a9f34ad1d1915a5d3804d001dcc4ef1afcf3422b9b56e6886a98779408",
                          "typeString": "literal_string \"token does not exist\""
                        },
                        "value": "token does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3dfe0a9f34ad1d1915a5d3804d001dcc4ef1afcf3422b9b56e6886a98779408",
                          "typeString": "literal_string \"token does not exist\""
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3413:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3413:50:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "3413:50:19"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 214,
                      "name": "tokenTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "3480:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 216,
                    "indexExpression": {
                      "id": 215,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3491:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3480:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 206,
                  "id": 217,
                  "nodeType": "Return",
                  "src": "3473:27:19"
                }
              ]
            },
            "functionSelector": "4036ab78",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getType",
            "nameLocation": "3347:7:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3363:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "3355:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3354:18:19"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "3394:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3393:9:19"
            },
            "scope": 1037,
            "src": "3338:169:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "3732:78:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 224,
                        "name": "startTimeAVAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "3749:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3766:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3749:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 227,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3771:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3771:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 229,
                        "name": "startTimeAVAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "3790:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3771:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3749:54:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 223,
                  "id": 232,
                  "nodeType": "Return",
                  "src": "3742:61:19"
                }
              ]
            },
            "functionSelector": "a377d7ef",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintingStartedAVAX",
            "nameLocation": "3684:18:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3702:2:19"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "3726:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3726:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3725:6:19"
            },
            "scope": 1037,
            "src": "3675:135:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3873:78:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 239,
                        "name": "startTimeSOUL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3890:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3907:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3890:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 242,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3912:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3912:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 244,
                        "name": "startTimeSOUL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3931:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3912:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3890:54:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 238,
                  "id": 247,
                  "nodeType": "Return",
                  "src": "3883:61:19"
                }
              ]
            },
            "functionSelector": "11a2428a",
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintingStartedSOUL",
            "nameLocation": "3825:18:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3843:2:19"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3867:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3867:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3866:6:19"
            },
            "scope": 1037,
            "src": "3816:135:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "4165:53:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 265,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "4195:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 266,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "4203:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 262,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "4175:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3273",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2344,
                      "src": "4175:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3273_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3273_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4175:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:36:19"
                }
              ]
            },
            "documentation": {
              "id": 250,
              "nodeType": "StructuredDocumentation",
              "src": "3957:83:19",
              "text": " @dev allows owner to send ERC20s held by this contract to target"
            },
            "functionSelector": "43f37b98",
            "id": 270,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 260,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 259,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2164,
                  "src": "4155:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4155:9:19"
              }
            ],
            "name": "forwardERC20s",
            "nameLocation": "4054:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4084:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "4077:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3273",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 252,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 251,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3273,
                      "src": "4077:6:19"
                    },
                    "referencedDeclaration": 3273,
                    "src": "4077:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3273",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4108:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "4100:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4100:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "4133:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "4125:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4125:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4067:78:19"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4165:0:19"
            },
            "scope": 1037,
            "src": "4045:173:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "4348:228:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 281,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4374:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Celestial_$1037",
                                  "typeString": "contract Celestial"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Celestial_$1037",
                                  "typeString": "contract Celestial"
                                }
                              ],
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4366:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 279,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4366:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4366:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4366:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 284,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "4391:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4366:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682041564158",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4400:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        },
                        "value": "not enough AVAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        }
                      ],
                      "id": 278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4358:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4358:60:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "4358:60:19"
                },
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4444:2:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "4428:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4428:15:19",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 296,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 293,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3185,
                          "src": "4457:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4457:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4449:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 291,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4449:8:19",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4449:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4428:42:19"
                },
                {
                  "assignments": [
                    298,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "4486:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "4481:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 297,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4481:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 305,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4520:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 299,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "4496:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4496:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 301,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "4511:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4496:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4496:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4480:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 307,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "4541:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e642041564158",
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4547:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8084d9ace57e8f1ee2a5c352e12bc2515dc806481837d9c47f98db33525ce136",
                          "typeString": "literal_string \"Failed to send AVAX\""
                        },
                        "value": "Failed to send AVAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8084d9ace57e8f1ee2a5c352e12bc2515dc806481837d9c47f98db33525ce136",
                          "typeString": "literal_string \"Failed to send AVAX\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4533:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "4533:36:19"
                }
              ]
            },
            "documentation": {
              "id": 271,
              "nodeType": "StructuredDocumentation",
              "src": "4224:53:19",
              "text": " @dev allows owner to withdraw AVAX"
            },
            "functionSelector": "aeb5cd5e",
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 276,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 275,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2164,
                  "src": "4338:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4338:9:19"
              }
            ],
            "name": "withdrawAVAX",
            "nameLocation": "4291:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4312:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4304:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4304:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4303:17:19"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4348:0:19"
            },
            "scope": 1037,
            "src": "4282:294:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "4700:41:19",
              "statements": [
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 320,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4710:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 321,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "4723:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4710:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "4710:24:19"
                }
              ]
            },
            "documentation": {
              "id": 313,
              "nodeType": "StructuredDocumentation",
              "src": "4582:50:19",
              "text": " @dev merkle root for WL wallets"
            },
            "functionSelector": "7cb64759",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 318,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 317,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2164,
                  "src": "4690:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4690:9:19"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "4646:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "4668:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "4660:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4660:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4659:21:19"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4700:0:19"
            },
            "scope": 1037,
            "src": "4637:104:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "4807:40:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 333,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "4832:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 332,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4025,
                      "src": "4824:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4824:16:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 331,
                  "id": 335,
                  "nodeType": "Return",
                  "src": "4817:23:19"
                }
              ]
            },
            "functionSelector": "4ebbc92a",
            "id": 337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exist",
            "nameLocation": "4756:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4770:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "4762:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4762:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4761:17:19"
            },
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "4801:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4801:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4800:6:19"
            },
            "scope": 1037,
            "src": "4747:100:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "4986:1090:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 347,
                          "name": "CelestialsMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5017:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 348,
                            "name": "NUM_GEN0_CELESTIAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "5037:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 349,
                            "name": "NUM_GEN1_CELESTIAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "5058:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5037:39:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5017:59:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74206d696e7420616e796d6f72652063656c65737469616c73",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5090:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51424a94b34d45ae3b42d10135c9032eff3e41fb4cd1f8bb745045b732a082cb",
                          "typeString": "literal_string \"cannot mint anymore celestials\""
                        },
                        "value": "cannot mint anymore celestials"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51424a94b34d45ae3b42d10135c9032eff3e41fb4cd1f8bb745045b732a082cb",
                          "typeString": "literal_string \"cannot mint anymore celestials\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4996:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4996:136:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "4996:136:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5150:17:19",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 357,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "5159:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 356,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4025,
                            "src": "5151:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5151:16:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732027746f6b656e49642720697320616c726561647920746f6f6b656e",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5169:34:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_002f08452a6a96e431e11a68782bc667404fc46ff52fbead267e65fcbf7f1cfa",
                          "typeString": "literal_string \"this 'tokenId' is already tooken\""
                        },
                        "value": "this 'tokenId' is already tooken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_002f08452a6a96e431e11a68782bc667404fc46ff52fbead267e65fcbf7f1cfa",
                          "typeString": "literal_string \"this 'tokenId' is already tooken\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5142:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5142:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "5142:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 364,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "5235:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5246:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5235:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 367,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "5251:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 368,
                            "name": "NUM_GEN0_CELESTIAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "5262:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5251:29:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5235:45:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "27746f6b656e496427206d75737420626520696e207468652072616e6765",
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5294:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_090fd8c747fac93f87ae961572bd15fc4a5bde03799a14ecec22b080d72d04f5",
                          "typeString": "literal_string \"'tokenId' must be in the range\""
                        },
                        "value": "'tokenId' must be in the range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_090fd8c747fac93f87ae961572bd15fc4a5bde03799a14ecec22b080d72d04f5",
                          "typeString": "literal_string \"'tokenId' must be in the range\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5214:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5214:122:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "5214:122:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 375,
                            "name": "tokenTypes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "5367:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 377,
                          "indexExpression": {
                            "id": 376,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "5378:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5367:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5390:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5367:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468617420746f6b656e277320747970652068617320616c7265616479206265656e20736574",
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5405:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_203c13f8b95f36c41bfed282043ca1b3a63491fa3f09f78a9b7c11b96cb3d73f",
                          "typeString": "literal_string \"that token's type has already been set\""
                        },
                        "value": "that token's type has already been set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_203c13f8b95f36c41bfed282043ca1b3a63491fa3f09f78a9b7c11b96cb3d73f",
                          "typeString": "literal_string \"that token's type has already been set\""
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5346:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5346:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "5346:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 384,
                              "name": "celestialType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "5486:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 385,
                              "name": "ANGEL_TYPE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "5503:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5486:27:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 387,
                              "name": "celestialType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "5533:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 388,
                              "name": "DEMON_TYPE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "5550:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5533:27:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5486:74:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 391,
                            "name": "celestialType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 343,
                            "src": "5580:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 392,
                            "name": "NEPHILIM_TYPE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "5597:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5580:30:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5486:124:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642063656c65737469616c2074797065",
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5624:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9380bd1c6834786de94a4c7af476e28c94b94079bc9a21cfb1643c5f793be11",
                          "typeString": "literal_string \"invalid celestial type\""
                        },
                        "value": "invalid celestial type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9380bd1c6834786de94a4c7af476e28c94b94079bc9a21cfb1643c5f793be11",
                          "typeString": "literal_string \"invalid celestial type\""
                        }
                      ],
                      "id": 383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5465:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5465:193:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "5465:193:19"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 398,
                        "name": "tokenTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "5668:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "id": 399,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "5679:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5668:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 401,
                      "name": "celestialType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "5690:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5668:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "5668:35:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 404,
                      "name": "celestialType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "5726:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5743:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5726:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 411,
                        "name": "celestialType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "5794:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5811:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "5794:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 421,
                      "nodeType": "Block",
                      "src": "5856:42:19",
                      "statements": [
                        {
                          "expression": {
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5870:17:19",
                            "subExpression": {
                              "id": 418,
                              "name": "NephilimsMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "5870:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 420,
                          "nodeType": "ExpressionStatement",
                          "src": "5870:17:19"
                        }
                      ]
                    },
                    "id": 422,
                    "nodeType": "IfStatement",
                    "src": "5791:107:19",
                    "trueBody": {
                      "id": 417,
                      "nodeType": "Block",
                      "src": "5813:39:19",
                      "statements": [
                        {
                          "expression": {
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5827:14:19",
                            "subExpression": {
                              "id": 414,
                              "name": "DemonsMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "5827:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 416,
                          "nodeType": "ExpressionStatement",
                          "src": "5827:14:19"
                        }
                      ]
                    }
                  },
                  "id": 423,
                  "nodeType": "IfStatement",
                  "src": "5722:176:19",
                  "trueBody": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "5746:39:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5760:14:19",
                          "subExpression": {
                            "id": 407,
                            "name": "AngelsMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "5760:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "5760:14:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 425,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "5918:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 426,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "5922:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 424,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4081,
                        4110
                      ],
                      "referencedDeclaration": 4081,
                      "src": "5908:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5908:22:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "5908:22:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 430,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "5958:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5964:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 429,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3884,
                      "src": "5940:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5940:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:29:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 435,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6004:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 436,
                        "name": "celestialType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "6013:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 434,
                      "name": "onCelestialRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "5984:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5984:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "EmitStatement",
                  "src": "5979:48:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 440,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6061:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 439,
                      "name": "onCelestialCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "6042:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "EmitStatement",
                  "src": "6037:32:19"
                }
              ]
            },
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createCelestial",
            "nameLocation": "4878:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4912:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "4904:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4932:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "4924:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4924:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "celestialType",
                  "nameLocation": "4957:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "4949:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4894:82:19"
            },
            "returnParameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4986:0:19"
            },
            "scope": 1037,
            "src": "4869:1207:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "6241:316:19",
              "statements": [
                {
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "6285:112:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 467,
                            "name": "CelestialsMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "6299:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6319:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6299:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 470,
                        "nodeType": "ExpressionStatement",
                        "src": "6299:21:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 472,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "6351:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 473,
                                "name": "tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 449,
                                "src": "6355:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 475,
                              "indexExpression": {
                                "id": 474,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 458,
                                "src": "6364:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6355:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 476,
                                "name": "celestialTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 452,
                                "src": "6368:14:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 478,
                              "indexExpression": {
                                "id": 477,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 458,
                                "src": "6383:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6368:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 471,
                            "name": "_createCelestial",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "6334:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6334:52:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "6334:52:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 461,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "6271:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 462,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "6275:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6271:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 482,
                  "initializationExpression": {
                    "assignments": [
                      458
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6264:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "6256:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 460,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6268:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6256:13:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6280:3:19",
                      "subExpression": {
                        "id": 464,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "6280:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 466,
                    "nodeType": "ExpressionStatement",
                    "src": "6280:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "6251:146:19"
                }
              ]
            },
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createCelestials",
            "nameLocation": "6091:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "6126:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "6118:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6118:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "6156:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "6139:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6139:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "nodeType": "ArrayTypeName",
                    "src": "6139:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "celestialTypes",
                  "nameLocation": "6191:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "6174:31:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 450,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6174:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 451,
                    "nodeType": "ArrayTypeName",
                    "src": "6174:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6223:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "6215:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6215:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6108:123:19"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6241:0:19"
            },
            "scope": 1037,
            "src": "6082:475:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3777
            ],
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "6695:256:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 494,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 486,
                            "src": "6734:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 493,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4025,
                          "src": "6726:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6726:16:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6756:49:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6705:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6705:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "6705:110:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 503,
                              "name": "_baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                188
                              ],
                              "referencedDeclaration": 188,
                              "src": "6885:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view returns (string memory)"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6885:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2f",
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6897:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            "value": "/"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 506,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 486,
                                "src": "6902:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5254,
                              "src": "6902:16:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6902:18:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a736f6e",
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6922:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            },
                            "value": ".json"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            }
                          ],
                          "expression": {
                            "id": 501,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6868:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6868:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6868:62:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6844:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 499,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6844:6:19",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6844:100:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 491,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "6825:119:19"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "6572:8:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 488,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6650:8:19"
            },
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6589:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "6581:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6581:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6580:17:19"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "6676:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6676:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6675:15:19"
            },
            "scope": 1037,
            "src": "6563:388:19",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "7205:1528:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 532,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "7264:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7278:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7264:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d697373696e6720726f6f74",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7281:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55d544494830fe3d7f2c2ae7a6276f2264d517f1283542c86a8e66a19083c310",
                          "typeString": "literal_string \"missing root\""
                        },
                        "value": "missing root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55d544494830fe3d7f2c2ae7a6276f2264d517f1283542c86a8e66a19083c310",
                          "typeString": "literal_string \"missing root\""
                        }
                      ],
                      "id": 531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7256:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7256:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "7256:40:19"
                },
                {
                  "assignments": [
                    539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 539,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "7508:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 615,
                      "src": "7500:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 538,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7500:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 547,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 543,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3185,
                              "src": "7542:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7542:12:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 541,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7525:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7525:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7525:30:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 540,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7515:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7515:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7500:56:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 551,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "7606:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 552,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "7620:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 553,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "7632:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 549,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2946,
                            "src": "7587:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$2946_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2945,
                          "src": "7587:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7587:50:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206164647265737320646f6573206e6f742068617665207065726d697373696f6e",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7651:39:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76f77a4f40a688e4487c8292cc8b78bbd2b964569779d8e1775f3a511530673",
                          "typeString": "literal_string \"this address does not have permission\""
                        },
                        "value": "this address does not have permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76f77a4f40a688e4487c8292cc8b78bbd2b964569779d8e1775f3a511530673",
                          "typeString": "literal_string \"this address does not have permission\""
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7566:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7566:134:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "7566:134:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 559,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "7776:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7783:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7776:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 562,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "7788:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7795:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "7788:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7776:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 566,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "7800:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7807:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "7800:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7776:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e74697479206d7573742062652031206f722035206f72203130",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7823:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        },
                        "value": "quantity must be 1 or 5 or 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        }
                      ],
                      "id": 558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7755:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7755:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "7755:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 574,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "7895:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 575,
                              "name": "tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "7902:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7902:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7895:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 578,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "7921:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 579,
                              "name": "celestialTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 526,
                              "src": "7928:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7928:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7921:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7895:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206d75737420626520657175616c20746f20717479",
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7963:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        },
                        "value": "Length of the amount of the nft must be equal to qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        }
                      ],
                      "id": 573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7874:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7874:153:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "7874:153:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 587,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8451:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8451:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 589,
                            "name": "CELESTIAL_PRICE_WHITELIST",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "8464:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 590,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "8492:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8464:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8451:44:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682041564158",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8509:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        },
                        "value": "not enough AVAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        }
                      ],
                      "id": 586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8430:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8430:106:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "8430:106:19"
                },
                {
                  "expression": {
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 596,
                      "name": "CelestialsMintedWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "8547:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 597,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "8576:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8547:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "8547:32:19"
                },
                {
                  "expression": {
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 600,
                        "name": "whitelistClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "8589:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 603,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 601,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3185,
                          "src": "8606:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8606:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8589:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 604,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "8623:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8589:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "8589:37:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 608,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "8682:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 609,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 523,
                        "src": "8687:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 610,
                        "name": "celestialTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "8697:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 611,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3185,
                          "src": "8713:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8713:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 607,
                      "name": "_createCelestials",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "8664:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256[] memory,uint256[] memory,address)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8664:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "8664:62:19"
                }
              ]
            },
            "documentation": {
              "id": 515,
              "nodeType": "StructuredDocumentation",
              "src": "6957:36:19",
              "text": " @dev GEN0 minting"
            },
            "functionSelector": "7b82fda6",
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 529,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 528,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2269,
                  "src": "7191:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "7191:13:19"
              }
            ],
            "name": "mintCelestialWhitelist",
            "nameLocation": "7007:22:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "7058:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "7039:31:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 516,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7039:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 517,
                    "nodeType": "ArrayTypeName",
                    "src": "7039:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "7088:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "7080:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7080:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "7118:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "7101:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 521,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7101:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 522,
                    "nodeType": "ArrayTypeName",
                    "src": "7101:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "celestialTypes",
                  "nameLocation": "7153:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "7136:31:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 524,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7136:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 525,
                    "nodeType": "ArrayTypeName",
                    "src": "7136:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7029:144:19"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7205:0:19"
            },
            "scope": 1037,
            "src": "6998:1735:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "8945:859:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 631,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "9042:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9049:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9042:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 634,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "9054:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9061:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "9054:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9042:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 638,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "9066:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9073:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "9066:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9042:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e74697479206d7573742062652031206f722035206f72203130",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9089:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        },
                        "value": "quantity must be 1 or 5 or 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        }
                      ],
                      "id": 630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9021:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9021:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "9021:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 646,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "9161:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 647,
                              "name": "tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 622,
                              "src": "9168:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9168:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9161:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 650,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "9187:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 651,
                              "name": "celestialTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "9194:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9194:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9187:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9161:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206d75737420626520657175616c20746f20717479",
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9229:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        },
                        "value": "Length of the amount of the nft must be equal to qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        }
                      ],
                      "id": 645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9140:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9140:153:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "9140:153:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 659,
                                "name": "CelestialsMintedWithAVAX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "9325:24:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 660,
                                "name": "qty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 619,
                                "src": "9352:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9325:30:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 662,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9324:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 663,
                                "name": "NUM_GEN0_CELESTIAL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "9377:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 664,
                                "name": "CelestialsMintedWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "9398:25:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9377:46:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 666,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9376:48:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9324:100:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e2774206d696e742074686174206d616e79207269676874206e6f77",
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9438:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19ec9320f1e7ba3c9feca046f8317d8407143de9371f4c78a9700950158cbe1d",
                          "typeString": "literal_string \"you can't mint that many right now\""
                        },
                        "value": "you can't mint that many right now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19ec9320f1e7ba3c9feca046f8317d8407143de9371f4c78a9700950158cbe1d",
                          "typeString": "literal_string \"you can't mint that many right now\""
                        }
                      ],
                      "id": 658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9303:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9303:181:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "9303:181:19"
                },
                {
                  "assignments": [
                    672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 672,
                      "mutability": "mutable",
                      "name": "transactionCost",
                      "nameLocation": "9545:15:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 697,
                      "src": "9537:23:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 671,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9537:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 676,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 673,
                      "name": "CELESTIAL_PRICE_AVAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "9563:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 674,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "9586:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9563:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9537:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 678,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9607:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9607:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 680,
                          "name": "transactionCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 672,
                          "src": "9620:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9607:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682041564158",
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9637:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        },
                        "value": "not enough AVAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        }
                      ],
                      "id": 677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9599:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9599:56:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "9599:56:19"
                },
                {
                  "expression": {
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 685,
                      "name": "CelestialsMintedWithAVAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "9666:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 686,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "9694:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9666:31:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "9666:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 690,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "9753:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 691,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "9758:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 692,
                        "name": "celestialTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "9768:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 693,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3185,
                          "src": "9784:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9784:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 689,
                      "name": "_createCelestials",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "9735:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256[] memory,uint256[] memory,address)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9735:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "9735:62:19"
                }
              ]
            },
            "documentation": {
              "id": 617,
              "nodeType": "StructuredDocumentation",
              "src": "8739:36:19",
              "text": " @dev GEN0 minting"
            },
            "functionSelector": "a7d5ec2d",
            "id": 698,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 628,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 627,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2269,
                  "src": "8931:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "8931:13:19"
              }
            ],
            "name": "mintCelestialWithAVAX",
            "nameLocation": "8789:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "8828:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "8820:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8820:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "8858:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "8841:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 620,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8841:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 621,
                    "nodeType": "ArrayTypeName",
                    "src": "8841:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "celestialTypes",
                  "nameLocation": "8893:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "8876:31:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 623,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8876:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 624,
                    "nodeType": "ArrayTypeName",
                    "src": "8876:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8810:103:19"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8945:0:19"
            },
            "scope": 1037,
            "src": "8780:1024:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "10008:1238:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 713,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "10105:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10112:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10105:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 716,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "10117:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10124:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "10117:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10105:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 720,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "10129:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10136:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "10129:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10105:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e74697479206d7573742062652031206f722035206f72203130",
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10152:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        },
                        "value": "quantity must be 1 or 5 or 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10084:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10084:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "10084:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 728,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "10224:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 729,
                              "name": "tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "10231:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10231:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10224:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 732,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "10250:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 733,
                              "name": "celestialTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "10257:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10257:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10250:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10224:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206d75737420626520657175616c20746f20717479",
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10292:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        },
                        "value": "Length of the amount of the nft must be equal to qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        }
                      ],
                      "id": 727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10203:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10203:153:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "10203:153:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 741,
                                "name": "CelestialsMintedWithAVAX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "10388:24:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 742,
                                "name": "qty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "10415:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10388:30:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 744,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10387:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 745,
                                "name": "NUM_GEN0_CELESTIAL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "10440:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 746,
                                "name": "CelestialsMintedWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "10461:25:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10440:46:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 748,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10439:48:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10387:100:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e2774206d696e742074686174206d616e79207269676874206e6f77",
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10501:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19ec9320f1e7ba3c9feca046f8317d8407143de9371f4c78a9700950158cbe1d",
                          "typeString": "literal_string \"you can't mint that many right now\""
                        },
                        "value": "you can't mint that many right now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19ec9320f1e7ba3c9feca046f8317d8407143de9371f4c78a9700950158cbe1d",
                          "typeString": "literal_string \"you can't mint that many right now\""
                        }
                      ],
                      "id": 740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10366:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10366:181:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "10366:181:19"
                },
                {
                  "assignments": [
                    754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 754,
                      "mutability": "mutable",
                      "name": "transactionCostSOUL",
                      "nameLocation": "10605:19:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 807,
                      "src": "10597:27:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10597:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 755,
                      "name": "currentSOULMintCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "10627:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 756,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "10649:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10627:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10597:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 762,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3185,
                                "src": "10698:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10698:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 760,
                              "name": "soul",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "10683:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Soul_$3156",
                                "typeString": "contract Soul"
                              }
                            },
                            "id": 761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4517,
                            "src": "10683:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10683:28:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 765,
                          "name": "transactionCostSOUL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "10715:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10683:51:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820534f554c",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10748:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df5bacba8cec89c37b47088e669ec7ed71c9134fa429775736764cd7ce8aa24e",
                          "typeString": "literal_string \"not enough SOUL\""
                        },
                        "value": "not enough SOUL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df5bacba8cec89c37b47088e669ec7ed71c9134fa429775736764cd7ce8aa24e",
                          "typeString": "literal_string \"not enough SOUL\""
                        }
                      ],
                      "id": 759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10662:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10662:113:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "10662:113:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 770,
                        "name": "CelestialsMintedWithSOUL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "10803:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 771,
                        "name": "CELESTIAL_PER_SOUL_MINT_LEVEL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "10831:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10803:57:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 773,
                          "name": "CelestialsMintedWithSOUL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "10876:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 774,
                          "name": "qty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "10903:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10876:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 776,
                        "name": "CELESTIAL_PER_SOUL_MINT_LEVEL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "10909:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10876:62:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10803:135:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 786,
                  "nodeType": "IfStatement",
                  "src": "10786:233:19",
                  "trueBody": {
                    "id": 785,
                    "nodeType": "Block",
                    "src": "10949:70:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 779,
                            "name": "currentSOULMintCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "10963:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 780,
                              "name": "currentSOULMintCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "10985:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11007:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "10985:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10963:45:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 784,
                        "nodeType": "ExpressionStatement",
                        "src": "10963:45:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 787,
                      "name": "CelestialsMintedWithSOUL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "11029:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 788,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "11057:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11029:31:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "11029:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 794,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3185,
                          "src": "11106:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11106:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 796,
                        "name": "transactionCostSOUL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "11120:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 791,
                        "name": "soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "11092:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Soul_$3156",
                          "typeString": "contract Soul"
                        }
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3127,
                      "src": "11092:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11092:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "11092:48:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 800,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 701,
                        "src": "11195:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 801,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "11200:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 802,
                        "name": "celestialTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "11210:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 803,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3185,
                          "src": "11226:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11226:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 799,
                      "name": "_createCelestials",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "11177:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256[] memory,uint256[] memory,address)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11177:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "11177:62:19"
                }
              ]
            },
            "documentation": {
              "id": 699,
              "nodeType": "StructuredDocumentation",
              "src": "9810:36:19",
              "text": " @dev GEN0 minting"
            },
            "functionSelector": "1dbb64ba",
            "id": 808,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 710,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 709,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2269,
                  "src": "9994:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "9994:13:19"
              }
            ],
            "name": "mintCelestialWithSoul",
            "nameLocation": "9860:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "9899:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "9891:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9891:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "9929:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "9912:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 702,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9912:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 703,
                    "nodeType": "ArrayTypeName",
                    "src": "9912:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "celestialTypes",
                  "nameLocation": "9964:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "9947:31:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 705,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9947:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 706,
                    "nodeType": "ArrayTypeName",
                    "src": "9947:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9881:103:19"
            },
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10008:0:19"
            },
            "scope": 1037,
            "src": "9851:1395:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "11336:366:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 818,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "11364:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 817,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3687,
                            "src": "11354:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11354:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11374:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11354:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265206973206e6f206e667420696e20796f75722062616c616e6365",
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11377:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        },
                        "value": "there is no nft in your balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        }
                      ],
                      "id": 816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11346:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11346:65:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "11346:65:19"
                },
                {
                  "assignments": [
                    826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 826,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "11429:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 869,
                      "src": "11421:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 825,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11421:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 830,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 828,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "11449:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 827,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3687,
                      "src": "11439:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11439:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11421:35:19"
                },
                {
                  "assignments": [
                    835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 835,
                      "mutability": "mutable",
                      "name": "tokenIds",
                      "nameLocation": "11483:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 869,
                      "src": "11466:25:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 833,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11466:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 834,
                        "nodeType": "ArrayTypeName",
                        "src": "11466:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 841,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 839,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "11508:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11494:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 836,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11498:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 837,
                        "nodeType": "ArrayTypeName",
                        "src": "11498:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11494:22:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11466:50:19"
                },
                {
                  "body": {
                    "id": 865,
                    "nodeType": "Block",
                    "src": "11564:107:19",
                    "statements": [
                      {
                        "assignments": [
                          853
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 853,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "11586:7:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 865,
                            "src": "11578:15:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 852,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11578:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 858,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 855,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "11616:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 856,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "11623:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 854,
                            "name": "tokenOfOwnerByIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2615,
                            "src": "11596:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11596:29:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11578:47:19"
                      },
                      {
                        "expression": {
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 859,
                              "name": "tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 835,
                              "src": "11639:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 861,
                            "indexExpression": {
                              "id": 860,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "11648:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11639:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 862,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "11653:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11639:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 864,
                        "nodeType": "ExpressionStatement",
                        "src": "11639:21:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 846,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "11546:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 847,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "11550:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11546:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 866,
                  "initializationExpression": {
                    "assignments": [
                      843
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11539:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "11531:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11531:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 845,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11543:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11531:13:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11559:3:19",
                      "subExpression": {
                        "id": 849,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "11559:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 851,
                    "nodeType": "ExpressionStatement",
                    "src": "11559:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "11526:145:19"
                },
                {
                  "expression": {
                    "id": 867,
                    "name": "tokenIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 835,
                    "src": "11687:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 815,
                  "id": 868,
                  "nodeType": "Return",
                  "src": "11680:15:19"
                }
              ]
            },
            "functionSelector": "70022bda",
            "id": 870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetTokenIdsOfOwner",
            "nameLocation": "11261:18:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "11288:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "11280:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11280:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11279:16:19"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "11318:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 812,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11318:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 813,
                    "nodeType": "ArrayTypeName",
                    "src": "11318:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11317:18:19"
            },
            "scope": 1037,
            "src": "11252:450:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 938,
              "nodeType": "Block",
              "src": "11826:472:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 881,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "11854:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 880,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3687,
                            "src": "11844:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11844:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11864:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11844:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265206973206e6f206e667420696e20796f75722062616c616e6365",
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11867:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        },
                        "value": "there is no nft in your balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        }
                      ],
                      "id": 879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11836:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11836:65:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "11836:65:19"
                },
                {
                  "assignments": [
                    889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 889,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "11919:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 938,
                      "src": "11911:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 888,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11911:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 893,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 891,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "11939:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 890,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3687,
                      "src": "11929:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11929:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11911:35:19"
                },
                {
                  "assignments": [
                    898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 898,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "11979:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 938,
                      "src": "11956:26:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Celestial.CelestialInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 896,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 895,
                            "name": "CelestialInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "11956:13:19"
                          },
                          "referencedDeclaration": 25,
                          "src": "11956:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                            "typeString": "struct Celestial.CelestialInfo"
                          }
                        },
                        "id": 897,
                        "nodeType": "ArrayTypeName",
                        "src": "11956:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Celestial.CelestialInfo[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 905,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 903,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "12005:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11985:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Celestial.CelestialInfo memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 900,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 899,
                            "name": "CelestialInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "11989:13:19"
                          },
                          "referencedDeclaration": 25,
                          "src": "11989:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                            "typeString": "struct Celestial.CelestialInfo"
                          }
                        },
                        "id": 901,
                        "nodeType": "ArrayTypeName",
                        "src": "11989:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Celestial.CelestialInfo[]"
                        }
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11985:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Celestial.CelestialInfo memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11956:57:19"
                },
                {
                  "body": {
                    "id": 934,
                    "nodeType": "Block",
                    "src": "12061:211:19",
                    "statements": [
                      {
                        "assignments": [
                          917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 917,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "12083:7:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 934,
                            "src": "12075:15:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 916,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12075:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 922,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 919,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "12113:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 920,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "12121:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 918,
                            "name": "tokenOfOwnerByIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2615,
                            "src": "12093:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12093:30:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12075:48:19"
                      },
                      {
                        "expression": {
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 923,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "12137:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Celestial.CelestialInfo memory[] memory"
                              }
                            },
                            "id": 925,
                            "indexExpression": {
                              "id": 924,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "12141:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12137:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                              "typeString": "struct Celestial.CelestialInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 927,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 917,
                                "src": "12187:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 928,
                                  "name": "tokenTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "12227:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 930,
                                "indexExpression": {
                                  "id": 929,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 917,
                                  "src": "12238:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12227:19:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 926,
                              "name": "CelestialInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "12146:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_CelestialInfo_$25_storage_ptr_$",
                                "typeString": "type(struct Celestial.CelestialInfo storage pointer)"
                              }
                            },
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "tokenId",
                              "celestialType"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "12146:115:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                              "typeString": "struct Celestial.CelestialInfo memory"
                            }
                          },
                          "src": "12137:124:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                            "typeString": "struct Celestial.CelestialInfo memory"
                          }
                        },
                        "id": 933,
                        "nodeType": "ExpressionStatement",
                        "src": "12137:124:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 910,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "12043:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 911,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "12047:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12043:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 935,
                  "initializationExpression": {
                    "assignments": [
                      907
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 907,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12036:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 935,
                        "src": "12028:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12028:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 909,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12040:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12028:13:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12056:3:19",
                      "subExpression": {
                        "id": 913,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "12056:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 915,
                    "nodeType": "ExpressionStatement",
                    "src": "12056:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "12023:249:19"
                },
                {
                  "expression": {
                    "id": 936,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 898,
                    "src": "12288:3:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Celestial.CelestialInfo memory[] memory"
                    }
                  },
                  "functionReturnParameters": 878,
                  "id": 937,
                  "nodeType": "Return",
                  "src": "12281:10:19"
                }
              ]
            },
            "functionSelector": "9ea6db3d",
            "id": 939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CelestialsOfOwner",
            "nameLocation": "11717:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "11743:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "11735:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11735:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11734:16:19"
            },
            "returnParameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "11798:22:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Celestial.CelestialInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 875,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 874,
                        "name": "CelestialInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25,
                        "src": "11798:13:19"
                      },
                      "referencedDeclaration": 25,
                      "src": "11798:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                        "typeString": "struct Celestial.CelestialInfo"
                      }
                    },
                    "id": 876,
                    "nodeType": "ArrayTypeName",
                    "src": "11798:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Celestial.CelestialInfo[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11797:24:19"
            },
            "scope": 1037,
            "src": "11708:590:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1035,
              "nodeType": "Block",
              "src": "12441:743:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 951,
                          "name": "_page",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "12459:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12468:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12459:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265206973206e6f206e656765746976652070616765",
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12471:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dab7535309f8e96f0a86d1d1b8d3907ad06fc80f1e0f10d52e69a440ee115aa",
                          "typeString": "literal_string \"there is no negetive page\""
                        },
                        "value": "there is no negetive page"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dab7535309f8e96f0a86d1d1b8d3907ad06fc80f1e0f10d52e69a440ee115aa",
                          "typeString": "literal_string \"there is no negetive page\""
                        }
                      ],
                      "id": 950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12451:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12451:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "ExpressionStatement",
                  "src": "12451:48:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 959,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "12527:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 958,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3687,
                            "src": "12517:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12517:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12537:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12517:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265206973206e6f206e667420696e20796f75722062616c616e6365",
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12540:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        },
                        "value": "there is no nft in your balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        }
                      ],
                      "id": 957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12509:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12509:65:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "12509:65:19"
                },
                {
                  "assignments": [
                    970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 970,
                      "mutability": "mutable",
                      "name": "celestials",
                      "nameLocation": "12607:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1035,
                      "src": "12584:33:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Celestial.CelestialInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 968,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 967,
                            "name": "CelestialInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "12584:13:19"
                          },
                          "referencedDeclaration": 25,
                          "src": "12584:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                            "typeString": "struct Celestial.CelestialInfo"
                          }
                        },
                        "id": 969,
                        "nodeType": "ArrayTypeName",
                        "src": "12584:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Celestial.CelestialInfo[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 977,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12640:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "12620:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Celestial.CelestialInfo memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 972,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 971,
                            "name": "CelestialInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "12624:13:19"
                          },
                          "referencedDeclaration": 25,
                          "src": "12624:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                            "typeString": "struct Celestial.CelestialInfo"
                          }
                        },
                        "id": 973,
                        "nodeType": "ArrayTypeName",
                        "src": "12624:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Celestial.CelestialInfo[]"
                        }
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12620:22:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Celestial.CelestialInfo memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12584:58:19"
                },
                {
                  "assignments": [
                    979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 979,
                      "mutability": "mutable",
                      "name": "StartPoint",
                      "nameLocation": "12660:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1035,
                      "src": "12652:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 978,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12652:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 983,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 980,
                      "name": "_page",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "12673:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12681:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "12673:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12652:30:19"
                },
                {
                  "assignments": [
                    985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 985,
                      "mutability": "mutable",
                      "name": "EndPoint",
                      "nameLocation": "12700:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1035,
                      "src": "12692:16:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12692:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 989,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 986,
                      "name": "StartPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "12711:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12724:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "12711:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12692:33:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 990,
                      "name": "EndPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 985,
                      "src": "12740:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 992,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "12761:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 991,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3687,
                        "src": "12751:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12751:17:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12740:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1002,
                  "nodeType": "IfStatement",
                  "src": "12736:87:19",
                  "trueBody": {
                    "id": 1001,
                    "nodeType": "Block",
                    "src": "12770:53:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 995,
                            "name": "EndPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "12784:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 997,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 941,
                                "src": "12805:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 996,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3687,
                              "src": "12795:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12795:17:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12784:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1000,
                        "nodeType": "ExpressionStatement",
                        "src": "12784:28:19"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 1031,
                    "nodeType": "Block",
                    "src": "12880:271:19",
                    "statements": [
                      {
                        "assignments": [
                          1014
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1014,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "12902:7:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 1031,
                            "src": "12894:15:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1013,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12894:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1019,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1016,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "12932:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1017,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "12940:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1015,
                            "name": "tokenOfOwnerByIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2615,
                            "src": "12912:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12912:30:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12894:48:19"
                      },
                      {
                        "expression": {
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1020,
                              "name": "celestials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "13009:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Celestial.CelestialInfo memory[] memory"
                              }
                            },
                            "id": 1022,
                            "indexExpression": {
                              "id": 1021,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "13020:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13009:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                              "typeString": "struct Celestial.CelestialInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1024,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1014,
                                "src": "13066:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1025,
                                  "name": "tokenTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "13106:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 1027,
                                "indexExpression": {
                                  "id": 1026,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1014,
                                  "src": "13117:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13106:19:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1023,
                              "name": "CelestialInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "13025:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_CelestialInfo_$25_storage_ptr_$",
                                "typeString": "type(struct Celestial.CelestialInfo storage pointer)"
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "tokenId",
                              "celestialType"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "13025:115:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                              "typeString": "struct Celestial.CelestialInfo memory"
                            }
                          },
                          "src": "13009:131:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                            "typeString": "struct Celestial.CelestialInfo memory"
                          }
                        },
                        "id": 1030,
                        "nodeType": "ExpressionStatement",
                        "src": "13009:131:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1007,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1004,
                      "src": "12861:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1008,
                      "name": "EndPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 985,
                      "src": "12865:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12861:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1032,
                  "initializationExpression": {
                    "assignments": [
                      1004
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12845:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 1032,
                        "src": "12837:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12837:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1006,
                    "initialValue": {
                      "id": 1005,
                      "name": "StartPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "12849:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12837:22:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12875:3:19",
                      "subExpression": {
                        "id": 1010,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "12875:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1012,
                    "nodeType": "ExpressionStatement",
                    "src": "12875:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "12832:319:19"
                },
                {
                  "expression": {
                    "id": 1033,
                    "name": "celestials",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 970,
                    "src": "13167:10:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Celestial.CelestialInfo memory[] memory"
                    }
                  },
                  "functionReturnParameters": 949,
                  "id": 1034,
                  "nodeType": "Return",
                  "src": "13160:17:19"
                }
              ]
            },
            "functionSelector": "e7c235b9",
            "id": 1036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bachedCelestialsOfOwner",
            "nameLocation": "12313:23:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "12345:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "12337:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12337:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "_page",
                  "nameLocation": "12361:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "12353:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12353:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12336:31:19"
            },
            "returnParameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "12413:22:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Celestial.CelestialInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 946,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 945,
                        "name": "CelestialInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25,
                        "src": "12413:13:19"
                      },
                      "referencedDeclaration": 25,
                      "src": "12413:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                        "typeString": "struct Celestial.CelestialInfo"
                      }
                    },
                    "id": 947,
                    "nodeType": "ArrayTypeName",
                    "src": "12413:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Celestial.CelestialInfo[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12412:24:19"
            },
            "scope": 1037,
            "src": "12304:880:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1038,
        "src": "408:12778:19",
        "usedErrors": []
      }
    ],
    "src": "37:13150:19"
  },
  "bytecode": "608060405269043c33c1937564800000600b5560006015553480156200002457600080fd5b5060405162003de638038062003de683398101604081905262000047916200027c565b6040518060400160405280601481526020017f43656c65737469616c2056657273652047616d650000000000000000000000008152506040518060400160405280601481526020017f43454c45535449414c2d56455253452d47414d450000000000000000000000008152508160009080519060200190620000cb929190620001a3565b508051620000e1906001906020840190620001a3565b505050620000fe620000f86200014d60201b60201c565b62000151565b600a805460ff60a01b19169055600060155581516200012590600f906020850190620001a3565b50600c80546001600160a01b0319166001600160a01b039290921691909117905550620003a9565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001b1906200036d565b90600052602060002090601f016020900481019282620001d5576000855562000220565b82601f10620001f057805160ff191683800117855562000220565b8280016001018555821562000220579182015b828111156200022057825182559160200191906001019062000203565b506200022e92915062000232565b5090565b5b808211156200022e576000815560010162000233565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200027757600080fd5b919050565b600080604083850312156200029057600080fd5b82516001600160401b0380821115620002a857600080fd5b818501915085601f830112620002bd57600080fd5b815181811115620002d257620002d262000249565b604051601f8201601f19908116603f01168101908382118183101715620002fd57620002fd62000249565b816040528281526020935088848487010111156200031a57600080fd5b600091505b828210156200033e57848201840151818301850152908301906200031f565b82821115620003505760008484830101525b9550620003629150508582016200025f565b925050509250929050565b600181811c908216806200038257607f821691505b602082108103620003a357634e487b7160e01b600052602260045260246000fd5b50919050565b613a2d80620003b96000396000f3fe6080604052600436106103ad5760003560e01c8063758c0b9e116101e7578063b4fad9af1161010d578063e7b27af7116100a0578063e9f169f71161006f578063e9f169f714610a88578063f2fde38b14610a9e578063f7be4f1114610abe578063ff2a765614610ad357600080fd5b8063e7b27af7146109f3578063e7c235b914610a09578063e7d97e5214610a29578063e985e9c514610a3f57600080fd5b8063db4bec44116100dc578063db4bec4414610971578063dbddb26a1461099e578063de20bc92146109b3578063e2ea1319146109d357600080fd5b8063b4fad9af146108f5578063b88d4fde14610911578063bc7d403414610931578063c87b56dd1461095157600080fd5b80639ea6db3d11610185578063a756a1df11610154578063a756a1df146108a3578063a7d5ec2d146108b9578063aeb5cd5e146108cc578063aff9efe8146108df57600080fd5b80639ea6db3d1461082b578063a22cb46514610858578063a377d7ef14610878578063a682f8621461088d57600080fd5b8063815b7a8c116101c1578063815b7a8c146107c25780638da5cb5b146107e257806395d89b41146108005780639b76dbca1461081557600080fd5b8063758c0b9e146107795780637b82fda61461078f5780637cb64759146107a257600080fd5b806333f6832a116102d75780635c975abb1161026a57806370022bda1161023957806370022bda1461070157806370a082311461072e578063715018a61461074e57806373033bda1461076357600080fd5b80635c975abb146106965780636352211e146106b557806365e940a2146106d55780636b988176146106eb57600080fd5b806343f37b98116102a657806343f37b98146106165780634ebbc92a146106365780634f6ccce71461065657806355f804b31461067657600080fd5b806333f6832a146105895780633c1d4de7146105b65780634036ab78146105d657806342842e0e146105f657600080fd5b8063200ed8551161034f5780632cfb18b11161031e5780632cfb18b1146105215780632eb4a7ab1461053d5780632f745c591461055357806332a2ec411461057357600080fd5b8063200ed855146104b757806323b872dd146104d75780632a6414b0146104f75780632b95b7321461050c57600080fd5b8063095ea7b31161038b578063095ea7b31461044157806311a2428a1461046357806318160ddd146104785780631dbb64ba1461049757600080fd5b806301ffc9a7146103b257806306fdde03146103e7578063081812fc14610409575b600080fd5b3480156103be57600080fd5b506103d26103cd366004612ffe565b610ae9565b60405190151581526020015b60405180910390f35b3480156103f357600080fd5b506103fc610b14565b6040516103de9190613073565b34801561041557600080fd5b50610429610424366004613086565b610ba6565b6040516001600160a01b0390911681526020016103de565b34801561044d57600080fd5b5061046161045c3660046130b4565b610c33565b005b34801561046f57600080fd5b506103d2610d48565b34801561048457600080fd5b506008545b6040519081526020016103de565b3480156104a357600080fd5b506104616104b236600461319c565b610d64565b3480156104c357600080fd5b506104616104d2366004613086565b610fd4565b3480156104e357600080fd5b506104616104f2366004613209565b611053565b34801561050357600080fd5b50610489600181565b34801561051857600080fd5b50610489600281565b34801561052d57600080fd5b5061048967120a871cc002000081565b34801561054957600080fd5b5061048960105481565b34801561055f57600080fd5b5061048961056e3660046130b4565b611084565b34801561057f57600080fd5b5061048960165481565b34801561059557600080fd5b506104896105a4366004613086565b601b6020526000908152604090205481565b3480156105c257600080fd5b506104616105d1366004613086565b61111a565b3480156105e257600080fd5b506104896105f1366004613086565b611199565b34801561060257600080fd5b50610461610611366004613209565b6111fa565b34801561062257600080fd5b5061046161063136600461324a565b611215565b34801561064257600080fd5b506103d2610651366004613086565b611253565b34801561066257600080fd5b50610489610671366004613086565b61125e565b34801561068257600080fd5b5061046161069136600461328c565b6112f1565b3480156106a257600080fd5b50600a54600160a01b900460ff166103d2565b3480156106c157600080fd5b506104296106d0366004613086565b611327565b3480156106e157600080fd5b5061048960125481565b3480156106f757600080fd5b5061048961138881565b34801561070d57600080fd5b5061072161071c3660046132fe565b61139e565b6040516103de919061331b565b34801561073a57600080fd5b506104896107493660046132fe565b61146e565b34801561075a57600080fd5b506104616114f5565b34801561076f57600080fd5b5061048961271081565b34801561078557600080fd5b5061048960175481565b61046161079d36600461335f565b61152b565b3480156107ae57600080fd5b506104616107bd366004613086565b61174d565b3480156107ce57600080fd5b50600c54610429906001600160a01b031681565b3480156107ee57600080fd5b50600a546001600160a01b0316610429565b34801561080c57600080fd5b506103fc61177c565b34801561082157600080fd5b5061048960155481565b34801561083757600080fd5b5061084b6108463660046132fe565b61178b565b6040516103de9190613425565b34801561086457600080fd5b50610461610873366004613482565b611897565b34801561088457600080fd5b506103d261195b565b34801561089957600080fd5b5061048960195481565b3480156108af57600080fd5b50610489613a9881565b6104616108c736600461319c565b611975565b6104616108da366004613086565b611a96565b3480156108eb57600080fd5b5061048960185481565b34801561090157600080fd5b506104896714d1120d7b16000081565b34801561091d57600080fd5b5061046161092c3660046134bb565b611b70565b34801561093d57600080fd5b50600d54610429906001600160a01b031681565b34801561095d57600080fd5b506103fc61096c366004613086565b611ba2565b34801561097d57600080fd5b5061048961098c3660046132fe565b60116020526000908152604090205481565b3480156109aa57600080fd5b506103fc611c49565b3480156109bf57600080fd5b50600e54610429906001600160a01b031681565b3480156109df57600080fd5b506104616109ee3660046132fe565b611cd7565b3480156109ff57600080fd5b50610489601a5481565b348015610a1557600080fd5b5061084b610a243660046130b4565b611d23565b348015610a3557600080fd5b50610489600b5481565b348015610a4b57600080fd5b506103d2610a5a36600461357f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a9457600080fd5b5061048960135481565b348015610aaa57600080fd5b50610461610ab93660046132fe565b611e44565b348015610aca57600080fd5b50610489600381565b348015610adf57600080fd5b5061048960145481565b60006001600160e01b0319821663780e9d6360e01b1480610b0e5750610b0e82611edf565b92915050565b606060008054610b23906135ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4f906135ad565b8015610b9c5780601f10610b7157610100808354040283529160200191610b9c565b820191906000526020600020905b815481529060010190602001808311610b7f57829003601f168201915b5050505050905090565b6000610bb182611f2f565b610c175760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610c3e82611327565b9050806001600160a01b0316836001600160a01b031603610cab5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610c0e565b336001600160a01b0382161480610cc75750610cc78133610a5a565b610d395760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610c0e565b610d438383611f4c565b505050565b6000601a54600014158015610d5f5750601a544210155b905090565b600a54600160a01b900460ff1615610d8e5760405162461bcd60e51b8152600401610c0e906135e7565b8260011480610d9d5750826005145b80610da8575082600a145b610dc45760405162461bcd60e51b8152600401610c0e90613611565b815183148015610dd45750805183145b610df05760405162461bcd60e51b8152600401610c0e90613648565b601454610dff906127106136b2565b83601254610e0d91906136c9565b1115610e2b5760405162461bcd60e51b8152600401610c0e906136e1565b600083600b54610e3b9190613723565b600c5490915081906001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190613742565b1015610efa5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da0814d3d553608a1b6044820152606401610c0e565b61138860135411158015610f1c575061138884601354610f1a91906136c9565b115b15610f3357600b54610f2f906002613723565b600b555b8360136000828254610f4591906136c9565b9091555050600c546001600160a01b03166379cc6790336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b158015610fa457600080fd5b505af1158015610fb8573d6000803e3d6000fd5b50505050610fce848484610fc93390565b611fba565b50505050565b600a546001600160a01b03163314610ffe5760405162461bcd60e51b8152600401610c0e9061375b565b4281101561104e5760405162461bcd60e51b815260206004820152601f60248201527f737461727454696d652063616e6e6f7420626520696e207468652070617374006044820152606401610c0e565b601a55565b61105d3382612035565b6110795760405162461bcd60e51b8152600401610c0e90613790565b610d4383838361211f565b600061108f8361146e565b82106110f15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610c0e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b031633146111445760405162461bcd60e51b8152600401610c0e9061375b565b428110156111945760405162461bcd60e51b815260206004820152601f60248201527f737461727454696d652063616e6e6f7420626520696e207468652070617374006044820152606401610c0e565b601955565b60006111a482611f2f565b6111e75760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610c0e565b506000908152601b602052604090205490565b610d4383838360405180602001604052806000815250611b70565b600a546001600160a01b0316331461123f5760405162461bcd60e51b8152600401610c0e9061375b565b610d436001600160a01b03841682846122ca565b6000610b0e82611f2f565b600061126960085490565b82106112cc5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610c0e565b600882815481106112df576112df6137e1565b90600052602060002001549050919050565b600a546001600160a01b0316331461131b5760405162461bcd60e51b8152600401610c0e9061375b565b610d43600f8383612f4f565b6000818152600260205260408120546001600160a01b031680610b0e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610c0e565b606060006113ab8361146e565b116113c85760405162461bcd60e51b8152600401610c0e906137f7565b60006113d38361146e565b905060008167ffffffffffffffff8111156113f0576113f06130e0565b604051908082528060200260200182016040528015611419578160200160208202803683370190505b50905060005b828110156114665760006114338683611084565b905080838381518110611448576114486137e1565b6020908102919091010152508061145e8161382e565b91505061141f565b509392505050565b60006001600160a01b0382166114d95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610c0e565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461151f5760405162461bcd60e51b8152600401610c0e9061375b565b611529600061231c565b565b600a54600160a01b900460ff16156115555760405162461bcd60e51b8152600401610c0e906135e7565b6010546000036115965760405162461bcd60e51b815260206004820152600c60248201526b1b5a5cdcda5b99c81c9bdbdd60a21b6044820152606401610c0e565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061161086868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050601054915084905061236e565b61166a5760405162461bcd60e51b815260206004820152602560248201527f74686973206164647265737320646f6573206e6f742068617665207065726d6960448201526439b9b4b7b760d91b6064820152608401610c0e565b83600114806116795750836005145b80611684575083600a145b6116a05760405162461bcd60e51b8152600401610c0e90613611565b8251841480156116b05750815184145b6116cc5760405162461bcd60e51b8152600401610c0e90613648565b6116de8467120a871cc0020000613723565b3410156116fd5760405162461bcd60e51b8152600401610c0e90613847565b836014600082825461170f91906136c9565b909155505033600090815260116020526040812080548692906117339084906136c9565b90915550611745905084848433611fba565b505050505050565b600a546001600160a01b031633146117775760405162461bcd60e51b8152600401610c0e9061375b565b601055565b606060018054610b23906135ad565b606060006117988361146e565b116117b55760405162461bcd60e51b8152600401610c0e906137f7565b60006117c08361146e565b905060008167ffffffffffffffff8111156117dd576117dd6130e0565b60405190808252806020026020018201604052801561182257816020015b60408051808201909152600080825260208201528152602001906001900390816117fb5790505b50905060005b8281101561146657600061183c8683611084565b90506040518060400160405280828152602001601b600084815260200190815260200160002054815250838381518110611878576118786137e1565b602002602001018190525050808061188f9061382e565b915050611828565b336001600160a01b038316036118ef5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610c0e565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000601954600014158015610d5f57505060195442101590565b600a54600160a01b900460ff161561199f5760405162461bcd60e51b8152600401610c0e906135e7565b82600114806119ae5750826005145b806119b9575082600a145b6119d55760405162461bcd60e51b8152600401610c0e90613611565b8151831480156119e55750805183145b611a015760405162461bcd60e51b8152600401610c0e90613648565b601454611a10906127106136b2565b83601254611a1e91906136c9565b1115611a3c5760405162461bcd60e51b8152600401610c0e906136e1565b6000611a50846714d1120d7b160000613723565b905080341015611a725760405162461bcd60e51b8152600401610c0e90613847565b8360126000828254611a8491906136c9565b90915550610fce905084848433611fba565b600a546001600160a01b03163314611ac05760405162461bcd60e51b8152600401610c0e9061375b565b80471015611ae05760405162461bcd60e51b8152600401610c0e90613847565b6040513390600090829084908381818185875af1925050503d8060008114611b24576040519150601f19603f3d011682016040523d82523d6000602084013e611b29565b606091505b5050905080610d435760405162461bcd60e51b815260206004820152601360248201527208cc2d2d8cac840e8de40e6cadcc84082ac82b606b1b6044820152606401610c0e565b611b7a3383612035565b611b965760405162461bcd60e51b8152600401610c0e90613790565b610fce8484848461241f565b6060611bad82611f2f565b611c115760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610c0e565b611c19612452565b611c2283612461565b604051602001611c33929190613870565b6040516020818303038152906040529050919050565b600f8054611c56906135ad565b80601f0160208091040260200160405190810160405280929190818152602001828054611c82906135ad565b8015611ccf5780601f10611ca457610100808354040283529160200191611ccf565b820191906000526020600020905b815481529060010190602001808311611cb257829003601f168201915b505050505081565b600a546001600160a01b03163314611d015760405162461bcd60e51b8152600401610c0e9061375b565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b60606000611d308461146e565b11611d4d5760405162461bcd60e51b8152600401610c0e906137f7565b60408051600580825260c08201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611d655790505090506000611d9b846005613723565b90506000611daa8260056136c9565b9050611db58661146e565b811115611dc857611dc58661146e565b90505b815b81811015611e39576000611dde8883611084565b90506040518060400160405280828152602001601b600084815260200190815260200160002054815250858381518110611e1a57611e1a6137e1565b6020026020010181905250508080611e319061382e565b915050611dca565b509195945050505050565b600a546001600160a01b03163314611e6e5760405162461bcd60e51b8152600401610c0e9061375b565b6001600160a01b038116611ed35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c0e565b611edc8161231c565b50565b60006001600160e01b031982166380ac58cd60e01b1480611f1057506001600160e01b03198216635b5e139f60e01b145b80610b0e57506301ffc9a760e01b6001600160e01b0319831614610b0e565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611f8182611327565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60005b8481101561202e57600160156000828254611fd891906136c9565b9250508190555061201c82858381518110611ff557611ff56137e1565b602002602001015185848151811061200f5761200f6137e1565b6020026020010151612562565b806120268161382e565b915050611fbd565b5050505050565b600061204082611f2f565b6120a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610c0e565b60006120ac83611327565b9050806001600160a01b0316846001600160a01b031614806120e75750836001600160a01b03166120dc84610ba6565b6001600160a01b0316145b8061211757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661213282611327565b6001600160a01b03161461219a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610c0e565b6001600160a01b0382166121fc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610c0e565b612207838383612834565b612212600082611f4c565b6001600160a01b038316600090815260036020526040812080546001929061223b9084906136b2565b90915550506001600160a01b03821660009081526003602052604081208054600192906122699084906136c9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d439084906128ec565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081815b8551811015612412576000868281518110612390576123906137e1565b602002602001015190508083116123d25760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506123ff565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061240a8161382e565b915050612373565b50831490505b9392505050565b61242a84848461211f565b612436848484846129be565b610fce5760405162461bcd60e51b8152600401610c0e906138be565b6060600f8054610b23906135ad565b6060816000036124885750506040805180820190915260018152600360fc1b602082015290565b8160005b81156124b2578061249c8161382e565b91506124ab9050600a83613926565b915061248c565b60008167ffffffffffffffff8111156124cd576124cd6130e0565b6040519080825280601f01601f1916602001820160405280156124f7576020820181803683370190505b5090505b84156121175761250c6001836136b2565b9150612519600a8661393a565b6125249060306136c9565b60f81b818381518110612539576125396137e1565b60200101906001600160f81b031916908160001a90535061255b600a86613926565b94506124fb565b612570613a986127106136c9565b60155411156125c15760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f74206d696e7420616e796d6f72652063656c65737469616c7300006044820152606401610c0e565b6125ca82611f2f565b156126175760405162461bcd60e51b815260206004820181905260248201527f746869732027746f6b656e49642720697320616c726561647920746f6f6b656e6044820152606401610c0e565b6001821015801561262a57506127108211155b6126765760405162461bcd60e51b815260206004820152601e60248201527f27746f6b656e496427206d75737420626520696e207468652072616e676500006044820152606401610c0e565b6000828152601b6020526040902054156126e15760405162461bcd60e51b815260206004820152602660248201527f7468617420746f6b656e277320747970652068617320616c7265616479206265604482015265195b881cd95d60d21b6064820152608401610c0e565b60018114806126f05750600281145b806126fb5750600381145b6127405760405162461bcd60e51b8152602060048201526016602482015275696e76616c69642063656c65737469616c207479706560501b6044820152606401610c0e565b6000828152601b602052604090208190556001819003612774576016805490600061276a8361382e565b91905055506127a2565b8060020361278c576017805490600061276a8361382e565b6018805490600061279c8361382e565b91905055505b6127ac8383612abf565b600e546127c3906001600160a01b03166001611897565b60408051838152602081018390527fc3446d569695aa78750f8132ce4941514489a02c8ca9a2078ee392dccd96474e910160405180910390a16040518281527fb0c73316550069520aa3bffd50be8c7989584da8716295793eda73dbcd1c154c9060200160405180910390a1505050565b6001600160a01b03831661288f5761288a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6128b2565b816001600160a01b0316836001600160a01b0316146128b2576128b28382612add565b6001600160a01b0382166128c957610d4381612b7a565b826001600160a01b0316826001600160a01b031614610d4357610d438282612c29565b6000612941826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c6d9092919063ffffffff16565b805190915015610d43578080602001905181019061295f919061394e565b610d435760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c0e565b60006001600160a01b0384163b15612ab457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612a0290339089908890889060040161396b565b6020604051808303816000875af1925050508015612a3d575060408051601f3d908101601f19168201909252612a3a918101906139a8565b60015b612a9a573d808015612a6b576040519150601f19603f3d011682016040523d82523d6000602084013e612a70565b606091505b508051600003612a925760405162461bcd60e51b8152600401610c0e906138be565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612117565b506001949350505050565b612ad9828260405180602001604052806000815250612c7c565b5050565b60006001612aea8461146e565b612af491906136b2565b600083815260076020526040902054909150808214612b47576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612b8c906001906136b2565b60008381526009602052604081205460088054939450909284908110612bb457612bb46137e1565b906000526020600020015490508060088381548110612bd557612bd56137e1565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612c0d57612c0d6139c5565b6001900381819060005260206000200160009055905550505050565b6000612c348361146e565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60606121178484600085612caf565b612c868383612dd7565b612c9360008484846129be565b610d435760405162461bcd60e51b8152600401610c0e906138be565b606082471015612d105760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c0e565b843b612d5e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c0e565b600080866001600160a01b03168587604051612d7a91906139db565b60006040518083038185875af1925050503d8060008114612db7576040519150601f19603f3d011682016040523d82523d6000602084013e612dbc565b606091505b5091509150612dcc828286612f16565b979650505050505050565b6001600160a01b038216612e2d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610c0e565b612e3681611f2f565b15612e835760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c0e565b612e8f60008383612834565b6001600160a01b0382166000908152600360205260408120805460019290612eb89084906136c9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608315612f25575081612418565b825115612f355782518084602001fd5b8160405162461bcd60e51b8152600401610c0e9190613073565b828054612f5b906135ad565b90600052602060002090601f016020900481019282612f7d5760008555612fc3565b82601f10612f965782800160ff19823516178555612fc3565b82800160010185558215612fc3579182015b82811115612fc3578235825591602001919060010190612fa8565b50612fcf929150612fd3565b5090565b5b80821115612fcf5760008155600101612fd4565b6001600160e01b031981168114611edc57600080fd5b60006020828403121561301057600080fd5b813561241881612fe8565b60005b8381101561303657818101518382015260200161301e565b83811115610fce5750506000910152565b6000815180845261305f81602086016020860161301b565b601f01601f19169290920160200192915050565b6020815260006124186020830184613047565b60006020828403121561309857600080fd5b5035919050565b6001600160a01b0381168114611edc57600080fd5b600080604083850312156130c757600080fd5b82356130d28161309f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561311f5761311f6130e0565b604052919050565b600082601f83011261313857600080fd5b8135602067ffffffffffffffff821115613154576131546130e0565b8160051b6131638282016130f6565b928352848101820192828101908785111561317d57600080fd5b83870192505b84831015612dcc57823582529183019190830190613183565b6000806000606084860312156131b157600080fd5b83359250602084013567ffffffffffffffff808211156131d057600080fd5b6131dc87838801613127565b935060408601359150808211156131f257600080fd5b506131ff86828701613127565b9150509250925092565b60008060006060848603121561321e57600080fd5b83356132298161309f565b925060208401356132398161309f565b929592945050506040919091013590565b60008060006060848603121561325f57600080fd5b833561326a8161309f565b92506020840135915060408401356132818161309f565b809150509250925092565b6000806020838503121561329f57600080fd5b823567ffffffffffffffff808211156132b757600080fd5b818501915085601f8301126132cb57600080fd5b8135818111156132da57600080fd5b8660208285010111156132ec57600080fd5b60209290920196919550909350505050565b60006020828403121561331057600080fd5b81356124188161309f565b6020808252825182820181905260009190848201906040850190845b8181101561335357835183529284019291840191600101613337565b50909695505050505050565b60008060008060006080868803121561337757600080fd5b853567ffffffffffffffff8082111561338f57600080fd5b818801915088601f8301126133a357600080fd5b8135818111156133b257600080fd5b8960208260051b85010111156133c757600080fd5b602092830197509550908701359350604087013590808211156133e957600080fd5b6133f589838a01613127565b9350606088013591508082111561340b57600080fd5b5061341888828901613127565b9150509295509295909350565b602080825282518282018190526000919060409081850190868401855b8281101561346757815180518552860151868501529284019290850190600101613442565b5091979650505050505050565b8015158114611edc57600080fd5b6000806040838503121561349557600080fd5b82356134a08161309f565b915060208301356134b081613474565b809150509250929050565b600080600080608085870312156134d157600080fd5b84356134dc8161309f565b93506020858101356134ed8161309f565b935060408601359250606086013567ffffffffffffffff8082111561351157600080fd5b818801915088601f83011261352557600080fd5b813581811115613537576135376130e0565b613549601f8201601f191685016130f6565b9150808252898482850101111561355f57600080fd5b808484018584013760008482840101525080935050505092959194509250565b6000806040838503121561359257600080fd5b823561359d8161309f565b915060208301356134b08161309f565b600181811c908216806135c157607f821691505b6020821081036135e157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601d908201527f7175616e74697479206d7573742062652031206f722035206f72203130000000604082015260600190565b60208082526034908201527f4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206040820152736d75737420626520657175616c20746f2071747960601b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156136c4576136c461369c565b500390565b600082198211156136dc576136dc61369c565b500190565b60208082526022908201527f796f752063616e2774206d696e742074686174206d616e79207269676874206e6040820152616f7760f01b606082015260800190565b600081600019048311821515161561373d5761373d61369c565b500290565b60006020828403121561375457600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252601f908201527f7468657265206973206e6f206e667420696e20796f75722062616c616e636500604082015260600190565b6000600182016138405761384061369c565b5060010190565b6020808252600f908201526e0dcdee840cadcdeeaced04082ac82b608b1b604082015260600190565b6000835161388281846020880161301b565b602f60f81b90830190815283516138a081600184016020880161301b565b64173539b7b760d91b60019290910191820152600601949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261393557613935613910565b500490565b60008261394957613949613910565b500690565b60006020828403121561396057600080fd5b815161241881613474565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061399e90830184613047565b9695505050505050565b6000602082840312156139ba57600080fd5b815161241881612fe8565b634e487b7160e01b600052603160045260246000fd5b600082516139ed81846020870161301b565b919091019291505056fea2646970667358221220ee64b3330a232367ad87838b18f2c55f24ecb6a1b49b0fa0c9472065277b2e9a64736f6c634300080d0033",
  "bytecodeSha1": "896c0f982002bf29df58afe18c021e2057f6bf4a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Celestial",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "236": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "10": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "230": [
            2743,
            2761,
            false
          ],
          "231": [
            2838,
            2848,
            false
          ],
          "232": [
            2935,
            2951,
            false
          ],
          "233": [
            3033,
            3043,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "234": [
            5074,
            5102,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "229": [
            1820,
            1858,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "228": [
            1335,
            1366,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {
        "Address._verifyCallResult": {
          "210": [
            7124,
            7131,
            false
          ],
          "211": [
            7265,
            7286,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "209": [
            4745,
            4775,
            true
          ]
        }
      },
      "14": {},
      "15": {
        "Strings.toString": {
          "239": [
            548,
            558,
            false
          ]
        }
      },
      "16": {
        "MerkleProof.verify": {
          "235": [
            1059,
            1087,
            false
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {
        "Celestial.CelestialsOfOwner": {
          "186": [
            11844,
            11865,
            true
          ]
        },
        "Celestial.GetTokenIdsOfOwner": {
          "177": [
            11354,
            11375,
            true
          ]
        },
        "Celestial._createCelestial": {
          "199": [
            5017,
            5076,
            true
          ],
          "200": [
            5150,
            5167,
            true
          ],
          "201": [
            5235,
            5247,
            false
          ],
          "202": [
            5251,
            5280,
            true
          ],
          "203": [
            5367,
            5391,
            true
          ],
          "204": [
            5486,
            5513,
            true
          ],
          "205": [
            5533,
            5560,
            true
          ],
          "206": [
            5580,
            5610,
            true
          ],
          "207": [
            5726,
            5744,
            false
          ],
          "208": [
            5794,
            5812,
            false
          ]
        },
        "Celestial.bachedCelestialsOfOwner": {
          "197": [
            12517,
            12538,
            true
          ],
          "198": [
            12740,
            12768,
            false
          ]
        },
        "Celestial.getType": {
          "176": [
            3421,
            3438,
            true
          ]
        },
        "Celestial.mintCelestialWhitelist": {
          "178": [
            7264,
            7279,
            true
          ],
          "179": [
            7587,
            7637,
            true
          ],
          "180": [
            7776,
            7784,
            true
          ],
          "181": [
            7788,
            7796,
            true
          ],
          "182": [
            7800,
            7809,
            true
          ],
          "183": [
            7895,
            7917,
            false
          ],
          "184": [
            7921,
            7949,
            true
          ],
          "185": [
            8451,
            8495,
            true
          ]
        },
        "Celestial.mintCelestialWithAVAX": {
          "187": [
            9042,
            9050,
            true
          ],
          "188": [
            9054,
            9062,
            true
          ],
          "189": [
            9066,
            9075,
            true
          ],
          "190": [
            9161,
            9183,
            false
          ],
          "191": [
            9187,
            9215,
            true
          ],
          "192": [
            9324,
            9424,
            true
          ],
          "193": [
            9607,
            9635,
            true
          ]
        },
        "Celestial.mintCelestialWithSoul": {
          "165": [
            10105,
            10113,
            true
          ],
          "166": [
            10117,
            10125,
            true
          ],
          "167": [
            10129,
            10138,
            true
          ],
          "168": [
            10224,
            10246,
            false
          ],
          "169": [
            10250,
            10278,
            true
          ],
          "170": [
            10387,
            10487,
            true
          ],
          "171": [
            10683,
            10734,
            true
          ],
          "172": [
            10803,
            10860,
            false
          ],
          "173": [
            10876,
            10938,
            false
          ]
        },
        "Celestial.setStartTimeAVAX": {
          "175": [
            2733,
            2762,
            true
          ]
        },
        "Celestial.setStartTimeSOUL": {
          "174": [
            2964,
            2993,
            true
          ]
        },
        "Celestial.tokenURI": {
          "196": [
            6726,
            6742,
            true
          ]
        },
        "Celestial.withdrawAVAX": {
          "194": [
            4366,
            4398,
            true
          ],
          "195": [
            4541,
            4545,
            true
          ]
        }
      },
      "21": {},
      "3": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "237": [
            3668,
            3689,
            false
          ],
          "238": [
            3752,
            3782,
            true
          ]
        }
      },
      "7": {
        "ERC721._checkOnERC721Received": {
          "224": [
            12245,
            12263,
            false
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "220": [
            7622,
            7638,
            true
          ]
        },
        "ERC721._mint": {
          "226": [
            9220,
            9236,
            true
          ],
          "227": [
            9291,
            9308,
            true
          ]
        },
        "ERC721._safeMint": {
          "225": [
            8682,
            8736,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "223": [
            6809,
            6857,
            true
          ]
        },
        "ERC721._transfer": {
          "221": [
            10529,
            10560,
            true
          ],
          "222": [
            10624,
            10640,
            true
          ]
        },
        "ERC721.approve": {
          "213": [
            3600,
            3611,
            true
          ],
          "214": [
            3681,
            3702,
            true
          ],
          "215": [
            3706,
            3743,
            true
          ]
        },
        "ERC721.balanceOf": {
          "217": [
            1954,
            1973,
            true
          ]
        },
        "ERC721.getApproved": {
          "212": [
            4028,
            4044,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "219": [
            5599,
            5640,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "218": [
            4311,
            4335,
            true
          ]
        },
        "ERC721.transferFrom": {
          "216": [
            4978,
            5019,
            true
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "101": [
            2131,
            2148
          ],
          "102": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "2": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "44": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "80": [
            1926,
            1999
          ],
          "81": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Pausable.paused": {
          "1": [
            1104,
            1118
          ]
        }
      },
      "10": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "130": [
            3898,
            3942
          ],
          "131": [
            3952,
            3976
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "149": [
            3541,
            3575
          ],
          "150": [
            3585,
            3620
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "129": [
            2777,
            2817
          ],
          "132": [
            2864,
            2911
          ],
          "133": [
            2967,
            3012
          ],
          "134": [
            3059,
            3099
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "145": [
            6589,
            6625
          ],
          "146": [
            6693,
            6734
          ],
          "147": [
            6855,
            6886
          ],
          "148": [
            6896,
            6912
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "141": [
            5189,
            5233
          ],
          "142": [
            5305,
            5348
          ],
          "143": [
            5479,
            5512
          ],
          "144": [
            5522,
            5563
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1028,
            1125
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "34": [
            1812,
            1907
          ],
          "35": [
            1917,
            1941
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "25": [
            1327,
            1414
          ],
          "26": [
            1424,
            1457
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1615,
            1639
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {
        "Address._verifyCallResult": {
          "163": [
            7147,
            7164
          ],
          "164": [
            7591,
            7611
          ]
        },
        "Address.functionCall": {
          "151": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "154": [
            4737,
            4818
          ],
          "155": [
            4828,
            4888
          ],
          "156": [
            4982,
            5041
          ]
        },
        "Address.isContract": {
          "136": [
            1073,
            1088
          ]
        }
      },
      "14": {
        "Context._msgSender": {
          "9": [
            658,
            675
          ]
        }
      },
      "15": {
        "Strings.toString": {
          "110": [
            574,
            584
          ],
          "111": [
            690,
            698
          ],
          "112": [
            712,
            722
          ],
          "113": [
            824,
            835
          ],
          "114": [
            849,
            905
          ],
          "115": [
            919,
            930
          ]
        }
      },
      "16": {
        "MerkleProof.verify": {
          "103": [
            1185,
            1255
          ],
          "104": [
            1372,
            1442
          ],
          "105": [
            990,
            993
          ],
          "106": [
            1552,
            1579
          ]
        }
      },
      "17": {
        "ERC165.supportsInterface": {
          "83": [
            864,
            911
          ]
        }
      },
      "18": {},
      "19": {
        "Celestial.CelestialsOfOwner": {
          "55": [
            11836,
            11901
          ],
          "56": [
            12137,
            12261
          ],
          "57": [
            12056,
            12059
          ]
        },
        "Celestial.GetTokenIdsOfOwner": {
          "38": [
            11346,
            11411
          ],
          "39": [
            11639,
            11660
          ],
          "40": [
            11559,
            11562
          ],
          "41": [
            11680,
            11695
          ]
        },
        "Celestial._baseURI": {
          "109": [
            3201,
            3216
          ]
        },
        "Celestial._createCelestial": {
          "116": [
            4996,
            5132
          ],
          "117": [
            5142,
            5204
          ],
          "118": [
            5214,
            5336
          ],
          "119": [
            5346,
            5455
          ],
          "120": [
            5465,
            5658
          ],
          "121": [
            5668,
            5703
          ],
          "122": [
            5760,
            5774
          ],
          "123": [
            5827,
            5841
          ],
          "124": [
            5870,
            5887
          ],
          "125": [
            5908,
            5930
          ],
          "126": [
            5940,
            5969
          ],
          "127": [
            5979,
            6027
          ],
          "128": [
            6037,
            6069
          ]
        },
        "Celestial._createCelestials": {
          "87": [
            6299,
            6320
          ],
          "88": [
            6334,
            6386
          ],
          "89": [
            6280,
            6283
          ]
        },
        "Celestial.bachedCelestialsOfOwner": {
          "75": [
            12509,
            12574
          ],
          "76": [
            12784,
            12812
          ],
          "77": [
            13009,
            13140
          ],
          "78": [
            12875,
            12878
          ],
          "79": [
            13160,
            13177
          ]
        },
        "Celestial.exist": {
          "33": [
            4817,
            4840
          ]
        },
        "Celestial.forwardERC20s": {
          "32": [
            4175,
            4211
          ]
        },
        "Celestial.getType": {
          "29": [
            3413,
            3463
          ],
          "30": [
            3473,
            3500
          ]
        },
        "Celestial.mintCelestialWhitelist": {
          "45": [
            7256,
            7296
          ],
          "46": [
            7566,
            7700
          ],
          "47": [
            7755,
            7864
          ],
          "48": [
            7874,
            8027
          ],
          "49": [
            8430,
            8536
          ],
          "50": [
            8547,
            8579
          ],
          "51": [
            8589,
            8626
          ],
          "52": [
            8664,
            8726
          ]
        },
        "Celestial.mintCelestialWithAVAX": {
          "62": [
            9021,
            9130
          ],
          "63": [
            9140,
            9293
          ],
          "64": [
            9303,
            9484
          ],
          "65": [
            9599,
            9655
          ],
          "66": [
            9666,
            9697
          ],
          "67": [
            9735,
            9797
          ]
        },
        "Celestial.mintCelestialWithSoul": {
          "13": [
            10084,
            10193
          ],
          "14": [
            10203,
            10356
          ],
          "15": [
            10366,
            10547
          ],
          "16": [
            10662,
            10775
          ],
          "17": [
            10963,
            11008
          ],
          "18": [
            11029,
            11060
          ],
          "19": [
            11092,
            11140
          ],
          "20": [
            11177,
            11239
          ]
        },
        "Celestial.mintingStartedAVAX": {
          "61": [
            3742,
            3803
          ]
        },
        "Celestial.mintingStartedSOUL": {
          "12": [
            3883,
            3944
          ]
        },
        "Celestial.setBaseURI": {
          "36": [
            3305,
            3325
          ]
        },
        "Celestial.setMerkleRoot": {
          "53": [
            4710,
            4734
          ]
        },
        "Celestial.setStake": {
          "74": [
            2610,
            2624
          ]
        },
        "Celestial.setStartTimeAVAX": {
          "27": [
            2712,
            2819
          ],
          "28": [
            2829,
            2855
          ]
        },
        "Celestial.setStartTimeSOUL": {
          "21": [
            2943,
            3050
          ],
          "22": [
            3060,
            3086
          ]
        },
        "Celestial.tokenURI": {
          "72": [
            6705,
            6815
          ],
          "73": [
            6825,
            6944
          ]
        },
        "Celestial.withdrawAVAX": {
          "68": [
            4358,
            4418
          ],
          "69": [
            4533,
            4569
          ]
        }
      },
      "21": {},
      "3": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "135": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "100": [
            746,
            832
          ]
        }
      },
      "7": {
        "ERC721._approve": {
          "85": [
            11147,
            11176
          ],
          "86": [
            11186,
            11237
          ]
        },
        "ERC721._checkOnERC721Received": {
          "137": [
            12287,
            12347
          ],
          "138": [
            12117,
            12179
          ],
          "139": [
            12551,
            12562
          ]
        },
        "ERC721._exists": {
          "84": [
            7303,
            7340
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "90": [
            7614,
            7687
          ],
          "91": [
            7746,
            7842
          ]
        },
        "ERC721._mint": {
          "157": [
            9212,
            9273
          ],
          "158": [
            9283,
            9341
          ],
          "159": [
            9352,
            9397
          ],
          "160": [
            9408,
            9426
          ],
          "161": [
            9436,
            9457
          ],
          "162": [
            9468,
            9506
          ]
        },
        "ERC721._safeMint": {
          "140": [
            8254,
            8280
          ],
          "152": [
            8633,
            8651
          ],
          "153": [
            8661,
            8812
          ]
        },
        "ERC721._safeTransfer": {
          "107": [
            6763,
            6791
          ],
          "108": [
            6801,
            6912
          ]
        },
        "ERC721._transfer": {
          "92": [
            10521,
            10606
          ],
          "93": [
            10616,
            10681
          ],
          "94": [
            10692,
            10731
          ],
          "95": [
            10793,
            10822
          ],
          "96": [
            10833,
            10853
          ],
          "97": [
            10863,
            10881
          ],
          "98": [
            10891,
            10912
          ],
          "99": [
            10923,
            10955
          ]
        },
        "ERC721.approve": {
          "8": [
            3592,
            3649
          ],
          "10": [
            3660,
            3825
          ],
          "11": [
            3836,
            3857
          ]
        },
        "ERC721.balanceOf": {
          "42": [
            1946,
            2020
          ],
          "43": [
            2030,
            2053
          ]
        },
        "ERC721.getApproved": {
          "6": [
            4020,
            4093
          ],
          "7": [
            4104,
            4135
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4678,
            4720
          ]
        },
        "ERC721.name": {
          "5": [
            2493,
            2505
          ]
        },
        "ERC721.ownerOf": {
          "37": [
            2250,
            2323
          ]
        },
        "ERC721.safeTransferFrom": {
          "31": [
            5318,
            5357
          ],
          "70": [
            5591,
            5694
          ],
          "71": [
            5704,
            5743
          ]
        },
        "ERC721.setApprovalForAll": {
          "58": [
            4303,
            4365
          ],
          "59": [
            4376,
            4429
          ],
          "60": [
            4439,
            4492
          ]
        },
        "ERC721.supportsInterface": {
          "82": [
            1614,
            1789
          ]
        },
        "ERC721.symbol": {
          "54": [
            2657,
            2671
          ]
        },
        "ERC721.transferFrom": {
          "23": [
            4970,
            5073
          ],
          "24": [
            5084,
            5112
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeERC20",
    "Soul",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Strings"
  ],
  "deployedBytecode": "6080604052600436106103ad5760003560e01c8063758c0b9e116101e7578063b4fad9af1161010d578063e7b27af7116100a0578063e9f169f71161006f578063e9f169f714610a88578063f2fde38b14610a9e578063f7be4f1114610abe578063ff2a765614610ad357600080fd5b8063e7b27af7146109f3578063e7c235b914610a09578063e7d97e5214610a29578063e985e9c514610a3f57600080fd5b8063db4bec44116100dc578063db4bec4414610971578063dbddb26a1461099e578063de20bc92146109b3578063e2ea1319146109d357600080fd5b8063b4fad9af146108f5578063b88d4fde14610911578063bc7d403414610931578063c87b56dd1461095157600080fd5b80639ea6db3d11610185578063a756a1df11610154578063a756a1df146108a3578063a7d5ec2d146108b9578063aeb5cd5e146108cc578063aff9efe8146108df57600080fd5b80639ea6db3d1461082b578063a22cb46514610858578063a377d7ef14610878578063a682f8621461088d57600080fd5b8063815b7a8c116101c1578063815b7a8c146107c25780638da5cb5b146107e257806395d89b41146108005780639b76dbca1461081557600080fd5b8063758c0b9e146107795780637b82fda61461078f5780637cb64759146107a257600080fd5b806333f6832a116102d75780635c975abb1161026a57806370022bda1161023957806370022bda1461070157806370a082311461072e578063715018a61461074e57806373033bda1461076357600080fd5b80635c975abb146106965780636352211e146106b557806365e940a2146106d55780636b988176146106eb57600080fd5b806343f37b98116102a657806343f37b98146106165780634ebbc92a146106365780634f6ccce71461065657806355f804b31461067657600080fd5b806333f6832a146105895780633c1d4de7146105b65780634036ab78146105d657806342842e0e146105f657600080fd5b8063200ed8551161034f5780632cfb18b11161031e5780632cfb18b1146105215780632eb4a7ab1461053d5780632f745c591461055357806332a2ec411461057357600080fd5b8063200ed855146104b757806323b872dd146104d75780632a6414b0146104f75780632b95b7321461050c57600080fd5b8063095ea7b31161038b578063095ea7b31461044157806311a2428a1461046357806318160ddd146104785780631dbb64ba1461049757600080fd5b806301ffc9a7146103b257806306fdde03146103e7578063081812fc14610409575b600080fd5b3480156103be57600080fd5b506103d26103cd366004612ffe565b610ae9565b60405190151581526020015b60405180910390f35b3480156103f357600080fd5b506103fc610b14565b6040516103de9190613073565b34801561041557600080fd5b50610429610424366004613086565b610ba6565b6040516001600160a01b0390911681526020016103de565b34801561044d57600080fd5b5061046161045c3660046130b4565b610c33565b005b34801561046f57600080fd5b506103d2610d48565b34801561048457600080fd5b506008545b6040519081526020016103de565b3480156104a357600080fd5b506104616104b236600461319c565b610d64565b3480156104c357600080fd5b506104616104d2366004613086565b610fd4565b3480156104e357600080fd5b506104616104f2366004613209565b611053565b34801561050357600080fd5b50610489600181565b34801561051857600080fd5b50610489600281565b34801561052d57600080fd5b5061048967120a871cc002000081565b34801561054957600080fd5b5061048960105481565b34801561055f57600080fd5b5061048961056e3660046130b4565b611084565b34801561057f57600080fd5b5061048960165481565b34801561059557600080fd5b506104896105a4366004613086565b601b6020526000908152604090205481565b3480156105c257600080fd5b506104616105d1366004613086565b61111a565b3480156105e257600080fd5b506104896105f1366004613086565b611199565b34801561060257600080fd5b50610461610611366004613209565b6111fa565b34801561062257600080fd5b5061046161063136600461324a565b611215565b34801561064257600080fd5b506103d2610651366004613086565b611253565b34801561066257600080fd5b50610489610671366004613086565b61125e565b34801561068257600080fd5b5061046161069136600461328c565b6112f1565b3480156106a257600080fd5b50600a54600160a01b900460ff166103d2565b3480156106c157600080fd5b506104296106d0366004613086565b611327565b3480156106e157600080fd5b5061048960125481565b3480156106f757600080fd5b5061048961138881565b34801561070d57600080fd5b5061072161071c3660046132fe565b61139e565b6040516103de919061331b565b34801561073a57600080fd5b506104896107493660046132fe565b61146e565b34801561075a57600080fd5b506104616114f5565b34801561076f57600080fd5b5061048961271081565b34801561078557600080fd5b5061048960175481565b61046161079d36600461335f565b61152b565b3480156107ae57600080fd5b506104616107bd366004613086565b61174d565b3480156107ce57600080fd5b50600c54610429906001600160a01b031681565b3480156107ee57600080fd5b50600a546001600160a01b0316610429565b34801561080c57600080fd5b506103fc61177c565b34801561082157600080fd5b5061048960155481565b34801561083757600080fd5b5061084b6108463660046132fe565b61178b565b6040516103de9190613425565b34801561086457600080fd5b50610461610873366004613482565b611897565b34801561088457600080fd5b506103d261195b565b34801561089957600080fd5b5061048960195481565b3480156108af57600080fd5b50610489613a9881565b6104616108c736600461319c565b611975565b6104616108da366004613086565b611a96565b3480156108eb57600080fd5b5061048960185481565b34801561090157600080fd5b506104896714d1120d7b16000081565b34801561091d57600080fd5b5061046161092c3660046134bb565b611b70565b34801561093d57600080fd5b50600d54610429906001600160a01b031681565b34801561095d57600080fd5b506103fc61096c366004613086565b611ba2565b34801561097d57600080fd5b5061048961098c3660046132fe565b60116020526000908152604090205481565b3480156109aa57600080fd5b506103fc611c49565b3480156109bf57600080fd5b50600e54610429906001600160a01b031681565b3480156109df57600080fd5b506104616109ee3660046132fe565b611cd7565b3480156109ff57600080fd5b50610489601a5481565b348015610a1557600080fd5b5061084b610a243660046130b4565b611d23565b348015610a3557600080fd5b50610489600b5481565b348015610a4b57600080fd5b506103d2610a5a36600461357f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a9457600080fd5b5061048960135481565b348015610aaa57600080fd5b50610461610ab93660046132fe565b611e44565b348015610aca57600080fd5b50610489600381565b348015610adf57600080fd5b5061048960145481565b60006001600160e01b0319821663780e9d6360e01b1480610b0e5750610b0e82611edf565b92915050565b606060008054610b23906135ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4f906135ad565b8015610b9c5780601f10610b7157610100808354040283529160200191610b9c565b820191906000526020600020905b815481529060010190602001808311610b7f57829003601f168201915b5050505050905090565b6000610bb182611f2f565b610c175760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610c3e82611327565b9050806001600160a01b0316836001600160a01b031603610cab5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610c0e565b336001600160a01b0382161480610cc75750610cc78133610a5a565b610d395760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610c0e565b610d438383611f4c565b505050565b6000601a54600014158015610d5f5750601a544210155b905090565b600a54600160a01b900460ff1615610d8e5760405162461bcd60e51b8152600401610c0e906135e7565b8260011480610d9d5750826005145b80610da8575082600a145b610dc45760405162461bcd60e51b8152600401610c0e90613611565b815183148015610dd45750805183145b610df05760405162461bcd60e51b8152600401610c0e90613648565b601454610dff906127106136b2565b83601254610e0d91906136c9565b1115610e2b5760405162461bcd60e51b8152600401610c0e906136e1565b600083600b54610e3b9190613723565b600c5490915081906001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190613742565b1015610efa5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da0814d3d553608a1b6044820152606401610c0e565b61138860135411158015610f1c575061138884601354610f1a91906136c9565b115b15610f3357600b54610f2f906002613723565b600b555b8360136000828254610f4591906136c9565b9091555050600c546001600160a01b03166379cc6790336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b158015610fa457600080fd5b505af1158015610fb8573d6000803e3d6000fd5b50505050610fce848484610fc93390565b611fba565b50505050565b600a546001600160a01b03163314610ffe5760405162461bcd60e51b8152600401610c0e9061375b565b4281101561104e5760405162461bcd60e51b815260206004820152601f60248201527f737461727454696d652063616e6e6f7420626520696e207468652070617374006044820152606401610c0e565b601a55565b61105d3382612035565b6110795760405162461bcd60e51b8152600401610c0e90613790565b610d4383838361211f565b600061108f8361146e565b82106110f15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610c0e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b031633146111445760405162461bcd60e51b8152600401610c0e9061375b565b428110156111945760405162461bcd60e51b815260206004820152601f60248201527f737461727454696d652063616e6e6f7420626520696e207468652070617374006044820152606401610c0e565b601955565b60006111a482611f2f565b6111e75760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610c0e565b506000908152601b602052604090205490565b610d4383838360405180602001604052806000815250611b70565b600a546001600160a01b0316331461123f5760405162461bcd60e51b8152600401610c0e9061375b565b610d436001600160a01b03841682846122ca565b6000610b0e82611f2f565b600061126960085490565b82106112cc5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610c0e565b600882815481106112df576112df6137e1565b90600052602060002001549050919050565b600a546001600160a01b0316331461131b5760405162461bcd60e51b8152600401610c0e9061375b565b610d43600f8383612f4f565b6000818152600260205260408120546001600160a01b031680610b0e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610c0e565b606060006113ab8361146e565b116113c85760405162461bcd60e51b8152600401610c0e906137f7565b60006113d38361146e565b905060008167ffffffffffffffff8111156113f0576113f06130e0565b604051908082528060200260200182016040528015611419578160200160208202803683370190505b50905060005b828110156114665760006114338683611084565b905080838381518110611448576114486137e1565b6020908102919091010152508061145e8161382e565b91505061141f565b509392505050565b60006001600160a01b0382166114d95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610c0e565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461151f5760405162461bcd60e51b8152600401610c0e9061375b565b611529600061231c565b565b600a54600160a01b900460ff16156115555760405162461bcd60e51b8152600401610c0e906135e7565b6010546000036115965760405162461bcd60e51b815260206004820152600c60248201526b1b5a5cdcda5b99c81c9bdbdd60a21b6044820152606401610c0e565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061161086868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050601054915084905061236e565b61166a5760405162461bcd60e51b815260206004820152602560248201527f74686973206164647265737320646f6573206e6f742068617665207065726d6960448201526439b9b4b7b760d91b6064820152608401610c0e565b83600114806116795750836005145b80611684575083600a145b6116a05760405162461bcd60e51b8152600401610c0e90613611565b8251841480156116b05750815184145b6116cc5760405162461bcd60e51b8152600401610c0e90613648565b6116de8467120a871cc0020000613723565b3410156116fd5760405162461bcd60e51b8152600401610c0e90613847565b836014600082825461170f91906136c9565b909155505033600090815260116020526040812080548692906117339084906136c9565b90915550611745905084848433611fba565b505050505050565b600a546001600160a01b031633146117775760405162461bcd60e51b8152600401610c0e9061375b565b601055565b606060018054610b23906135ad565b606060006117988361146e565b116117b55760405162461bcd60e51b8152600401610c0e906137f7565b60006117c08361146e565b905060008167ffffffffffffffff8111156117dd576117dd6130e0565b60405190808252806020026020018201604052801561182257816020015b60408051808201909152600080825260208201528152602001906001900390816117fb5790505b50905060005b8281101561146657600061183c8683611084565b90506040518060400160405280828152602001601b600084815260200190815260200160002054815250838381518110611878576118786137e1565b602002602001018190525050808061188f9061382e565b915050611828565b336001600160a01b038316036118ef5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610c0e565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000601954600014158015610d5f57505060195442101590565b600a54600160a01b900460ff161561199f5760405162461bcd60e51b8152600401610c0e906135e7565b82600114806119ae5750826005145b806119b9575082600a145b6119d55760405162461bcd60e51b8152600401610c0e90613611565b8151831480156119e55750805183145b611a015760405162461bcd60e51b8152600401610c0e90613648565b601454611a10906127106136b2565b83601254611a1e91906136c9565b1115611a3c5760405162461bcd60e51b8152600401610c0e906136e1565b6000611a50846714d1120d7b160000613723565b905080341015611a725760405162461bcd60e51b8152600401610c0e90613847565b8360126000828254611a8491906136c9565b90915550610fce905084848433611fba565b600a546001600160a01b03163314611ac05760405162461bcd60e51b8152600401610c0e9061375b565b80471015611ae05760405162461bcd60e51b8152600401610c0e90613847565b6040513390600090829084908381818185875af1925050503d8060008114611b24576040519150601f19603f3d011682016040523d82523d6000602084013e611b29565b606091505b5050905080610d435760405162461bcd60e51b815260206004820152601360248201527208cc2d2d8cac840e8de40e6cadcc84082ac82b606b1b6044820152606401610c0e565b611b7a3383612035565b611b965760405162461bcd60e51b8152600401610c0e90613790565b610fce8484848461241f565b6060611bad82611f2f565b611c115760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610c0e565b611c19612452565b611c2283612461565b604051602001611c33929190613870565b6040516020818303038152906040529050919050565b600f8054611c56906135ad565b80601f0160208091040260200160405190810160405280929190818152602001828054611c82906135ad565b8015611ccf5780601f10611ca457610100808354040283529160200191611ccf565b820191906000526020600020905b815481529060010190602001808311611cb257829003601f168201915b505050505081565b600a546001600160a01b03163314611d015760405162461bcd60e51b8152600401610c0e9061375b565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b60606000611d308461146e565b11611d4d5760405162461bcd60e51b8152600401610c0e906137f7565b60408051600580825260c08201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611d655790505090506000611d9b846005613723565b90506000611daa8260056136c9565b9050611db58661146e565b811115611dc857611dc58661146e565b90505b815b81811015611e39576000611dde8883611084565b90506040518060400160405280828152602001601b600084815260200190815260200160002054815250858381518110611e1a57611e1a6137e1565b6020026020010181905250508080611e319061382e565b915050611dca565b509195945050505050565b600a546001600160a01b03163314611e6e5760405162461bcd60e51b8152600401610c0e9061375b565b6001600160a01b038116611ed35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c0e565b611edc8161231c565b50565b60006001600160e01b031982166380ac58cd60e01b1480611f1057506001600160e01b03198216635b5e139f60e01b145b80610b0e57506301ffc9a760e01b6001600160e01b0319831614610b0e565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611f8182611327565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60005b8481101561202e57600160156000828254611fd891906136c9565b9250508190555061201c82858381518110611ff557611ff56137e1565b602002602001015185848151811061200f5761200f6137e1565b6020026020010151612562565b806120268161382e565b915050611fbd565b5050505050565b600061204082611f2f565b6120a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610c0e565b60006120ac83611327565b9050806001600160a01b0316846001600160a01b031614806120e75750836001600160a01b03166120dc84610ba6565b6001600160a01b0316145b8061211757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661213282611327565b6001600160a01b03161461219a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610c0e565b6001600160a01b0382166121fc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610c0e565b612207838383612834565b612212600082611f4c565b6001600160a01b038316600090815260036020526040812080546001929061223b9084906136b2565b90915550506001600160a01b03821660009081526003602052604081208054600192906122699084906136c9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d439084906128ec565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081815b8551811015612412576000868281518110612390576123906137e1565b602002602001015190508083116123d25760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506123ff565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061240a8161382e565b915050612373565b50831490505b9392505050565b61242a84848461211f565b612436848484846129be565b610fce5760405162461bcd60e51b8152600401610c0e906138be565b6060600f8054610b23906135ad565b6060816000036124885750506040805180820190915260018152600360fc1b602082015290565b8160005b81156124b2578061249c8161382e565b91506124ab9050600a83613926565b915061248c565b60008167ffffffffffffffff8111156124cd576124cd6130e0565b6040519080825280601f01601f1916602001820160405280156124f7576020820181803683370190505b5090505b84156121175761250c6001836136b2565b9150612519600a8661393a565b6125249060306136c9565b60f81b818381518110612539576125396137e1565b60200101906001600160f81b031916908160001a90535061255b600a86613926565b94506124fb565b612570613a986127106136c9565b60155411156125c15760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f74206d696e7420616e796d6f72652063656c65737469616c7300006044820152606401610c0e565b6125ca82611f2f565b156126175760405162461bcd60e51b815260206004820181905260248201527f746869732027746f6b656e49642720697320616c726561647920746f6f6b656e6044820152606401610c0e565b6001821015801561262a57506127108211155b6126765760405162461bcd60e51b815260206004820152601e60248201527f27746f6b656e496427206d75737420626520696e207468652072616e676500006044820152606401610c0e565b6000828152601b6020526040902054156126e15760405162461bcd60e51b815260206004820152602660248201527f7468617420746f6b656e277320747970652068617320616c7265616479206265604482015265195b881cd95d60d21b6064820152608401610c0e565b60018114806126f05750600281145b806126fb5750600381145b6127405760405162461bcd60e51b8152602060048201526016602482015275696e76616c69642063656c65737469616c207479706560501b6044820152606401610c0e565b6000828152601b602052604090208190556001819003612774576016805490600061276a8361382e565b91905055506127a2565b8060020361278c576017805490600061276a8361382e565b6018805490600061279c8361382e565b91905055505b6127ac8383612abf565b600e546127c3906001600160a01b03166001611897565b60408051838152602081018390527fc3446d569695aa78750f8132ce4941514489a02c8ca9a2078ee392dccd96474e910160405180910390a16040518281527fb0c73316550069520aa3bffd50be8c7989584da8716295793eda73dbcd1c154c9060200160405180910390a1505050565b6001600160a01b03831661288f5761288a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6128b2565b816001600160a01b0316836001600160a01b0316146128b2576128b28382612add565b6001600160a01b0382166128c957610d4381612b7a565b826001600160a01b0316826001600160a01b031614610d4357610d438282612c29565b6000612941826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c6d9092919063ffffffff16565b805190915015610d43578080602001905181019061295f919061394e565b610d435760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c0e565b60006001600160a01b0384163b15612ab457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612a0290339089908890889060040161396b565b6020604051808303816000875af1925050508015612a3d575060408051601f3d908101601f19168201909252612a3a918101906139a8565b60015b612a9a573d808015612a6b576040519150601f19603f3d011682016040523d82523d6000602084013e612a70565b606091505b508051600003612a925760405162461bcd60e51b8152600401610c0e906138be565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612117565b506001949350505050565b612ad9828260405180602001604052806000815250612c7c565b5050565b60006001612aea8461146e565b612af491906136b2565b600083815260076020526040902054909150808214612b47576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612b8c906001906136b2565b60008381526009602052604081205460088054939450909284908110612bb457612bb46137e1565b906000526020600020015490508060088381548110612bd557612bd56137e1565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612c0d57612c0d6139c5565b6001900381819060005260206000200160009055905550505050565b6000612c348361146e565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60606121178484600085612caf565b612c868383612dd7565b612c9360008484846129be565b610d435760405162461bcd60e51b8152600401610c0e906138be565b606082471015612d105760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c0e565b843b612d5e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c0e565b600080866001600160a01b03168587604051612d7a91906139db565b60006040518083038185875af1925050503d8060008114612db7576040519150601f19603f3d011682016040523d82523d6000602084013e612dbc565b606091505b5091509150612dcc828286612f16565b979650505050505050565b6001600160a01b038216612e2d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610c0e565b612e3681611f2f565b15612e835760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c0e565b612e8f60008383612834565b6001600160a01b0382166000908152600360205260408120805460019290612eb89084906136c9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608315612f25575081612418565b825115612f355782518084602001fd5b8160405162461bcd60e51b8152600401610c0e9190613073565b828054612f5b906135ad565b90600052602060002090601f016020900481019282612f7d5760008555612fc3565b82601f10612f965782800160ff19823516178555612fc3565b82800160010185558215612fc3579182015b82811115612fc3578235825591602001919060010190612fa8565b50612fcf929150612fd3565b5090565b5b80821115612fcf5760008155600101612fd4565b6001600160e01b031981168114611edc57600080fd5b60006020828403121561301057600080fd5b813561241881612fe8565b60005b8381101561303657818101518382015260200161301e565b83811115610fce5750506000910152565b6000815180845261305f81602086016020860161301b565b601f01601f19169290920160200192915050565b6020815260006124186020830184613047565b60006020828403121561309857600080fd5b5035919050565b6001600160a01b0381168114611edc57600080fd5b600080604083850312156130c757600080fd5b82356130d28161309f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561311f5761311f6130e0565b604052919050565b600082601f83011261313857600080fd5b8135602067ffffffffffffffff821115613154576131546130e0565b8160051b6131638282016130f6565b928352848101820192828101908785111561317d57600080fd5b83870192505b84831015612dcc57823582529183019190830190613183565b6000806000606084860312156131b157600080fd5b83359250602084013567ffffffffffffffff808211156131d057600080fd5b6131dc87838801613127565b935060408601359150808211156131f257600080fd5b506131ff86828701613127565b9150509250925092565b60008060006060848603121561321e57600080fd5b83356132298161309f565b925060208401356132398161309f565b929592945050506040919091013590565b60008060006060848603121561325f57600080fd5b833561326a8161309f565b92506020840135915060408401356132818161309f565b809150509250925092565b6000806020838503121561329f57600080fd5b823567ffffffffffffffff808211156132b757600080fd5b818501915085601f8301126132cb57600080fd5b8135818111156132da57600080fd5b8660208285010111156132ec57600080fd5b60209290920196919550909350505050565b60006020828403121561331057600080fd5b81356124188161309f565b6020808252825182820181905260009190848201906040850190845b8181101561335357835183529284019291840191600101613337565b50909695505050505050565b60008060008060006080868803121561337757600080fd5b853567ffffffffffffffff8082111561338f57600080fd5b818801915088601f8301126133a357600080fd5b8135818111156133b257600080fd5b8960208260051b85010111156133c757600080fd5b602092830197509550908701359350604087013590808211156133e957600080fd5b6133f589838a01613127565b9350606088013591508082111561340b57600080fd5b5061341888828901613127565b9150509295509295909350565b602080825282518282018190526000919060409081850190868401855b8281101561346757815180518552860151868501529284019290850190600101613442565b5091979650505050505050565b8015158114611edc57600080fd5b6000806040838503121561349557600080fd5b82356134a08161309f565b915060208301356134b081613474565b809150509250929050565b600080600080608085870312156134d157600080fd5b84356134dc8161309f565b93506020858101356134ed8161309f565b935060408601359250606086013567ffffffffffffffff8082111561351157600080fd5b818801915088601f83011261352557600080fd5b813581811115613537576135376130e0565b613549601f8201601f191685016130f6565b9150808252898482850101111561355f57600080fd5b808484018584013760008482840101525080935050505092959194509250565b6000806040838503121561359257600080fd5b823561359d8161309f565b915060208301356134b08161309f565b600181811c908216806135c157607f821691505b6020821081036135e157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601d908201527f7175616e74697479206d7573742062652031206f722035206f72203130000000604082015260600190565b60208082526034908201527f4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206040820152736d75737420626520657175616c20746f2071747960601b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156136c4576136c461369c565b500390565b600082198211156136dc576136dc61369c565b500190565b60208082526022908201527f796f752063616e2774206d696e742074686174206d616e79207269676874206e6040820152616f7760f01b606082015260800190565b600081600019048311821515161561373d5761373d61369c565b500290565b60006020828403121561375457600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252601f908201527f7468657265206973206e6f206e667420696e20796f75722062616c616e636500604082015260600190565b6000600182016138405761384061369c565b5060010190565b6020808252600f908201526e0dcdee840cadcdeeaced04082ac82b608b1b604082015260600190565b6000835161388281846020880161301b565b602f60f81b90830190815283516138a081600184016020880161301b565b64173539b7b760d91b60019290910191820152600601949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261393557613935613910565b500490565b60008261394957613949613910565b500690565b60006020828403121561396057600080fd5b815161241881613474565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061399e90830184613047565b9695505050505050565b6000602082840312156139ba57600080fd5b815161241881612fe8565b634e487b7160e01b600052603160045260246000fd5b600082516139ed81846020870161301b565b919091019291505056fea2646970667358221220ee64b3330a232367ad87838b18f2c55f24ecb6a1b49b0fa0c9472065277b2e9a64736f6c634300080d0033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:22;;558:22;540:41;;528:2;513:18;910:222:10;;;;;;;;2414:98:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;;;;;-1:-1:-1;3925:217:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:22;;;1674:51;;1662:2;1647:18;3925:217:7;1528:203:22;3463:401:7;;;;;;;;;;-1:-1:-1;3463:401:7;;;;;:::i;:::-;;:::i;:::-;;3816:135:19;;;;;;;;;;;;;:::i;1535:111:10:-;;;;;;;;;;-1:-1:-1;1622:10:10;:17;1535:111;;;2338:25:22;;;2326:2;2311:18;1535:111:10;2192:177:22;9851:1395:19;;;;;;;;;;-1:-1:-1;9851:1395:19;;;;;:::i;:::-;;:::i;2868:225::-;;;;;;;;;;-1:-1:-1;2868:225:19;;;;;:::i;:::-;;:::i;4789:330:7:-;;;;;;;;;;-1:-1:-1;4789:330:7;;;;;:::i;:::-;;:::i;1121:38:19:-;;;;;;;;;;;;1158:1;1121:38;;1165;;;;;;;;;;;;1202:1;1165:38;;725:61;;;;;;;;;;;;777:9;725:61;;1529:25;;;;;;;;;;;;;;;;1211:253:10;;;;;;;;;;-1:-1:-1;1211:253:10;;;;;:::i;:::-;;:::i;1817:27:19:-;;;;;;;;;;;;;;;;2123:45;;;;;;;;;;-1:-1:-1;2123:45:19;;;;;:::i;:::-;;;;;;;;;;;;;;2637:225;;;;;;;;;;-1:-1:-1;2637:225:19;;;;;:::i;:::-;;:::i;3338:169::-;;;;;;;;;;-1:-1:-1;3338:169:19;;;;;:::i;:::-;;:::i;5185:179:7:-;;;;;;;;;;-1:-1:-1;5185:179:7;;;;;:::i;:::-;;:::i;4045:173:19:-;;;;;;;;;;-1:-1:-1;4045:173:19;;;;;:::i;:::-;;:::i;4747:100::-;;;;;;;;;;-1:-1:-1;4747:100:19;;;;;:::i;:::-;;:::i;1718:230:10:-;;;;;;;;;;-1:-1:-1;1718:230:10;;;;;:::i;:::-;;:::i;3229:103:19:-;;;;;;;;;;-1:-1:-1;3229:103:19;;;;;:::i;:::-;;:::i;1041:84:1:-;;;;;;;;;;-1:-1:-1;1111:7:1;;-1:-1:-1;;;1111:7:1;;;;1041:84;;2117:235:7;;;;;;;;;;-1:-1:-1;2117:235:7;;;;;:::i;:::-;;:::i;1639:39:19:-;;;;;;;;;;;;;;;;870:60;;;;;;;;;;;;926:4;870:60;;11252:450;;;;;;;;;;-1:-1:-1;11252:450:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1855:205:7:-;;;;;;;;;;-1:-1:-1;1855:205:7;;;;;:::i;:::-;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;1007:51:19:-;;;;;;;;;;;;1052:6;1007:51;;1850:27;;;;;;;;;;;;;;;;6998:1735;;;;;;:::i;:::-;;:::i;4637:104::-;;;;;;;;;;-1:-1:-1;4637:104:19;;;;;:::i;:::-;;:::i;1372:16::-;;;;;;;;;;-1:-1:-1;1372:16:19;;;;-1:-1:-1;;;;;1372:16:19;;;973:85:0;;;;;;;;;;-1:-1:-1;1045:6:0;;-1:-1:-1;;;;;1045:6:0;973:85;;2576:102:7;;;;;;;;;;;;;:::i;1775:35:19:-;;;;;;;;;;;;;;;;11708:590;;;;;;;;;;-1:-1:-1;11708:590:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4209:290:7:-;;;;;;;;;;-1:-1:-1;4209:290:7;;;;;:::i;:::-;;:::i;3675:135:19:-;;;;;;;;;;;;;:::i;1991:28::-;;;;;;;;;;;;;;;;1064:51;;;;;;;;;;;;1109:6;1064:51;;8780:1024;;;;;;:::i;:::-;;:::i;4282:294::-;;;;;;:::i;:::-;;:::i;1883:30::-;;;;;;;;;;;;;;;;642:56;;;;;;;;;;;;689:9;642:56;;5430:320:7;;;;;;;;;;-1:-1:-1;5430:320:7;;;;;:::i;:::-;;:::i;1394:36:19:-;;;;;;;;;;-1:-1:-1;1394:36:19;;;;-1:-1:-1;;;;;1394:36:19;;;6563:388;;;;;;;;;;-1:-1:-1;6563:388:19;;;;;:::i;:::-;;:::i;1560:51::-;;;;;;;;;;-1:-1:-1;1560:51:19;;;;;:::i;:::-;;;;;;;;;;;;;;1483:22;;;;;;;;;;;;;:::i;1436:20::-;;;;;;;;;;-1:-1:-1;1436:20:19;;;;-1:-1:-1;;;;;1436:20:19;;;2548:83;;;;;;;;;;-1:-1:-1;2548:83:19;;;;;:::i;:::-;;:::i;2025:28::-;;;;;;;;;;;;;;;;12304:880;;;;;;;;;;-1:-1:-1;12304:880:19;;;;;:::i;:::-;;:::i;1289:50::-;;;;;;;;;;;;;;;;4565:162:7;;;;;;;;;;-1:-1:-1;4565:162:7;;;;;:::i;:::-;-1:-1:-1;;;;;4685:25:7;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162;1684:39:19;;;;;;;;;;;;;;;;1846:189:0;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;1209:41:19:-;;;;;;;;;;;;1249:1;1209:41;;1729:40;;;;;;;;;;;;;;;;910:222:10;1012:4;-1:-1:-1;;;;;;1035:50:10;;-1:-1:-1;;;1035:50:10;;:90;;;1089:36;1113:11;1089:23;:36::i;:::-;1028:97;910:222;-1:-1:-1;;910:222:10:o;2414:98:7:-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;-1:-1:-1;;;4020:73:7;;11733:2:22;4020:73:7;;;11715:21:22;11772:2;11752:18;;;11745:30;11811:34;11791:18;;;11784:62;-1:-1:-1;;;11862:18:22;;;11855:42;11914:19;;4020:73:7;;;;;;;;;-1:-1:-1;4111:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:7;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:7;:2;-1:-1:-1;;;;;3600:11:7;;3592:57;;;;-1:-1:-1;;;3592:57:7;;12146:2:22;3592:57:7;;;12128:21:22;12185:2;12165:18;;;12158:30;12224:34;12204:18;;;12197:62;-1:-1:-1;;;12275:18:22;;;12268:31;12316:19;;3592:57:7;11944:397:22;3592:57:7;665:10:14;-1:-1:-1;;;;;3681:21:7;;;;:62;;-1:-1:-1;3706:37:7;3723:5;665:10:14;4565:162:7;:::i;3706:37::-;3660:165;;;;-1:-1:-1;;;3660:165:7;;12548:2:22;3660:165:7;;;12530:21:22;12587:2;12567:18;;;12560:30;12626:34;12606:18;;;12599:62;12697:26;12677:18;;;12670:54;12741:19;;3660:165:7;12346:420:22;3660:165:7;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;3816:135:19:-;3867:4;3890:13;;3907:1;3890:18;;:54;;;;;3931:13;;3912:15;:32;;3890:54;3883:61;;3816:135;:::o;9851:1395::-;1111:7:1;;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;10105:3:19::1;10112:1;10105:8;:20;;;;10117:3;10124:1;10117:8;10105:20;:33;;;;10129:3;10136:2;10129:9;10105:33;10084:109;;;;-1:-1:-1::0;;;10084:109:19::1;;;;;;;:::i;:::-;10231:8;:15;10224:3;:22;:54;;;;;10257:14;:21;10250:3;:28;10224:54;10203:153;;;;-1:-1:-1::0;;;10203:153:19::1;;;;;;;:::i;:::-;10461:25;::::0;10440:46:::1;::::0;1052:6:::1;10440:46;:::i;:::-;10415:3;10388:24;;:30;;;;:::i;:::-;10387:100;;10366:181;;;;-1:-1:-1::0;;;10366:181:19::1;;;;;;;:::i;:::-;10597:27;10649:3;10627:19;;:25;;;;:::i;:::-;10683:4;::::0;10597:55;;-1:-1:-1;10597:55:19;;-1:-1:-1;;;;;10683:4:19::1;:14;665:10:14::0;10683:28:19::1;::::0;-1:-1:-1;;;;;;10683:28:19::1;::::0;;;;;;-1:-1:-1;;;;;1692:32:22;;;10683:28:19::1;::::0;::::1;1674:51:22::0;1647:18;;10683:28:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;10662:113;;;::::0;-1:-1:-1;;;10662:113:19;;15257:2:22;10662:113:19::1;::::0;::::1;15239:21:22::0;15296:2;15276:18;;;15269:30;-1:-1:-1;;;15315:18:22;;;15308:45;15370:18;;10662:113:19::1;15055:339:22::0;10662:113:19::1;926:4;10803:24;;:57;;:135;;;;;926:4;10903:3;10876:24;;:30;;;;:::i;:::-;:62;10803:135;10786:233;;;10985:19;::::0;:23:::1;::::0;11007:1:::1;10985:23;:::i;:::-;10963:19;:45:::0;10786:233:::1;11057:3;11029:24;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;11092:4:19::1;::::0;-1:-1:-1;;;;;11092:4:19::1;:13;665:10:14::0;11092:48:19::1;::::0;-1:-1:-1;;;;;;11092:48:19::1;::::0;;;;;;-1:-1:-1;;;;;15591:32:22;;;11092:48:19::1;::::0;::::1;15573:51:22::0;15640:18;;;15633:34;;;15546:18;;11092:48:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11177:62;11195:3;11200:8;11210:14;11226:12;665:10:14::0;;586:96;11226:12:19::1;11177:17;:62::i;:::-;10008:1238;9851:1395:::0;;;:::o;2868:225::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2978:15:19::1;2964:10;:29;;2943:107;;;::::0;-1:-1:-1;;;2943:107:19;;16241:2:22;2943:107:19::1;::::0;::::1;16223:21:22::0;16280:2;16260:18;;;16253:30;16319:33;16299:18;;;16292:61;16370:18;;2943:107:19::1;16039:355:22::0;2943:107:19::1;3060:13;:26:::0;2868:225::o;4789:330:7:-;4978:41;665:10:14;5011:7:7;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:7;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;1211:253:10:-;1308:7;1343:23;1360:5;1343:16;:23::i;:::-;1335:5;:31;1327:87;;;;-1:-1:-1;;;1327:87:10;;17019:2:22;1327:87:10;;;17001:21:22;17058:2;17038:18;;;17031:30;17097:34;17077:18;;;17070:62;-1:-1:-1;;;17148:18:22;;;17141:41;17199:19;;1327:87:10;16817:407:22;1327:87:10;-1:-1:-1;;;;;;1431:19:10;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1211:253::o;2637:225:19:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2747:15:19::1;2733:10;:29;;2712:107;;;::::0;-1:-1:-1;;;2712:107:19;;16241:2:22;2712:107:19::1;::::0;::::1;16223:21:22::0;16280:2;16260:18;;;16253:30;16319:33;16299:18;;;16292:61;16370:18;;2712:107:19::1;16039:355:22::0;2712:107:19::1;2829:13;:26:::0;2637:225::o;3338:169::-;3394:7;3421:17;3429:8;3421:7;:17::i;:::-;3413:50;;;;-1:-1:-1;;;3413:50:19;;17431:2:22;3413:50:19;;;17413:21:22;17470:2;17450:18;;;17443:30;-1:-1:-1;;;17489:18:22;;;17482:50;17549:18;;3413:50:19;17229:344:22;3413:50:19;-1:-1:-1;3480:20:19;;;;:10;:20;;;;;;;3338:169::o;5185:179:7:-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;4045:173:19:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4175:36:19::1;-1:-1:-1::0;;;;;4175:19:19;::::1;4195:6:::0;4203:7;4175:19:::1;:36::i;4747:100::-:0;4801:4;4824:16;4832:7;4824;:16::i;1718:230:10:-;1793:7;1828:30;1622:10;:17;;1535:111;1828:30;1820:5;:38;1812:95;;;;-1:-1:-1;;;1812:95:10;;17780:2:22;1812:95:10;;;17762:21:22;17819:2;17799:18;;;17792:30;17858:34;17838:18;;;17831:62;-1:-1:-1;;;17909:18:22;;;17902:42;17961:19;;1812:95:10;17578:408:22;1812:95:10;1924:10;1935:5;1924:17;;;;;;;;:::i;:::-;;;;;;;;;1917:24;;1718:230;;;:::o;3229:103:19:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3305:20:19::1;:8;3316:9:::0;;3305:20:::1;:::i;2117:235:7:-:0;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:7;;2250:73;;;;-1:-1:-1;;;2250:73:7;;18325:2:22;2250:73:7;;;18307:21:22;18364:2;18344:18;;;18337:30;18403:34;18383:18;;;18376:62;-1:-1:-1;;;18454:18:22;;;18447:39;18503:19;;2250:73:7;18123:405:22;11252:450:19;11318:16;11374:1;11354:17;11364:6;11354:9;:17::i;:::-;:21;11346:65;;;;-1:-1:-1;;;11346:65:19;;;;;;;:::i;:::-;11421:15;11439:17;11449:6;11439:9;:17::i;:::-;11421:35;;11466:25;11508:7;11494:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11494:22:19;;11466:50;;11531:9;11526:145;11550:7;11546:1;:11;11526:145;;;11578:15;11596:29;11616:6;11623:1;11596:19;:29::i;:::-;11578:47;;11653:7;11639:8;11648:1;11639:11;;;;;;;;:::i;:::-;;;;;;;;;;:21;-1:-1:-1;11559:3:19;;;;:::i;:::-;;;;11526:145;;;-1:-1:-1;11687:8:19;11252:450;-1:-1:-1;;;11252:450:19:o;1855:205:7:-;1927:7;-1:-1:-1;;;;;1954:19:7;;1946:74;;;;-1:-1:-1;;;1946:74:7;;19235:2:22;1946:74:7;;;19217:21:22;19274:2;19254:18;;;19247:30;19313:34;19293:18;;;19286:62;-1:-1:-1;;;19364:18:22;;;19357:40;19414:19;;1946:74:7;19033:406:22;1946:74:7;-1:-1:-1;;;;;;2037:16:7;;;;;:9;:16;;;;;;;1855:205::o;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;6998:1735:19:-;1111:7:1;;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;7264:10:19::1;::::0;7278:1:::1;7264:15:::0;7256:40:::1;;;::::0;-1:-1:-1;;;7256:40:19;;19646:2:22;7256:40:19::1;::::0;::::1;19628:21:22::0;19685:2;19665:18;;;19658:30;-1:-1:-1;;;19704:18:22;;;19697:42;19756:18;;7256:40:19::1;19444:336:22::0;7256:40:19::1;7525:30;::::0;-1:-1:-1;;665:10:14;19934:2:22;19930:15;19926:53;7525:30:19::1;::::0;::::1;19914:66:22::0;7500:12:19::1;::::0;19996::22;;7525:30:19::1;;;;;;;;;;;;7515:41;;;;;;7500:56;;7587:50;7606:12;;7587:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;7620:10:19::1;::::0;;-1:-1:-1;7632:4:19;;-1:-1:-1;7587:18:19::1;:50::i;:::-;7566:134;;;::::0;-1:-1:-1;;;7566:134:19;;20221:2:22;7566:134:19::1;::::0;::::1;20203:21:22::0;20260:2;20240:18;;;20233:30;20299:34;20279:18;;;20272:62;-1:-1:-1;;;20350:18:22;;;20343:35;20395:19;;7566:134:19::1;20019:401:22::0;7566:134:19::1;7776:3;7783:1;7776:8;:20;;;;7788:3;7795:1;7788:8;7776:20;:33;;;;7800:3;7807:2;7800:9;7776:33;7755:109;;;;-1:-1:-1::0;;;7755:109:19::1;;;;;;;:::i;:::-;7902:8;:15;7895:3;:22;:54;;;;;7928:14;:21;7921:3;:28;7895:54;7874:153;;;;-1:-1:-1::0;;;7874:153:19::1;;;;;;;:::i;:::-;8464:31;8492:3:::0;777:9:::1;8464:31;:::i;:::-;8451:9;:44;;8430:106;;;;-1:-1:-1::0;;;8430:106:19::1;;;;;;;:::i;:::-;8576:3;8547:25;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;665:10:14;8589:30:19::1;::::0;;;:16:::1;:30;::::0;;;;:37;;8623:3;;8589:30;:37:::1;::::0;8623:3;;8589:37:::1;:::i;:::-;::::0;;;-1:-1:-1;8664:62:19::1;::::0;-1:-1:-1;8682:3:19;8687:8;8697:14;665:10:14;11177:17:19::1;:62::i;8664:::-;7205:1528;6998:1735:::0;;;;;:::o;4637:104::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4710:10:19::1;:24:::0;4637:104::o;2576:102:7:-;2632:13;2664:7;2657:14;;;;;:::i;11708:590:19:-;11798:22;11864:1;11844:17;11854:6;11844:9;:17::i;:::-;:21;11836:65;;;;-1:-1:-1;;;11836:65:19;;;;;;;:::i;:::-;11911:15;11929:17;11939:6;11929:9;:17::i;:::-;11911:35;;11956:26;12005:7;11985:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;11985:28:19;;;;;;;;;;;;;;;;11956:57;;12028:9;12023:249;12047:7;12043:1;:11;12023:249;;;12075:15;12093:30;12113:6;12121:1;12093:19;:30::i;:::-;12075:48;;12146:115;;;;;;;;12187:7;12146:115;;;;12227:10;:19;12238:7;12227:19;;;;;;;;;;;;12146:115;;;12137:3;12141:1;12137:6;;;;;;;;:::i;:::-;;;;;;:124;;;;12061:211;12056:3;;;;;:::i;:::-;;;;12023:249;;4209:290:7;665:10:14;-1:-1:-1;;;;;4311:24:7;;;4303:62;;;;-1:-1:-1;;;4303:62:7;;20971:2:22;4303:62:7;;;20953:21:22;21010:2;20990:18;;;20983:30;21049:27;21029:18;;;21022:55;21094:18;;4303:62:7;20769:349:22;4303:62:7;665:10:14;4376:32:7;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:7;;;;;;;;;;;;:53;;-1:-1:-1;;4376:53:7;;;;;;;;;;4444:48;;540:41:22;;;4376:42:7;;665:10:14;4444:48:7;;513:18:22;4444:48:7;;;;;;;4209:290;;:::o;3675:135:19:-;3726:4;3749:13;;3766:1;3749:18;;:54;;;;-1:-1:-1;;3790:13:19;;3771:15;:32;;;3675:135::o;8780:1024::-;1111:7:1;;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;9042:3:19::1;9049:1;9042:8;:20;;;;9054:3;9061:1;9054:8;9042:20;:33;;;;9066:3;9073:2;9066:9;9042:33;9021:109;;;;-1:-1:-1::0;;;9021:109:19::1;;;;;;;:::i;:::-;9168:8;:15;9161:3;:22;:54;;;;;9194:14;:21;9187:3;:28;9161:54;9140:153;;;;-1:-1:-1::0;;;9140:153:19::1;;;;;;;:::i;:::-;9398:25;::::0;9377:46:::1;::::0;1052:6:::1;9377:46;:::i;:::-;9352:3;9325:24;;:30;;;;:::i;:::-;9324:100;;9303:181;;;;-1:-1:-1::0;;;9303:181:19::1;;;;;;;:::i;:::-;9537:23;9563:26;9586:3:::0;689:9:::1;9563:26;:::i;:::-;9537:52;;9620:15;9607:9;:28;;9599:56;;;;-1:-1:-1::0;;;9599:56:19::1;;;;;;;:::i;:::-;9694:3;9666:24;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;9735:62:19::1;::::0;-1:-1:-1;9753:3:19;9758:8;9768:14;665:10:14;11177:17:19::1;:62::i;4282:294::-:0;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4391:7:19::1;4366:21;:32;;4358:60;;;;-1:-1:-1::0;;;4358:60:19::1;;;;;;;:::i;:::-;4496:27;::::0;665:10:14;;4428:18:19::1;::::0;665:10:14;;4511:7:19;;4428:18;4496:27;4428:18;4496:27;4511:7;665:10:14;4496:27:19::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4480:43;;;4541:4;4533:36;;;::::0;-1:-1:-1;;;4533:36:19;;21535:2:22;4533:36:19::1;::::0;::::1;21517:21:22::0;21574:2;21554:18;;;21547:30;-1:-1:-1;;;21593:18:22;;;21586:49;21652:18;;4533:36:19::1;21333:343:22::0;5430:320:7;5599:41;665:10:14;5632:7:7;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:7;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;6563:388:19:-;6676:13;6726:16;6734:7;6726;:16::i;:::-;6705:110;;;;-1:-1:-1;;;6705:110:19;;21883:2:22;6705:110:19;;;21865:21:22;21922:2;21902:18;;;21895:30;21961:34;21941:18;;;21934:62;-1:-1:-1;;;22012:18:22;;;22005:45;22067:19;;6705:110:19;21681:411:22;6705:110:19;6885:10;:8;:10::i;:::-;6902:18;:7;:16;:18::i;:::-;6868:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6825:119;;6563:388;;;:::o;1483:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2548:83::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2610:5:19::1;:14:::0;;-1:-1:-1;;;;;;2610:14:19::1;-1:-1:-1::0;;;;;2610:14:19;;;::::1;::::0;;;::::1;::::0;;2548:83::o;12304:880::-;12413:22;12537:1;12517:17;12527:6;12517:9;:17::i;:::-;:21;12509:65;;;;-1:-1:-1;;;12509:65:19;;;;;;;:::i;:::-;12620:22;;;12640:1;12620:22;;;;;;;;;12584:33;;12620:22;;;;-1:-1:-1;;;;;;;;;;;;;;;;;12620:22:19;;;;;;;;;;;;;;-1:-1:-1;12584:58:19;-1:-1:-1;12652:18:19;12673:9;:5;12681:1;12673:9;:::i;:::-;12652:30;-1:-1:-1;12692:16:19;12711:14;12652:30;12724:1;12711:14;:::i;:::-;12692:33;;12751:17;12761:6;12751:9;:17::i;:::-;12740:8;:28;12736:87;;;12795:17;12805:6;12795:9;:17::i;:::-;12784:28;;12736:87;12849:10;12832:319;12865:8;12861:1;:12;12832:319;;;12894:15;12912:30;12932:6;12940:1;12912:19;:30::i;:::-;12894:48;;13025:115;;;;;;;;13066:7;13025:115;;;;13106:10;:19;13117:7;13106:19;;;;;;;;;;;;13025:115;;;13009:10;13020:1;13009:13;;;;;;;;:::i;:::-;;;;;;:131;;;;12880:271;12875:3;;;;;:::i;:::-;;;;12832:319;;;-1:-1:-1;13167:10:19;;12304:880;-1:-1:-1;;;;;12304:880:19:o;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;23430:2:22;1926:73:0::1;::::0;::::1;23412:21:22::0;23469:2;23449:18;;;23442:30;23508:34;23488:18;;;23481:62;-1:-1:-1;;;23559:18:22;;;23552:36;23605:19;;1926:73:0::1;23228:402:22::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;1496:300:7:-;1598:4;-1:-1:-1;;;;;;1633:40:7;;-1:-1:-1;;;1633:40:7;;:104;;-1:-1:-1;;;;;;;1689:48:7;;-1:-1:-1;;;1689:48:7;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:17;;;1753:36:7;763:155:17;7222:125:7;7287:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:7;:30;;;7222:125::o;11073:171::-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:7;-1:-1:-1;;;;;11147:29:7;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:7;;;;;;;;;;;11073:171;;:::o;6082:475:19:-;6256:9;6251:146;6275:3;6271:1;:7;6251:146;;;6319:1;6299:16;;:21;;;;;;;:::i;:::-;;;;;;;;6334:52;6351:2;6355:8;6364:1;6355:11;;;;;;;;:::i;:::-;;;;;;;6368:14;6383:1;6368:17;;;;;;;;:::i;:::-;;;;;;;6334:16;:52::i;:::-;6280:3;;;;:::i;:::-;;;;6251:146;;;;6082:475;;;;:::o;7505:344:7:-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;-1:-1:-1;;;7614:73:7;;23837:2:22;7614:73:7;;;23819:21:22;23876:2;23856:18;;;23849:30;23915:34;23895:18;;;23888:62;-1:-1:-1;;;23966:18:22;;;23959:42;24018:19;;7614:73:7;23635:408:22;7614:73:7;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:7;:7;-1:-1:-1;;;;;7754:16:7;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:7;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:7;;7754:51;:87;;;-1:-1:-1;;;;;;4685:25:7;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7809:32;7746:96;7505:344;-1:-1:-1;;;;7505:344:7:o;10402:560::-;10556:4;-1:-1:-1;;;;;10529:31:7;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:7;;10521:85;;;;-1:-1:-1;;;10521:85:7;;24250:2:22;10521:85:7;;;24232:21:22;24289:2;24269:18;;;24262:30;24328:34;24308:18;;;24301:62;-1:-1:-1;;;24379:18:22;;;24372:39;24428:19;;10521:85:7;24048:405:22;10521:85:7;-1:-1:-1;;;;;10624:16:7;;10616:65;;;;-1:-1:-1;;;10616:65:7;;24660:2:22;10616:65:7;;;24642:21:22;24699:2;24679:18;;;24672:30;24738:34;24718:18;;;24711:62;-1:-1:-1;;;24789:18:22;;;24782:34;24833:19;;10616:65:7;24458:400:22;10616:65:7;10692:39;10713:4;10719:2;10723:7;10692:20;:39::i;:::-;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:7;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:7;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:7;-1:-1:-1;;;;;10891:21:7;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;634:205:6:-;773:58;;;-1:-1:-1;;;;;15591:32:22;;773:58:6;;;15573:51:22;15640:18;;;;15633:34;;;773:58:6;;;;;;;;;;15546:18:22;;;;773:58:6;;;;;;;;-1:-1:-1;;;;;773:58:6;-1:-1:-1;;;773:58:6;;;746:86;;766:5;;746:19;:86::i;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;777:809:16:-;898:4;937;898;952:515;976:5;:12;972:1;:16;952:515;;;1009:20;1032:5;1038:1;1032:8;;;;;;;;:::i;:::-;;;;;;;1009:31;;1075:12;1059;:28;1055:402;;1210:44;;;;;;25020:19:22;;;25055:12;;;25048:28;;;25092:12;;1210:44:16;;;;;;;;;;;;1200:55;;;;;;1185:70;;1055:402;;;1397:44;;;;;;25020:19:22;;;25055:12;;;25048:28;;;25092:12;;1397:44:16;;;;;;;;;;;;1387:55;;;;;;1372:70;;1055:402;-1:-1:-1;990:3:16;;;;:::i;:::-;;;;952:515;;;-1:-1:-1;1559:20:16;;;-1:-1:-1;777:809:16;;;;;;:::o;6612:307:7:-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:7;;;;;;;:::i;3116:107:19:-;3176:13;3208:8;3201:15;;;;;:::i;275:703:15:-;331:13;548:5;557:1;548:10;544:51;;-1:-1:-1;;574:10:15;;;;;;;;;;;;-1:-1:-1;;;574:10:15;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:15;;-1:-1:-1;720:2:15;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:15;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:15;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:15;;;;;;;;-1:-1:-1;919:11:15;928:2;919:11;;:::i;:::-;;;791:150;;4869:1207:19;5037:39;1109:6;1052;5037:39;:::i;:::-;5017:16;;:59;;4996:136;;;;-1:-1:-1;;;4996:136:19;;26110:2:22;4996:136:19;;;26092:21:22;26149:2;26129:18;;;26122:30;26188:32;26168:18;;;26161:60;26238:18;;4996:136:19;25908:354:22;4996:136:19;5151:16;5159:7;5151;:16::i;:::-;5150:17;5142:62;;;;-1:-1:-1;;;5142:62:19;;26469:2:22;5142:62:19;;;26451:21:22;;;26488:18;;;26481:30;26547:34;26527:18;;;26520:62;26599:18;;5142:62:19;26267:356:22;5142:62:19;5246:1;5235:7;:12;;:45;;;;;1052:6;5251:7;:29;;5235:45;5214:122;;;;-1:-1:-1;;;5214:122:19;;26830:2:22;5214:122:19;;;26812:21:22;26869:2;26849:18;;;26842:30;26908:32;26888:18;;;26881:60;26958:18;;5214:122:19;26628:354:22;5214:122:19;5367:19;;;;:10;:19;;;;;;:24;5346:109;;;;-1:-1:-1;;;5346:109:19;;27189:2:22;5346:109:19;;;27171:21:22;27228:2;27208:18;;;27201:30;27267:34;27247:18;;;27240:62;-1:-1:-1;;;27318:18:22;;;27311:36;27364:19;;5346:109:19;26987:402:22;5346:109:19;1158:1;5486:13;:27;:74;;;;1202:1;5533:13;:27;5486:74;:124;;;;1249:1;5580:13;:30;5486:124;5465:193;;;;-1:-1:-1;;;5465:193:19;;27596:2:22;5465:193:19;;;27578:21:22;27635:2;27615:18;;;27608:30;-1:-1:-1;;;27654:18:22;;;27647:52;27716:18;;5465:193:19;27394:346:22;5465:193:19;5668:19;;;;:10;:19;;;;;:35;;;5743:1;5726:18;;;5722:176;;5760:12;:14;;;:12;:14;;;:::i;:::-;;;;;;5722:176;;;5794:13;5811:1;5794:18;5791:107;;5827:12;:14;;;:12;:14;;;:::i;5791:107::-;5870:15;:17;;;:15;:17;;;:::i;:::-;;;;;;5791:107;5908:22;5918:2;5922:7;5908:9;:22::i;:::-;5958:5;;5940:29;;-1:-1:-1;;;;;5958:5:19;;5940:17;:29::i;:::-;5984:43;;;27919:25:22;;;27975:2;27960:18;;27953:34;;;5984:43:19;;27892:18:22;5984:43:19;;;;;;;6042:27;;2338:25:22;;;6042:27:19;;2326:2:22;2311:18;6042:27:19;;;;;;;4869:1207;;;:::o;2544:572:10:-;-1:-1:-1;;;;;2743:18:10;;2739:183;;2777:40;2809:7;3925:10;:17;;3898:24;;;;:15;:24;;;;;:44;;;3952:24;;;;;;;;;;;;3822:161;2777:40;2739:183;;;2846:2;-1:-1:-1;;;;;2838:10:10;:4;-1:-1:-1;;;;;2838:10:10;;2834:88;;2864:47;2897:4;2903:7;2864:32;:47::i;:::-;-1:-1:-1;;;;;2935:16:10;;2931:179;;2967:45;3004:7;2967:36;:45::i;2931:179::-;3039:4;-1:-1:-1;;;;;3033:10:10;:2;-1:-1:-1;;;;;3033:10:10;;3029:81;;3059:40;3087:2;3091:7;3059:27;:40::i;3140:706:6:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:6;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:6;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:6;;28450:2:22;3744:85:6;;;28432:21:22;28489:2;28469:18;;;28462:30;28528:34;28508:18;;;28501:62;-1:-1:-1;;;28579:18:22;;;28572:40;28629:19;;3744:85:6;28248:406:22;11797:782:7;11947:4;-1:-1:-1;;;;;11967:13:7;;1034:20:13;1080:8;11963:610:7;;12002:72;;-1:-1:-1;;;12002:72:7;;-1:-1:-1;;;;;12002:36:7;;;;;:72;;665:10:14;;12053:4:7;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:7;;;;;;;;-1:-1:-1;;12002:72:7;;;;;;;;;;;;:::i;:::-;;;11998:523;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12245:6;:13;12262:1;12245:18;12241:266;;12287:60;;-1:-1:-1;;;12287:60:7;;;;;;;:::i;12241:266::-;12459:6;12453:13;12444:6;12440:2;12436:15;12429:38;11998:523;-1:-1:-1;;;;;;12124:55:7;-1:-1:-1;;;12124:55:7;;-1:-1:-1;12117:62:7;;11963:610;-1:-1:-1;12558:4:7;11797:782;;;;;;:::o;8179:108::-;8254:26;8264:2;8268:7;8254:26;;;;;;;;;;;;:9;:26::i;:::-;8179:108;;:::o;4600:970:10:-;4862:22;4912:1;4887:22;4904:4;4887:16;:22::i;:::-;:26;;;;:::i;:::-;4923:18;4944:26;;;:17;:26;;;;;;4862:51;;-1:-1:-1;5074:28:10;;;5070:323;;-1:-1:-1;;;;;5140:18:10;;5118:19;5140:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5189:30;;;;;;:44;;;5305:30;;:17;:30;;;;;:43;;;5070:323;-1:-1:-1;5486:26:10;;;;:17;:26;;;;;;;;5479:33;;;-1:-1:-1;;;;;5529:18:10;;;;;:12;:18;;;;;:34;;;;;;;5522:41;4600:970::o;5858:1061::-;6132:10;:17;6107:22;;6132:21;;6152:1;;6132:21;:::i;:::-;6163:18;6184:24;;;:15;:24;;;;;;6552:10;:26;;6107:46;;-1:-1:-1;6184:24:10;;6107:46;;6552:26;;;;;;:::i;:::-;;;;;;;;;6530:48;;6614:11;6589:10;6600;6589:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6693:28;;;:15;:28;;;;;;;:41;;;6862:24;;;;;6855:31;6896:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5929:990;;;5858:1061;:::o;3410:217::-;3494:14;3511:20;3528:2;3511:16;:20::i;:::-;-1:-1:-1;;;;;3541:16:10;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3585:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3410:217:10:o;3461:223:13:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;8508:311:7:-;8633:18;8639:2;8643:7;8633:5;:18::i;:::-;8682:54;8713:1;8717:2;8721:7;8730:5;8682:22;:54::i;:::-;8661:151;;;;-1:-1:-1;;;8661:151:7;;;;;;;:::i;4548:500:13:-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:13;;29741:2:22;4737:81:13;;;29723:21:22;29780:2;29760:18;;;29753:30;29819:34;29799:18;;;29792:62;-1:-1:-1;;;29870:18:22;;;29863:36;29916:19;;4737:81:13;29539:402:22;4737:81:13;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:13;;30148:2:22;4828:60:13;;;30130:21:22;30187:2;30167:18;;;30160:30;30226:31;30206:18;;;30199:59;30275:18;;4828:60:13;29946:353:22;4828:60:13;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:13;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:13:o;9141:372:7:-;-1:-1:-1;;;;;9220:16:7;;9212:61;;;;-1:-1:-1;;;9212:61:7;;30785:2:22;9212:61:7;;;30767:21:22;;;30804:18;;;30797:30;30863:34;30843:18;;;30836:62;30915:18;;9212:61:7;30583:356:22;9212:61:7;9292:16;9300:7;9292;:16::i;:::-;9291:17;9283:58;;;;-1:-1:-1;;;9283:58:7;;31146:2:22;9283:58:7;;;31128:21:22;31185:2;31165:18;;;31158:30;31224;31204:18;;;31197:58;31272:18;;9283:58:7;30944:352:22;9283:58:7;9352:45;9381:1;9385:2;9389:7;9352:20;:45::i;:::-;-1:-1:-1;;;;;9408:13:7;;;;;;:9;:13;;;;;:18;;9425:1;;9408:13;:18;;9425:1;;9408:18;:::i;:::-;;;;-1:-1:-1;;9436:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9436:21:7;-1:-1:-1;;;;;9436:21:7;;;;;;;;9473:33;;9436:16;;;9473:33;;9436:16;;9473:33;9141:372;;:::o;6950:692:13:-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:13;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:13;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:22;-1:-1:-1;;;;;;88:32:22;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:22;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:22;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:22:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:22;;1343:180;-1:-1:-1;1343:180:22:o;1736:131::-;-1:-1:-1;;;;;1811:31:22;;1801:42;;1791:70;;1857:1;1854;1847:12;1872:315;1940:6;1948;2001:2;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2056:9;2043:23;2075:31;2100:5;2075:31;:::i;:::-;2125:5;2177:2;2162:18;;;;2149:32;;-1:-1:-1;;;1872:315:22:o;2374:127::-;2435:10;2430:3;2426:20;2423:1;2416:31;2466:4;2463:1;2456:15;2490:4;2487:1;2480:15;2506:275;2577:2;2571:9;2642:2;2623:13;;-1:-1:-1;;2619:27:22;2607:40;;2677:18;2662:34;;2698:22;;;2659:62;2656:88;;;2724:18;;:::i;:::-;2760:2;2753:22;2506:275;;-1:-1:-1;2506:275:22:o;2786:712::-;2840:5;2893:3;2886:4;2878:6;2874:17;2870:27;2860:55;;2911:1;2908;2901:12;2860:55;2947:6;2934:20;2973:4;2996:18;2992:2;2989:26;2986:52;;;3018:18;;:::i;:::-;3064:2;3061:1;3057:10;3087:28;3111:2;3107;3103:11;3087:28;:::i;:::-;3149:15;;;3219;;;3215:24;;;3180:12;;;;3251:15;;;3248:35;;;3279:1;3276;3269:12;3248:35;3315:2;3307:6;3303:15;3292:26;;3327:142;3343:6;3338:3;3335:15;3327:142;;;3409:17;;3397:30;;3360:12;;;;3447;;;;3327:142;;3503:663;3630:6;3638;3646;3699:2;3687:9;3678:7;3674:23;3670:32;3667:52;;;3715:1;3712;3705:12;3667:52;3751:9;3738:23;3728:33;;3812:2;3801:9;3797:18;3784:32;3835:18;3876:2;3868:6;3865:14;3862:34;;;3892:1;3889;3882:12;3862:34;3915:61;3968:7;3959:6;3948:9;3944:22;3915:61;:::i;:::-;3905:71;;4029:2;4018:9;4014:18;4001:32;3985:48;;4058:2;4048:8;4045:16;4042:36;;;4074:1;4071;4064:12;4042:36;;4097:63;4152:7;4141:8;4130:9;4126:24;4097:63;:::i;:::-;4087:73;;;3503:663;;;;;:::o;4171:456::-;4248:6;4256;4264;4317:2;4305:9;4296:7;4292:23;4288:32;4285:52;;;4333:1;4330;4323:12;4285:52;4372:9;4359:23;4391:31;4416:5;4391:31;:::i;:::-;4441:5;-1:-1:-1;4498:2:22;4483:18;;4470:32;4511:33;4470:32;4511:33;:::i;:::-;4171:456;;4563:7;;-1:-1:-1;;;4617:2:22;4602:18;;;;4589:32;;4171:456::o;4814:471::-;4906:6;4914;4922;4975:2;4963:9;4954:7;4950:23;4946:32;4943:52;;;4991:1;4988;4981:12;4943:52;5030:9;5017:23;5049:31;5074:5;5049:31;:::i;:::-;5099:5;-1:-1:-1;5151:2:22;5136:18;;5123:32;;-1:-1:-1;5207:2:22;5192:18;;5179:32;5220:33;5179:32;5220:33;:::i;:::-;5272:7;5262:17;;;4814:471;;;;;:::o;5290:592::-;5361:6;5369;5422:2;5410:9;5401:7;5397:23;5393:32;5390:52;;;5438:1;5435;5428:12;5390:52;5478:9;5465:23;5507:18;5548:2;5540:6;5537:14;5534:34;;;5564:1;5561;5554:12;5534:34;5602:6;5591:9;5587:22;5577:32;;5647:7;5640:4;5636:2;5632:13;5628:27;5618:55;;5669:1;5666;5659:12;5618:55;5709:2;5696:16;5735:2;5727:6;5724:14;5721:34;;;5751:1;5748;5741:12;5721:34;5796:7;5791:2;5782:6;5778:2;5774:15;5770:24;5767:37;5764:57;;;5817:1;5814;5807:12;5764:57;5848:2;5840:11;;;;;5870:6;;-1:-1:-1;5290:592:22;;-1:-1:-1;;;;5290:592:22:o;5887:247::-;5946:6;5999:2;5987:9;5978:7;5974:23;5970:32;5967:52;;;6015:1;6012;6005:12;5967:52;6054:9;6041:23;6073:31;6098:5;6073:31;:::i;6139:632::-;6310:2;6362:21;;;6432:13;;6335:18;;;6454:22;;;6281:4;;6310:2;6533:15;;;;6507:2;6492:18;;;6281:4;6576:169;6590:6;6587:1;6584:13;6576:169;;;6651:13;;6639:26;;6720:15;;;;6685:12;;;;6612:1;6605:9;6576:169;;;-1:-1:-1;6762:3:22;;6139:632;-1:-1:-1;;;;;;6139:632:22:o;6776:1142::-;6939:6;6947;6955;6963;6971;7024:3;7012:9;7003:7;6999:23;6995:33;6992:53;;;7041:1;7038;7031:12;6992:53;7081:9;7068:23;7110:18;7151:2;7143:6;7140:14;7137:34;;;7167:1;7164;7157:12;7137:34;7205:6;7194:9;7190:22;7180:32;;7250:7;7243:4;7239:2;7235:13;7231:27;7221:55;;7272:1;7269;7262:12;7221:55;7312:2;7299:16;7338:2;7330:6;7327:14;7324:34;;;7354:1;7351;7344:12;7324:34;7409:7;7402:4;7392:6;7389:1;7385:14;7381:2;7377:23;7373:34;7370:47;7367:67;;;7430:1;7427;7420:12;7367:67;7461:4;7453:13;;;;-1:-1:-1;7485:6:22;-1:-1:-1;7523:20:22;;;7510:34;;-1:-1:-1;7597:2:22;7582:18;;7569:32;;7613:16;;;7610:36;;;7642:1;7639;7632:12;7610:36;7665:63;7720:7;7709:8;7698:9;7694:24;7665:63;:::i;:::-;7655:73;;7781:2;7770:9;7766:18;7753:32;7737:48;;7810:2;7800:8;7797:16;7794:36;;;7826:1;7823;7816:12;7794:36;;7849:63;7904:7;7893:8;7882:9;7878:24;7849:63;:::i;:::-;7839:73;;;6776:1142;;;;;;;;:::o;8329:796::-;8558:2;8610:21;;;8680:13;;8583:18;;;8702:22;;;8529:4;;8558:2;8743;;8761:18;;;;8802:15;;;8529:4;8845:254;8859:6;8856:1;8853:13;8845:254;;;8918:13;;8956:9;;8944:22;;9006:11;;9000:18;8986:12;;;8979:40;9039:12;;;;9074:15;;;;8881:1;8874:9;8845:254;;;-1:-1:-1;9116:3:22;;8329:796;-1:-1:-1;;;;;;;8329:796:22:o;9130:118::-;9216:5;9209:13;9202:21;9195:5;9192:32;9182:60;;9238:1;9235;9228:12;9253:382;9318:6;9326;9379:2;9367:9;9358:7;9354:23;9350:32;9347:52;;;9395:1;9392;9385:12;9347:52;9434:9;9421:23;9453:31;9478:5;9453:31;:::i;:::-;9503:5;-1:-1:-1;9560:2:22;9545:18;;9532:32;9573:30;9532:32;9573:30;:::i;:::-;9622:7;9612:17;;;9253:382;;;;;:::o;9640:1108::-;9735:6;9743;9751;9759;9812:3;9800:9;9791:7;9787:23;9783:33;9780:53;;;9829:1;9826;9819:12;9780:53;9868:9;9855:23;9887:31;9912:5;9887:31;:::i;:::-;9937:5;-1:-1:-1;9961:2:22;10000:18;;;9987:32;10028:33;9987:32;10028:33;:::i;:::-;10080:7;-1:-1:-1;10134:2:22;10119:18;;10106:32;;-1:-1:-1;10189:2:22;10174:18;;10161:32;10212:18;10242:14;;;10239:34;;;10269:1;10266;10259:12;10239:34;10307:6;10296:9;10292:22;10282:32;;10352:7;10345:4;10341:2;10337:13;10333:27;10323:55;;10374:1;10371;10364:12;10323:55;10410:2;10397:16;10432:2;10428;10425:10;10422:36;;;10438:18;;:::i;:::-;10480:53;10523:2;10504:13;;-1:-1:-1;;10500:27:22;10496:36;;10480:53;:::i;:::-;10467:66;;10556:2;10549:5;10542:17;10596:7;10591:2;10586;10582;10578:11;10574:20;10571:33;10568:53;;;10617:1;10614;10607:12;10568:53;10672:2;10667;10663;10659:11;10654:2;10647:5;10643:14;10630:45;10716:1;10711:2;10706;10699:5;10695:14;10691:23;10684:34;;10737:5;10727:15;;;;;9640:1108;;;;;;;:::o;10753:388::-;10821:6;10829;10882:2;10870:9;10861:7;10857:23;10853:32;10850:52;;;10898:1;10895;10888:12;10850:52;10937:9;10924:23;10956:31;10981:5;10956:31;:::i;:::-;11006:5;-1:-1:-1;11063:2:22;11048:18;;11035:32;11076:33;11035:32;11076:33;:::i;11146:380::-;11225:1;11221:12;;;;11268;;;11289:61;;11343:4;11335:6;11331:17;11321:27;;11289:61;11396:2;11388:6;11385:14;11365:18;11362:38;11359:161;;11442:10;11437:3;11433:20;11430:1;11423:31;11477:4;11474:1;11467:15;11505:4;11502:1;11495:15;11359:161;;11146:380;;;:::o;12771:340::-;12973:2;12955:21;;;13012:2;12992:18;;;12985:30;-1:-1:-1;;;13046:2:22;13031:18;;13024:46;13102:2;13087:18;;12771:340::o;13116:353::-;13318:2;13300:21;;;13357:2;13337:18;;;13330:30;13396:31;13391:2;13376:18;;13369:59;13460:2;13445:18;;13116:353::o;13474:416::-;13676:2;13658:21;;;13715:2;13695:18;;;13688:30;13754:34;13749:2;13734:18;;13727:62;-1:-1:-1;;;13820:2:22;13805:18;;13798:50;13880:3;13865:19;;13474:416::o;13895:127::-;13956:10;13951:3;13947:20;13944:1;13937:31;13987:4;13984:1;13977:15;14011:4;14008:1;14001:15;14027:125;14067:4;14095:1;14092;14089:8;14086:34;;;14100:18;;:::i;:::-;-1:-1:-1;14137:9:22;;14027:125::o;14157:128::-;14197:3;14228:1;14224:6;14221:1;14218:13;14215:39;;;14234:18;;:::i;:::-;-1:-1:-1;14270:9:22;;14157:128::o;14290:398::-;14492:2;14474:21;;;14531:2;14511:18;;;14504:30;14570:34;14565:2;14550:18;;14543:62;-1:-1:-1;;;14636:2:22;14621:18;;14614:32;14678:3;14663:19;;14290:398::o;14693:168::-;14733:7;14799:1;14795;14791:6;14787:14;14784:1;14781:21;14776:1;14769:9;14762:17;14758:45;14755:71;;;14806:18;;:::i;:::-;-1:-1:-1;14846:9:22;;14693:168::o;14866:184::-;14936:6;14989:2;14977:9;14968:7;14964:23;14960:32;14957:52;;;15005:1;15002;14995:12;14957:52;-1:-1:-1;15028:16:22;;14866:184;-1:-1:-1;14866:184:22:o;15678:356::-;15880:2;15862:21;;;15899:18;;;15892:30;15958:34;15953:2;15938:18;;15931:62;16025:2;16010:18;;15678:356::o;16399:413::-;16601:2;16583:21;;;16640:2;16620:18;;;16613:30;16679:34;16674:2;16659:18;;16652:62;-1:-1:-1;;;16745:2:22;16730:18;;16723:47;16802:3;16787:19;;16399:413::o;17991:127::-;18052:10;18047:3;18043:20;18040:1;18033:31;18083:4;18080:1;18073:15;18107:4;18104:1;18097:15;18533:355;18735:2;18717:21;;;18774:2;18754:18;;;18747:30;18813:33;18808:2;18793:18;;18786:61;18879:2;18864:18;;18533:355::o;18893:135::-;18932:3;18953:17;;;18950:43;;18973:18;;:::i;:::-;-1:-1:-1;19020:1:22;19009:13;;18893:135::o;20425:339::-;20627:2;20609:21;;;20666:2;20646:18;;;20639:30;-1:-1:-1;;;20700:2:22;20685:18;;20678:45;20755:2;20740:18;;20425:339::o;22097:772::-;22478:3;22516:6;22510:13;22532:53;22578:6;22573:3;22566:4;22558:6;22554:17;22532:53;:::i;:::-;-1:-1:-1;;;22607:16:22;;;22632:18;;;22675:13;;22697:65;22675:13;22749:1;22738:13;;22731:4;22719:17;;22697:65;:::i;:::-;-1:-1:-1;;;22825:1:22;22781:20;;;;22817:10;;;22810:27;22861:1;22853:10;;22097:772;-1:-1:-1;;;;22097:772:22:o;25115:414::-;25317:2;25299:21;;;25356:2;25336:18;;;25329:30;25395:34;25390:2;25375:18;;25368:62;-1:-1:-1;;;25461:2:22;25446:18;;25439:48;25519:3;25504:19;;25115:414::o;25534:127::-;25595:10;25590:3;25586:20;25583:1;25576:31;25626:4;25623:1;25616:15;25650:4;25647:1;25640:15;25666:120;25706:1;25732;25722:35;;25737:18;;:::i;:::-;-1:-1:-1;25771:9:22;;25666:120::o;25791:112::-;25823:1;25849;25839:35;;25854:18;;:::i;:::-;-1:-1:-1;25888:9:22;;25791:112::o;27998:245::-;28065:6;28118:2;28106:9;28097:7;28093:23;28089:32;28086:52;;;28134:1;28131;28124:12;28086:52;28166:9;28160:16;28185:28;28207:5;28185:28;:::i;28659:489::-;-1:-1:-1;;;;;28928:15:22;;;28910:34;;28980:15;;28975:2;28960:18;;28953:43;29027:2;29012:18;;29005:34;;;29075:3;29070:2;29055:18;;29048:31;;;28853:4;;29096:46;;29122:19;;29114:6;29096:46;:::i;:::-;29088:54;28659:489;-1:-1:-1;;;;;;28659:489:22:o;29153:249::-;29222:6;29275:2;29263:9;29254:7;29250:23;29246:32;29243:52;;;29291:1;29288;29281:12;29243:52;29323:9;29317:16;29342:30;29366:5;29342:30;:::i;29407:127::-;29468:10;29463:3;29459:20;29456:1;29449:31;29499:4;29496:1;29489:15;29523:4;29520:1;29513:15;30304:274;30433:3;30471:6;30465:13;30487:53;30533:6;30528:3;30521:4;30513:6;30509:17;30487:53;:::i;:::-;30556:16;;;;;30304:274;-1:-1:-1;;30304:274:22:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "forwardERC20s(address,uint256,address)": {
        "details": "allows owner to send ERC20s held by this contract to target"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mintCelestialWhitelist(bytes32[],uint256,uint256[],uint256[])": {
        "details": "GEN0 minting"
      },
      "mintCelestialWithAVAX(uint256,uint256[],uint256[])": {
        "details": "GEN0 minting"
      },
      "mintCelestialWithSoul(uint256,uint256[],uint256[])": {
        "details": "GEN0 minting"
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "setMerkleRoot(bytes32)": {
        "details": "merkle root for WL wallets"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawAVAX(uint256)": {
        "details": "allows owner to withdraw AVAX"
      }
    },
    "version": 1
  },
  "offset": [
    408,
    13186
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x758C0B9E GT PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xB4FAD9AF GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xE7B27AF7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE9F169F7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE9F169F7 EQ PUSH2 0xA88 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA9E JUMPI DUP1 PUSH4 0xF7BE4F11 EQ PUSH2 0xABE JUMPI DUP1 PUSH4 0xFF2A7656 EQ PUSH2 0xAD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE7B27AF7 EQ PUSH2 0x9F3 JUMPI DUP1 PUSH4 0xE7C235B9 EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0xE7D97E52 EQ PUSH2 0xA29 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xA3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDB4BEC44 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xDB4BEC44 EQ PUSH2 0x971 JUMPI DUP1 PUSH4 0xDBDDB26A EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0xDE20BC92 EQ PUSH2 0x9B3 JUMPI DUP1 PUSH4 0xE2EA1319 EQ PUSH2 0x9D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4FAD9AF EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x911 JUMPI DUP1 PUSH4 0xBC7D4034 EQ PUSH2 0x931 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EA6DB3D GT PUSH2 0x185 JUMPI DUP1 PUSH4 0xA756A1DF GT PUSH2 0x154 JUMPI DUP1 PUSH4 0xA756A1DF EQ PUSH2 0x8A3 JUMPI DUP1 PUSH4 0xA7D5EC2D EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xAEB5CD5E EQ PUSH2 0x8CC JUMPI DUP1 PUSH4 0xAFF9EFE8 EQ PUSH2 0x8DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EA6DB3D EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xA377D7EF EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0xA682F862 EQ PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x815B7A8C GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x815B7A8C EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x800 JUMPI DUP1 PUSH4 0x9B76DBCA EQ PUSH2 0x815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x758C0B9E EQ PUSH2 0x779 JUMPI DUP1 PUSH4 0x7B82FDA6 EQ PUSH2 0x78F JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33F6832A GT PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x26A JUMPI DUP1 PUSH4 0x70022BDA GT PUSH2 0x239 JUMPI DUP1 PUSH4 0x70022BDA EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x74E JUMPI DUP1 PUSH4 0x73033BDA EQ PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0x65E940A2 EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0x6B988176 EQ PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43F37B98 GT PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x43F37B98 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0x4EBBC92A EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33F6832A EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x3C1D4DE7 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x4036AB78 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200ED855 GT PUSH2 0x34F JUMPI DUP1 PUSH4 0x2CFB18B1 GT PUSH2 0x31E JUMPI DUP1 PUSH4 0x2CFB18B1 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x32A2EC41 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200ED855 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x2A6414B0 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x2B95B732 EQ PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x38B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x11A2428A EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x1DBB64BA EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x409 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2FFE JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x30B4 JUMP JUMPDEST PUSH2 0xC33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0xD48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x319C JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0xFD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x1053 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH8 0x120A871CC0020000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0x30B4 JUMP JUMPDEST PUSH2 0x1084 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x1199 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x11FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x631 CALLDATASIZE PUSH1 0x4 PUSH2 0x324A JUMP JUMPDEST PUSH2 0x1215 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0x651 CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x671 CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x691 CALLDATASIZE PUSH1 0x4 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x12F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x6D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x1327 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x1388 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x721 PUSH2 0x71C CALLDATASIZE PUSH1 0x4 PUSH2 0x32FE JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x331B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x749 CALLDATASIZE PUSH1 0x4 PUSH2 0x32FE JUMP JUMPDEST PUSH2 0x146E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x14F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x461 PUSH2 0x79D CALLDATASIZE PUSH1 0x4 PUSH2 0x335F JUMP JUMPDEST PUSH2 0x152B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x7BD CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x174D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x429 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x429 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x177C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84B PUSH2 0x846 CALLDATASIZE PUSH1 0x4 PUSH2 0x32FE JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x3425 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x873 CALLDATASIZE PUSH1 0x4 PUSH2 0x3482 JUMP JUMPDEST PUSH2 0x1897 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0x195B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x3A98 DUP2 JUMP JUMPDEST PUSH2 0x461 PUSH2 0x8C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x319C JUMP JUMPDEST PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x461 PUSH2 0x8DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x1A96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH8 0x14D1120D7B160000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x92C CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x1B70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x429 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x1BA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x98C CALLDATASIZE PUSH1 0x4 PUSH2 0x32FE JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x1C49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x429 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0x9EE CALLDATASIZE PUSH1 0x4 PUSH2 0x32FE JUMP JUMPDEST PUSH2 0x1CD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84B PUSH2 0xA24 CALLDATASIZE PUSH1 0x4 PUSH2 0x30B4 JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x357F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH2 0xAB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x32FE JUMP JUMPDEST PUSH2 0x1E44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xACA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xB0E JUMPI POP PUSH2 0xB0E DUP3 PUSH2 0x1EDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x35AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB4F SWAP1 PUSH2 0x35AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB9C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB9C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB7F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB1 DUP3 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3E DUP3 PUSH2 0x1327 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xCC7 JUMPI POP PUSH2 0xCC7 DUP2 CALLER PUSH2 0xA5A JUMP JUMPDEST PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0xD43 DUP4 DUP4 PUSH2 0x1F4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1A SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xD5F JUMPI POP PUSH1 0x1A SLOAD TIMESTAMP LT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x35E7 JUMP JUMPDEST DUP3 PUSH1 0x1 EQ DUP1 PUSH2 0xD9D JUMPI POP DUP3 PUSH1 0x5 EQ JUMPDEST DUP1 PUSH2 0xDA8 JUMPI POP DUP3 PUSH1 0xA EQ JUMPDEST PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3611 JUMP JUMPDEST DUP2 MLOAD DUP4 EQ DUP1 ISZERO PUSH2 0xDD4 JUMPI POP DUP1 MLOAD DUP4 EQ JUMPDEST PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3648 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0xDFF SWAP1 PUSH2 0x2710 PUSH2 0x36B2 JUMP JUMPDEST DUP4 PUSH1 0x12 SLOAD PUSH2 0xE0D SWAP2 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST GT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xB SLOAD PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x3723 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBA SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST LT ISZERO PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA0814D3D553 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x1388 PUSH1 0x13 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xF1C JUMPI POP PUSH2 0x1388 DUP5 PUSH1 0x13 SLOAD PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xF33 JUMPI PUSH1 0xB SLOAD PUSH2 0xF2F SWAP1 PUSH1 0x2 PUSH2 0x3723 JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST DUP4 PUSH1 0x13 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF45 SWAP2 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xFCE DUP5 DUP5 DUP5 PUSH2 0xFC9 CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1FBA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x104E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737461727454696D652063616E6E6F7420626520696E20746865207061737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1A SSTORE JUMP JUMPDEST PUSH2 0x105D CALLER DUP3 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3790 JUMP JUMPDEST PUSH2 0xD43 DUP4 DUP4 DUP4 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108F DUP4 PUSH2 0x146E JUMP JUMPDEST DUP3 LT PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737461727454696D652063616E6E6F7420626520696E20746865207061737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A4 DUP3 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0x11E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD43 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST PUSH2 0xD43 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0E DUP3 PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1269 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12DF JUMPI PUSH2 0x12DF PUSH2 0x37E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x131B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST PUSH2 0xD43 PUSH1 0xF DUP4 DUP4 PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x13AB DUP4 PUSH2 0x146E JUMP JUMPDEST GT PUSH2 0x13C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D3 DUP4 PUSH2 0x146E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13F0 PUSH2 0x30E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1419 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 PUSH2 0x1433 DUP7 DUP4 PUSH2 0x1084 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1448 JUMPI PUSH2 0x1448 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP DUP1 PUSH2 0x145E DUP2 PUSH2 0x382E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x141F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x151F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST PUSH2 0x1529 PUSH1 0x0 PUSH2 0x231C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x35E7 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SUB PUSH2 0x1596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1B5A5CDCDA5B99C81C9BDBDD PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1610 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x10 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0x236E JUMP JUMPDEST PUSH2 0x166A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x39B9B4B7B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST DUP4 PUSH1 0x1 EQ DUP1 PUSH2 0x1679 JUMPI POP DUP4 PUSH1 0x5 EQ JUMPDEST DUP1 PUSH2 0x1684 JUMPI POP DUP4 PUSH1 0xA EQ JUMPDEST PUSH2 0x16A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3611 JUMP JUMPDEST DUP3 MLOAD DUP5 EQ DUP1 ISZERO PUSH2 0x16B0 JUMPI POP DUP2 MLOAD DUP5 EQ JUMPDEST PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3648 JUMP JUMPDEST PUSH2 0x16DE DUP5 PUSH8 0x120A871CC0020000 PUSH2 0x3723 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x16FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3847 JUMP JUMPDEST DUP4 PUSH1 0x14 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x170F SWAP2 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1733 SWAP1 DUP5 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1745 SWAP1 POP DUP5 DUP5 DUP5 CALLER PUSH2 0x1FBA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x35AD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1798 DUP4 PUSH2 0x146E JUMP JUMPDEST GT PUSH2 0x17B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C0 DUP4 PUSH2 0x146E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17DD JUMPI PUSH2 0x17DD PUSH2 0x30E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1822 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17FB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 PUSH2 0x183C DUP7 DUP4 PUSH2 0x1084 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1B PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1878 JUMPI PUSH2 0x1878 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x188F SWAP1 PUSH2 0x382E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1828 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x18EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x19 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xD5F JUMPI POP POP PUSH1 0x19 SLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x199F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x35E7 JUMP JUMPDEST DUP3 PUSH1 0x1 EQ DUP1 PUSH2 0x19AE JUMPI POP DUP3 PUSH1 0x5 EQ JUMPDEST DUP1 PUSH2 0x19B9 JUMPI POP DUP3 PUSH1 0xA EQ JUMPDEST PUSH2 0x19D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3611 JUMP JUMPDEST DUP2 MLOAD DUP4 EQ DUP1 ISZERO PUSH2 0x19E5 JUMPI POP DUP1 MLOAD DUP4 EQ JUMPDEST PUSH2 0x1A01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3648 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x1A10 SWAP1 PUSH2 0x2710 PUSH2 0x36B2 JUMP JUMPDEST DUP4 PUSH1 0x12 SLOAD PUSH2 0x1A1E SWAP2 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST GT ISZERO PUSH2 0x1A3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A50 DUP5 PUSH8 0x14D1120D7B160000 PUSH2 0x3723 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3847 JUMP JUMPDEST DUP4 PUSH1 0x12 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A84 SWAP2 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xFCE SWAP1 POP DUP5 DUP5 DUP5 CALLER PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x1AE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B24 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x8CC2D2D8CAC840E8DE40E6CADCC84082AC82B PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x1B7A CALLER DUP4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x1B96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x3790 JUMP JUMPDEST PUSH2 0xFCE DUP5 DUP5 DUP5 DUP5 PUSH2 0x241F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BAD DUP3 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0x1C11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x1C19 PUSH2 0x2452 JUMP JUMPDEST PUSH2 0x1C22 DUP4 PUSH2 0x2461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C33 SWAP3 SWAP2 SWAP1 PUSH2 0x3870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x1C56 SWAP1 PUSH2 0x35AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C82 SWAP1 PUSH2 0x35AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CCF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CCF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CB2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D30 DUP5 PUSH2 0x146E JUMP JUMPDEST GT PUSH2 0x1D4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x5 DUP1 DUP3 MSTORE PUSH1 0xC0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D65 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1D9B DUP5 PUSH1 0x5 PUSH2 0x3723 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DAA DUP3 PUSH1 0x5 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB5 DUP7 PUSH2 0x146E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1DC5 DUP7 PUSH2 0x146E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E39 JUMPI PUSH1 0x0 PUSH2 0x1DDE DUP9 DUP4 PUSH2 0x1084 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1B PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE POP DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E1A JUMPI PUSH2 0x1E1A PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x1E31 SWAP1 PUSH2 0x382E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DCA JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x375B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1ED3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x1EDC DUP2 PUSH2 0x231C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1F10 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB0E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1F81 DUP3 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x202E JUMPI PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FD8 SWAP2 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x201C DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FF5 JUMPI PUSH2 0x1FF5 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x200F JUMPI PUSH2 0x200F PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2562 JUMP JUMPDEST DUP1 PUSH2 0x2026 DUP2 PUSH2 0x382E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FBD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2040 DUP3 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0x20A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AC DUP4 PUSH2 0x1327 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x20E7 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20DC DUP5 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2117 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2132 DUP3 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x219A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x21FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x2207 DUP4 DUP4 DUP4 PUSH2 0x2834 JUMP JUMPDEST PUSH2 0x2212 PUSH1 0x0 DUP3 PUSH2 0x1F4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x223B SWAP1 DUP5 SWAP1 PUSH2 0x36B2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2269 SWAP1 DUP5 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xD43 SWAP1 DUP5 SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2412 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2390 JUMPI PUSH2 0x2390 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x23D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x23FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x240A DUP2 PUSH2 0x382E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2373 JUMP JUMPDEST POP DUP4 EQ SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x242A DUP5 DUP5 DUP5 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x2436 DUP5 DUP5 DUP5 DUP5 PUSH2 0x29BE JUMP JUMPDEST PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x38BE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x35AD JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x2488 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x24B2 JUMPI DUP1 PUSH2 0x249C DUP2 PUSH2 0x382E JUMP JUMPDEST SWAP2 POP PUSH2 0x24AB SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3926 JUMP JUMPDEST SWAP2 POP PUSH2 0x248C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24CD JUMPI PUSH2 0x24CD PUSH2 0x30E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x24F7 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2117 JUMPI PUSH2 0x250C PUSH1 0x1 DUP4 PUSH2 0x36B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2519 PUSH1 0xA DUP7 PUSH2 0x393A JUMP JUMPDEST PUSH2 0x2524 SWAP1 PUSH1 0x30 PUSH2 0x36C9 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2539 JUMPI PUSH2 0x2539 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x255B PUSH1 0xA DUP7 PUSH2 0x3926 JUMP JUMPDEST SWAP5 POP PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2570 PUSH2 0x3A98 PUSH2 0x2710 PUSH2 0x36C9 JUMP JUMPDEST PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x25C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74206D696E7420616E796D6F72652063656C65737469616C730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x25CA DUP3 PUSH2 0x1F2F JUMP JUMPDEST ISZERO PUSH2 0x2617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746869732027746F6B656E49642720697320616C726561647920746F6F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x262A JUMPI POP PUSH2 0x2710 DUP3 GT ISZERO JUMPDEST PUSH2 0x2676 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x27746F6B656E496427206D75737420626520696E207468652072616E67650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x26E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468617420746F6B656E277320747970652068617320616C7265616479206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x195B881CD95D PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x26F0 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST DUP1 PUSH2 0x26FB JUMPI POP PUSH1 0x3 DUP2 EQ JUMPDEST PUSH2 0x2740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642063656C65737469616C2074797065 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x1 DUP2 SWAP1 SUB PUSH2 0x2774 JUMPI PUSH1 0x16 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x276A DUP4 PUSH2 0x382E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x27A2 JUMP JUMPDEST DUP1 PUSH1 0x2 SUB PUSH2 0x278C JUMPI PUSH1 0x17 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x276A DUP4 PUSH2 0x382E JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x279C DUP4 PUSH2 0x382E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH2 0x27AC DUP4 DUP4 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x27C3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xC3446D569695AA78750F8132CE4941514489A02C8CA9A2078EE392DCCD96474E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xB0C73316550069520AA3BFFD50BE8C7989584DA8716295793EDA73DBCD1C154C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x288F JUMPI PUSH2 0x288A DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x28B2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28B2 JUMPI PUSH2 0x28B2 DUP4 DUP3 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x28C9 JUMPI PUSH2 0xD43 DUP2 PUSH2 0x2B7A JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD43 JUMPI PUSH2 0xD43 DUP3 DUP3 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD43 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x295F SWAP2 SWAP1 PUSH2 0x394E JUMP JUMPDEST PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2AB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2A02 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x396B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2A3D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2A3A SWAP2 DUP2 ADD SWAP1 PUSH2 0x39A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2A9A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2A6B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A70 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2A92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x38BE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2117 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2AD9 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2C7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2AEA DUP5 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x2AF4 SWAP2 SWAP1 PUSH2 0x36B2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2B47 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B8C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x36B2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2BB4 JUMPI PUSH2 0x2BB4 PUSH2 0x37E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2BD5 JUMPI PUSH2 0x2BD5 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2C0D JUMPI PUSH2 0x2C0D PUSH2 0x39C5 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C34 DUP4 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2117 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2CAF JUMP JUMPDEST PUSH2 0x2C86 DUP4 DUP4 PUSH2 0x2DD7 JUMP JUMPDEST PUSH2 0x2C93 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x29BE JUMP JUMPDEST PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP1 PUSH2 0x38BE JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2D10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0E JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x2D5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2D7A SWAP2 SWAP1 PUSH2 0x39DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2DB7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2DBC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2DCC DUP3 DUP3 DUP7 PUSH2 0x2F16 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2E2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x2E36 DUP2 PUSH2 0x1F2F JUMP JUMPDEST ISZERO PUSH2 0x2E83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x2E8F PUSH1 0x0 DUP4 DUP4 PUSH2 0x2834 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2EB8 SWAP1 DUP5 SWAP1 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2F25 JUMPI POP DUP2 PUSH2 0x2418 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2F35 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2F5B SWAP1 PUSH2 0x35AD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2F7D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2FC3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2F96 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x2FC3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2FC3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2FC3 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST POP PUSH2 0x2FCF SWAP3 SWAP2 POP PUSH2 0x2FD3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2FCF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2FD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2418 DUP2 PUSH2 0x2FE8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3036 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x301E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFCE JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x305F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x301B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2418 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3047 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3098 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x30D2 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x311F JUMPI PUSH2 0x311F PUSH2 0x30E0 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3154 JUMPI PUSH2 0x3154 PUSH2 0x30E0 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x3163 DUP3 DUP3 ADD PUSH2 0x30F6 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x317D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x2DCC JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x3183 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x31D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31DC DUP8 DUP4 DUP9 ADD PUSH2 0x3127 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x31F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31FF DUP7 DUP3 DUP8 ADD PUSH2 0x3127 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x321E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3229 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3239 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x325F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x326A DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3281 DUP2 PUSH2 0x309F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x329F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x32B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x32DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x32EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2418 DUP2 PUSH2 0x309F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3353 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3337 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x338F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x33B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x33C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP8 POP SWAP6 POP SWAP1 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x33E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33F5 DUP10 DUP4 DUP11 ADD PUSH2 0x3127 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x340B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3418 DUP9 DUP3 DUP10 ADD PUSH2 0x3127 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3467 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3442 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x34A0 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x34B0 DUP2 PUSH2 0x3474 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x34DC DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 DUP2 ADD CALLDATALOAD PUSH2 0x34ED DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3537 JUMPI PUSH2 0x3537 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x3549 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x30F6 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x355F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x359D DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x34B0 DUP2 PUSH2 0x309F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x35C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x35E1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x7175616E74697479206D7573742062652031206F722035206F72203130000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C656E677468206F662074686520616D6F756E74206F6620746865206E667420 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x6D75737420626520657175616C20746F20717479 PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x36C4 JUMPI PUSH2 0x36C4 PUSH2 0x369C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x36DC JUMPI PUSH2 0x36DC PUSH2 0x369C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x796F752063616E2774206D696E742074686174206D616E79207269676874206E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6F77 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x373D JUMPI PUSH2 0x373D PUSH2 0x369C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x7468657265206973206E6F206E667420696E20796F75722062616C616E636500 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3840 JUMPI PUSH2 0x3840 PUSH2 0x369C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0xDCDEE840CADCDEEACED04082AC82B PUSH1 0x8B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3882 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x301B JUMP JUMPDEST PUSH1 0x2F PUSH1 0xF8 SHL SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x38A0 DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x301B JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL PUSH1 0x1 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x6 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3935 JUMPI PUSH2 0x3935 PUSH2 0x3910 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3949 JUMPI PUSH2 0x3949 PUSH2 0x3910 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2418 DUP2 PUSH2 0x3474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x399E SWAP1 DUP4 ADD DUP5 PUSH2 0x3047 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2418 DUP2 PUSH2 0x2FE8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x39ED DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x301B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH5 0xB3330A2323 PUSH8 0xAD87838B18F2C55F 0x24 0xEC 0xB6 LOG1 0xB4 SWAP12 0xF LOG0 0xC9 SELFBALANCE KECCAK256 PUSH6 0x277B2E9A6473 PUSH16 0x6C634300080D00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "LT",
      "path": "19"
    },
    "9": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3AD"
    },
    "12": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "SHR",
      "path": "19"
    },
    "19": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "20": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x758C0B9E"
    },
    "25": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E7"
    },
    "29": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "30": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "31": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB4FAD9AF"
    },
    "36": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "37": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10D"
    },
    "40": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "41": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "42": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7B27AF7"
    },
    "47": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "48": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "52": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "53": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE9F169F7"
    },
    "58": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "59": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "63": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "64": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE9F169F7"
    },
    "69": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "70": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA88"
    },
    "73": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "74": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "75": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "81": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA9E"
    },
    "84": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "85": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "86": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF7BE4F11"
    },
    "91": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "92": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xABE"
    },
    "95": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "96": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "97": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFF2A7656"
    },
    "102": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "103": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAD3"
    },
    "106": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "107": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "110": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "111": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "112": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "113": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7B27AF7"
    },
    "118": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "119": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9F3"
    },
    "122": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "123": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "124": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7C235B9"
    },
    "129": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "130": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA09"
    },
    "133": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "134": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "135": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7D97E52"
    },
    "140": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "141": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA29"
    },
    "144": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "145": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "146": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE985E9C5"
    },
    "151": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "152": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA3F"
    },
    "155": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "156": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "159": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "160": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "161": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "162": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDB4BEC44"
    },
    "167": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "168": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "172": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "173": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDB4BEC44"
    },
    "178": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "179": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x971"
    },
    "182": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "183": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "184": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDBDDB26A"
    },
    "189": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "190": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x99E"
    },
    "193": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "194": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "195": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDE20BC92"
    },
    "200": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "201": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9B3"
    },
    "204": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "205": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "206": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE2EA1319"
    },
    "211": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "212": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9D3"
    },
    "215": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "216": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "219": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "220": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "221": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "222": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB4FAD9AF"
    },
    "227": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "228": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8F5"
    },
    "231": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "232": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "233": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB88D4FDE"
    },
    "238": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "239": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x911"
    },
    "242": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "243": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "244": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBC7D4034"
    },
    "249": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "250": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x931"
    },
    "253": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "254": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "255": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC87B56DD"
    },
    "260": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "261": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x951"
    },
    "264": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "265": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "267": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "268": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "269": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "270": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "271": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9EA6DB3D"
    },
    "276": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "277": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x185"
    },
    "280": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "281": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "282": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA756A1DF"
    },
    "287": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "288": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x154"
    },
    "291": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "292": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "293": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA756A1DF"
    },
    "298": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "299": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8A3"
    },
    "302": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "303": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "304": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA7D5EC2D"
    },
    "309": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "310": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8B9"
    },
    "313": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "314": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "315": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAEB5CD5E"
    },
    "320": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "321": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8CC"
    },
    "324": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "325": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "326": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAFF9EFE8"
    },
    "331": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "332": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8DF"
    },
    "335": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "336": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "338": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "339": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "340": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "341": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "342": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9EA6DB3D"
    },
    "347": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "348": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x82B"
    },
    "351": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "352": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "353": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA22CB465"
    },
    "358": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "359": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x858"
    },
    "362": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "363": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "364": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA377D7EF"
    },
    "369": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "370": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x878"
    },
    "373": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "374": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "375": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA682F862"
    },
    "380": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "381": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x88D"
    },
    "384": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "385": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "388": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "389": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "390": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "391": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x815B7A8C"
    },
    "396": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "397": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C1"
    },
    "400": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "401": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "402": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x815B7A8C"
    },
    "407": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "408": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7C2"
    },
    "411": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "412": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "413": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "418": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "419": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7E2"
    },
    "422": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "423": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "424": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95D89B41"
    },
    "429": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "430": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x800"
    },
    "433": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "434": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "435": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9B76DBCA"
    },
    "440": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "441": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x815"
    },
    "444": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "445": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "447": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "448": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "449": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "450": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "451": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x758C0B9E"
    },
    "456": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "457": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x779"
    },
    "460": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "461": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "462": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7B82FDA6"
    },
    "467": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "468": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x78F"
    },
    "471": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "472": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "473": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7CB64759"
    },
    "478": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "479": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7A2"
    },
    "482": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "483": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "485": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "486": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "487": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "488": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "489": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x33F6832A"
    },
    "494": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "495": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D7"
    },
    "498": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "499": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "500": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5C975ABB"
    },
    "505": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "506": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26A"
    },
    "509": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "510": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "511": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70022BDA"
    },
    "516": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "517": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x239"
    },
    "520": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "521": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "522": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70022BDA"
    },
    "527": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "528": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x701"
    },
    "531": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "532": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "533": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "538": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "539": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x72E"
    },
    "542": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "543": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "544": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "549": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "550": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x74E"
    },
    "553": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "554": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "555": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x73033BDA"
    },
    "560": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "561": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x763"
    },
    "564": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "565": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "567": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "568": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "569": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "570": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "571": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5C975ABB"
    },
    "576": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "577": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x696"
    },
    "580": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "581": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "582": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6352211E"
    },
    "587": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "588": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B5"
    },
    "591": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "592": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "593": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x65E940A2"
    },
    "598": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "599": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6D5"
    },
    "602": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "603": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "604": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6B988176"
    },
    "609": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "610": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6EB"
    },
    "613": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "614": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "616": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "617": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "618": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "619": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "620": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x43F37B98"
    },
    "625": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "626": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2A6"
    },
    "629": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "630": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "631": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x43F37B98"
    },
    "636": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "637": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x616"
    },
    "640": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "641": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "642": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4EBBC92A"
    },
    "647": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "648": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x636"
    },
    "651": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "652": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "653": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4F6CCCE7"
    },
    "658": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "659": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x656"
    },
    "662": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "663": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "664": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x55F804B3"
    },
    "669": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "670": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x676"
    },
    "673": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "674": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "676": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "677": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "678": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "679": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "680": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x33F6832A"
    },
    "685": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "686": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x589"
    },
    "689": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "690": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "691": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3C1D4DE7"
    },
    "696": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "697": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5B6"
    },
    "700": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "701": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "702": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4036AB78"
    },
    "707": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "708": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5D6"
    },
    "711": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "712": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "713": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x42842E0E"
    },
    "718": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "719": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5F6"
    },
    "722": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "723": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "725": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "726": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "727": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "728": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "729": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x200ED855"
    },
    "734": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "735": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F"
    },
    "738": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "739": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "740": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2CFB18B1"
    },
    "745": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "746": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31E"
    },
    "749": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "750": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "751": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2CFB18B1"
    },
    "756": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "757": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x521"
    },
    "760": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "761": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "762": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2EB4A7AB"
    },
    "767": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "768": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x53D"
    },
    "771": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "772": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "773": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2F745C59"
    },
    "778": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "779": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x553"
    },
    "782": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "783": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "784": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x32A2EC41"
    },
    "789": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "790": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x573"
    },
    "793": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "794": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "796": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "797": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "798": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "799": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "800": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x200ED855"
    },
    "805": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "806": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4B7"
    },
    "809": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "810": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "811": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "816": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "817": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4D7"
    },
    "820": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "821": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "822": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2A6414B0"
    },
    "827": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "828": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4F7"
    },
    "831": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "832": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "833": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2B95B732"
    },
    "838": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "839": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50C"
    },
    "842": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "843": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "845": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "846": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "847": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "848": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "849": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95EA7B3"
    },
    "854": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "GT",
      "path": "19"
    },
    "855": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38B"
    },
    "858": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "859": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "860": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95EA7B3"
    },
    "865": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "866": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x441"
    },
    "869": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "870": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "871": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x11A2428A"
    },
    "876": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "877": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x463"
    },
    "880": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "881": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "882": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x18160DDD"
    },
    "887": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "888": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x478"
    },
    "891": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "892": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "893": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1DBB64BA"
    },
    "898": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "899": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x497"
    },
    "902": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "903": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "905": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "906": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "907": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "908": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "909": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1FFC9A7"
    },
    "914": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "915": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3B2"
    },
    "918": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "919": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "920": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6FDDE03"
    },
    "925": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "926": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3E7"
    },
    "929": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "930": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "931": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x81812FC"
    },
    "936": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "EQ",
      "path": "19"
    },
    "937": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x409"
    },
    "940": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "941": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "942": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "944": {
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "DUP1",
      "path": "19"
    },
    "945": {
      "first_revert": true,
      "fn": null,
      "offset": [
        408,
        13186
      ],
      "op": "REVERT",
      "path": "19"
    },
    "946": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "947": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "948": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "DUP1",
      "path": "10"
    },
    "949": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "950": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3BE"
    },
    "953": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "954": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "956": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "DUP1",
      "path": "10"
    },
    "957": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "REVERT",
      "path": "10"
    },
    "958": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "959": {
      "op": "POP"
    },
    "960": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3D2"
    },
    "963": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3CD"
    },
    "966": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "967": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "969": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FFE"
    },
    "972": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        910,
        1132
      ],
      "op": "JUMP",
      "path": "10"
    },
    "973": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "974": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE9"
    },
    "977": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        910,
        1132
      ],
      "op": "JUMP",
      "path": "10"
    },
    "978": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "979": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "981": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "982": {
      "op": "SWAP1"
    },
    "983": {
      "op": "ISZERO"
    },
    "984": {
      "op": "ISZERO"
    },
    "985": {
      "op": "DUP2"
    },
    "986": {
      "op": "MSTORE"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "989": {
      "op": "ADD"
    },
    "990": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "991": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "993": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "994": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "DUP1",
      "path": "10"
    },
    "995": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "996": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "SUB",
      "path": "10"
    },
    "997": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "998": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "RETURN",
      "path": "10"
    },
    "999": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1000": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1001": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1002": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1003": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F3"
    },
    "1006": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1007": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1009": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1010": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1011": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1012": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "POP",
      "path": "7"
    },
    "1013": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3FC"
    },
    "1016": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB14"
    },
    "1019": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1020": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1021": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1023": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1024": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DE"
    },
    "1027": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1028": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1029": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3073"
    },
    "1032": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1033": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1034": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1035": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1036": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1037": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x415"
    },
    "1040": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1041": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1043": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1044": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1045": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x429"
    },
    "1050": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x424"
    },
    "1053": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1054": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1056": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3086"
    },
    "1059": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1060": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1061": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBA6"
    },
    "1064": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1065": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1066": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "op": "SWAP1"
    },
    "1078": {
      "op": "SWAP2"
    },
    "1079": {
      "op": "AND"
    },
    "1080": {
      "op": "DUP2"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DE"
    },
    "1088": {
      "op": "JUMP"
    },
    "1089": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1093": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x44D"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1100": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x461"
    },
    "1106": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x45C"
    },
    "1109": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1110": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1112": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30B4"
    },
    "1115": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1116": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1117": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC33"
    },
    "1120": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1121": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1122": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "STOP",
      "path": "7"
    },
    "1123": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1124": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1125": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1126": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1127": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46F"
    },
    "1130": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1131": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1133": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1134": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1135": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1136": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "POP",
      "path": "19"
    },
    "1137": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D2"
    },
    "1140": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD48"
    },
    "1143": {
      "fn": "Celestial.mintingStartedSOUL",
      "jump": "i",
      "offset": [
        3816,
        3951
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1144": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1145": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1146": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1147": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1148": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x484"
    },
    "1151": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1152": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1154": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1155": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1156": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1632
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x8"
    },
    "1160": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1639
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1161": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1162": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1164": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1165": {
      "op": "SWAP1"
    },
    "1166": {
      "op": "DUP2"
    },
    "1167": {
      "op": "MSTORE"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1170": {
      "op": "ADD"
    },
    "1171": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3DE"
    },
    "1174": {
      "op": "JUMP"
    },
    "1175": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1176": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1177": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1178": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1179": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A3"
    },
    "1182": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1183": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1185": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1186": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1187": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1188": {
      "op": "POP"
    },
    "1189": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "1192": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4B2"
    },
    "1195": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1196": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1198": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x319C"
    },
    "1201": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        9851,
        11246
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1202": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1203": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD64"
    },
    "1206": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        9851,
        11246
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1207": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1208": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1209": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1210": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1211": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4C3"
    },
    "1214": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1215": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1217": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1218": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1219": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "1224": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4D2"
    },
    "1227": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1228": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1230": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3086"
    },
    "1233": {
      "fn": "Celestial.setStartTimeSOUL",
      "jump": "i",
      "offset": [
        2868,
        3093
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1234": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1235": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFD4"
    },
    "1238": {
      "fn": "Celestial.setStartTimeSOUL",
      "jump": "i",
      "offset": [
        2868,
        3093
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1243": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4E3"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1247": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x461"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F2"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1262": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3209"
    },
    "1265": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1266": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1267": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1053"
    },
    "1270": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1271": {
      "offset": [
        1121,
        1159
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1272": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1273": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1274": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1275": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x503"
    },
    "1278": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1279": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1282": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1283": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1284": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "POP",
      "path": "19"
    },
    "1285": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1288": {
      "offset": [
        1158,
        1159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1290": {
      "offset": [
        1121,
        1159
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1291": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1121,
        1159
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1292": {
      "offset": [
        1165,
        1203
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1293": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1294": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1295": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1296": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x518"
    },
    "1299": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1300": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1302": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1303": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1304": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1305": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "POP",
      "path": "19"
    },
    "1306": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1309": {
      "offset": [
        1202,
        1203
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "1311": {
      "offset": [
        1165,
        1203
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1312": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1165,
        1203
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1313": {
      "offset": [
        725,
        786
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1314": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1315": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1316": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1317": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x52D"
    },
    "1320": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1321": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1323": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1324": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1325": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1326": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "POP",
      "path": "19"
    },
    "1327": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1330": {
      "offset": [
        777,
        786
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0x120A871CC0020000"
    },
    "1339": {
      "offset": [
        725,
        786
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1340": {
      "fn": "ERC721.transferFrom",
      "offset": [
        725,
        786
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1341": {
      "offset": [
        1529,
        1554
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1342": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1343": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x549"
    },
    "1348": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1349": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1353": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1354": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "POP",
      "path": "19"
    },
    "1355": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1358": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "1360": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1361": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1362": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1529,
        1554
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1363": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1364": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1365": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1366": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1367": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x55F"
    },
    "1370": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1371": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1373": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1374": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1375": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1376": {
      "op": "POP"
    },
    "1377": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x489"
    },
    "1380": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x56E"
    },
    "1383": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1384": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1386": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30B4"
    },
    "1389": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1390": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1391": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1084"
    },
    "1394": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1395": {
      "offset": [
        1817,
        1844
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1396": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1397": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1398": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1399": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x57F"
    },
    "1402": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1403": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1405": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1406": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1407": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1408": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "POP",
      "path": "19"
    },
    "1409": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1412": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x16"
    },
    "1414": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1415": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1416": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1817,
        1844
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1417": {
      "offset": [
        2123,
        2168
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1418": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1419": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1420": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1421": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x595"
    },
    "1424": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1425": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1427": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1428": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1429": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1430": {
      "op": "POP"
    },
    "1431": {
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1434": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5A4"
    },
    "1437": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1438": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1440": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3086"
    },
    "1443": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        2123,
        2168
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1444": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1445": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1B"
    },
    "1447": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1449": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1450": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1452": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1453": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1454": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1455": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1457": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1458": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1459": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1460": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1461": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2123,
        2168
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1462": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1463": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1464": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1465": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1466": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5C2"
    },
    "1469": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1470": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1472": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1473": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1474": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "1479": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5D1"
    },
    "1482": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1483": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1485": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3086"
    },
    "1488": {
      "fn": "Celestial.setStartTimeAVAX",
      "jump": "i",
      "offset": [
        2637,
        2862
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1489": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1490": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x111A"
    },
    "1493": {
      "fn": "Celestial.setStartTimeAVAX",
      "jump": "i",
      "offset": [
        2637,
        2862
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1494": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1495": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1496": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1497": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1498": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5E2"
    },
    "1501": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1502": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1504": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1505": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1506": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1511": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5F1"
    },
    "1514": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1515": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1517": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3086"
    },
    "1520": {
      "fn": "Celestial.getType",
      "jump": "i",
      "offset": [
        3338,
        3507
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1521": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1522": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1199"
    },
    "1525": {
      "fn": "Celestial.getType",
      "jump": "i",
      "offset": [
        3338,
        3507
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1526": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1528": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x602"
    },
    "1533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1534": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1538": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1539": {
      "op": "POP"
    },
    "1540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x461"
    },
    "1543": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x611"
    },
    "1546": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3209"
    },
    "1552": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1554": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11FA"
    },
    "1557": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1558": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1559": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1560": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1561": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1562": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x622"
    },
    "1565": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1566": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1568": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1569": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1570": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "1575": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x631"
    },
    "1578": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1579": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1581": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x324A"
    },
    "1584": {
      "fn": "Celestial.forwardERC20s",
      "jump": "i",
      "offset": [
        4045,
        4218
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1585": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1586": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1215"
    },
    "1589": {
      "fn": "Celestial.forwardERC20s",
      "jump": "i",
      "offset": [
        4045,
        4218
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1590": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1591": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1592": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1593": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1594": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x642"
    },
    "1597": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1598": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1600": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1601": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1602": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D2"
    },
    "1607": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x651"
    },
    "1610": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1611": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1613": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3086"
    },
    "1616": {
      "fn": "Celestial.exist",
      "jump": "i",
      "offset": [
        4747,
        4847
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1617": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1618": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1253"
    },
    "1621": {
      "fn": "Celestial.exist",
      "jump": "i",
      "offset": [
        4747,
        4847
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1622": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1623": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1624": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1625": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1626": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x662"
    },
    "1629": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1630": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1632": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1633": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1634": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x489"
    },
    "1639": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x671"
    },
    "1642": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1643": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1645": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3086"
    },
    "1648": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1649": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1650": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x125E"
    },
    "1653": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1654": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1655": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1656": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1657": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1658": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x682"
    },
    "1661": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1662": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1664": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1665": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1666": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "1671": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x691"
    },
    "1674": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1675": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1677": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x328C"
    },
    "1680": {
      "fn": "Celestial.setBaseURI",
      "jump": "i",
      "offset": [
        3229,
        3332
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1681": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1682": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12F1"
    },
    "1685": {
      "fn": "Celestial.setBaseURI",
      "jump": "i",
      "offset": [
        3229,
        3332
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1686": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1687": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1688": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1689": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1690": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A2"
    },
    "1693": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1694": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1696": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1697": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1698": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0xA"
    },
    "1702": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1707": {
      "op": "SHL"
    },
    "1708": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1709": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "1710": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1712": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "1713": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D2"
    },
    "1716": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1717": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1718": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1719": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1720": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1721": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6C1"
    },
    "1724": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1725": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1727": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1728": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1729": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1730": {
      "op": "POP"
    },
    "1731": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x429"
    },
    "1734": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D0"
    },
    "1737": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1738": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1740": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3086"
    },
    "1743": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1744": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1745": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1327"
    },
    "1748": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1749": {
      "offset": [
        1639,
        1678
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1750": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1751": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1752": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1753": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6E1"
    },
    "1756": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1757": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1759": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1760": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1761": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1762": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "POP",
      "path": "19"
    },
    "1763": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1766": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "1768": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1769": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1770": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1639,
        1678
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1771": {
      "offset": [
        870,
        930
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1772": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1773": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1774": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1775": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F7"
    },
    "1778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1779": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1781": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1782": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "POP",
      "path": "19"
    },
    "1785": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1788": {
      "offset": [
        926,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1388"
    },
    "1791": {
      "offset": [
        870,
        930
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1792": {
      "fn": "ERC721.ownerOf",
      "offset": [
        870,
        930
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1793": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1794": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1795": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1796": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1797": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x70D"
    },
    "1800": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1801": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1803": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1804": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1805": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1806": {
      "op": "POP"
    },
    "1807": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x721"
    },
    "1810": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x71C"
    },
    "1813": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1814": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1816": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32FE"
    },
    "1819": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1820": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1821": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x139E"
    },
    "1824": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1825": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1826": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1828": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1829": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3DE"
    },
    "1832": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1833": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1834": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x331B"
    },
    "1837": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1838": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1839": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1840": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1841": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1842": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x73A"
    },
    "1845": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1846": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1848": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1849": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1850": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1851": {
      "op": "POP"
    },
    "1852": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x489"
    },
    "1855": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x749"
    },
    "1858": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1859": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1861": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32FE"
    },
    "1864": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1865": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1866": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x146E"
    },
    "1869": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1871": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1872": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1873": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1874": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75A"
    },
    "1877": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1878": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1880": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1881": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1882": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "1884": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461"
    },
    "1887": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F5"
    },
    "1890": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1891": {
      "offset": [
        1007,
        1058
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1892": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1893": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1895": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x76F"
    },
    "1898": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1899": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1901": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1902": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1903": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1904": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "POP",
      "path": "19"
    },
    "1905": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1908": {
      "offset": [
        1052,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "1911": {
      "offset": [
        1007,
        1058
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1912": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1007,
        1058
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1913": {
      "offset": [
        1850,
        1877
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1914": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1915": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1916": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1917": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x785"
    },
    "1920": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1921": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1923": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1924": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1925": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1926": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "POP",
      "path": "19"
    },
    "1927": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "1930": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "1932": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1933": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1934": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1850,
        1877
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1935": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1936": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "1939": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x79D"
    },
    "1942": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1943": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1945": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x335F"
    },
    "1948": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        6998,
        8733
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1949": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1950": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x152B"
    },
    "1953": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        6998,
        8733
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1954": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1955": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1956": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1957": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1958": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7AE"
    },
    "1961": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1962": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1964": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1965": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1966": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1967": {
      "op": "POP"
    },
    "1968": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "1971": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7BD"
    },
    "1974": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1975": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1977": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3086"
    },
    "1980": {
      "fn": "Celestial.setMerkleRoot",
      "jump": "i",
      "offset": [
        4637,
        4741
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1981": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1982": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x174D"
    },
    "1985": {
      "fn": "Celestial.setMerkleRoot",
      "jump": "i",
      "offset": [
        4637,
        4741
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1986": {
      "offset": [
        1372,
        1388
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1987": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1988": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1989": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1990": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7CE"
    },
    "1993": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1994": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1996": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1997": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1998": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1999": {
      "op": "POP"
    },
    "2000": {
      "offset": [
        1372,
        1388
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "2002": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2003": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x429"
    },
    "2006": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "op": "SUB"
    },
    "2015": {
      "offset": [
        1372,
        1388
      ],
      "op": "AND",
      "path": "19"
    },
    "2016": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2017": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1372,
        1388
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2018": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2019": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2020": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2021": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2022": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EE"
    },
    "2025": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2026": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2028": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2029": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2030": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "2034": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2044": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x429"
    },
    "2047": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2048": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2049": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2050": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2051": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2052": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x80C"
    },
    "2055": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2056": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2058": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2059": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2060": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2061": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "POP",
      "path": "7"
    },
    "2062": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3FC"
    },
    "2065": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177C"
    },
    "2068": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2069": {
      "offset": [
        1775,
        1810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2070": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2071": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2072": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2073": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x821"
    },
    "2076": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2077": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2079": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2080": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2081": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2082": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "POP",
      "path": "19"
    },
    "2083": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2086": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "2088": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2089": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2090": {
      "fn": "ERC721.symbol",
      "offset": [
        1775,
        1810
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2091": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2092": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2093": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2094": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2095": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x837"
    },
    "2098": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2099": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2101": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2102": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2103": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2104": {
      "op": "POP"
    },
    "2105": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x84B"
    },
    "2108": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x846"
    },
    "2111": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2112": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2114": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32FE"
    },
    "2117": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2118": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2119": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x178B"
    },
    "2122": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2123": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2124": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2126": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2127": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3DE"
    },
    "2130": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2131": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2132": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3425"
    },
    "2135": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2136": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2137": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2138": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2139": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2140": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x864"
    },
    "2143": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2144": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2146": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2147": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2148": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x461"
    },
    "2153": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x873"
    },
    "2156": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2157": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2159": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3482"
    },
    "2162": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2163": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2164": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1897"
    },
    "2167": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2168": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2169": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2170": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2171": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2172": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x884"
    },
    "2175": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2176": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2178": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2179": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2180": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2181": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "POP",
      "path": "19"
    },
    "2182": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D2"
    },
    "2185": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x195B"
    },
    "2188": {
      "fn": "Celestial.mintingStartedAVAX",
      "jump": "i",
      "offset": [
        3675,
        3810
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2189": {
      "offset": [
        1991,
        2019
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2190": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2191": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2192": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2193": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x899"
    },
    "2196": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2197": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2199": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2200": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2201": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2202": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "POP",
      "path": "19"
    },
    "2203": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2206": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x19"
    },
    "2208": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2209": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2210": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1991,
        2019
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2211": {
      "offset": [
        1064,
        1115
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2212": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2213": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2214": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2215": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8AF"
    },
    "2218": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2219": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2221": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2222": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2223": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2224": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "POP",
      "path": "19"
    },
    "2225": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2228": {
      "offset": [
        1109,
        1115
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A98"
    },
    "2231": {
      "offset": [
        1064,
        1115
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2232": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1064,
        1115
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2233": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2234": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "2237": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8C7"
    },
    "2240": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2241": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2243": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x319C"
    },
    "2246": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8780,
        9804
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2247": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2248": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1975"
    },
    "2251": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8780,
        9804
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2252": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2253": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "2256": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8DA"
    },
    "2259": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2260": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2262": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3086"
    },
    "2265": {
      "fn": "Celestial.withdrawAVAX",
      "jump": "i",
      "offset": [
        4282,
        4576
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2266": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2267": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A96"
    },
    "2270": {
      "fn": "Celestial.withdrawAVAX",
      "jump": "i",
      "offset": [
        4282,
        4576
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2271": {
      "offset": [
        1883,
        1913
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2272": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2273": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2274": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2275": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8EB"
    },
    "2278": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2279": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2281": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2282": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2283": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2284": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "POP",
      "path": "19"
    },
    "2285": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2288": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "2290": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2291": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2292": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        1883,
        1913
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2293": {
      "offset": [
        642,
        698
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2294": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2295": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2296": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2297": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x901"
    },
    "2300": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2301": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2303": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2304": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2305": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2306": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "POP",
      "path": "19"
    },
    "2307": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2310": {
      "offset": [
        689,
        698
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0x14D1120D7B160000"
    },
    "2319": {
      "offset": [
        642,
        698
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2320": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        698
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2321": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2322": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2323": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2324": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2325": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x91D"
    },
    "2328": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2329": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2331": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2332": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2333": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2334": {
      "op": "POP"
    },
    "2335": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x461"
    },
    "2338": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x92C"
    },
    "2341": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2342": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2344": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34BB"
    },
    "2347": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2348": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2349": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B70"
    },
    "2352": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2353": {
      "offset": [
        1394,
        1430
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2354": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2355": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x93D"
    },
    "2360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2361": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2365": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "offset": [
        1394,
        1430
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "2369": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x429"
    },
    "2373": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "offset": [
        1394,
        1430
      ],
      "op": "AND",
      "path": "19"
    },
    "2383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2384": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1394,
        1430
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2385": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2386": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2387": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2388": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2389": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x95D"
    },
    "2392": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2393": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2395": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2396": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2397": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3FC"
    },
    "2402": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x96C"
    },
    "2405": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2406": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2408": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3086"
    },
    "2411": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6563,
        6951
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2412": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2413": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BA2"
    },
    "2416": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6563,
        6951
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2417": {
      "offset": [
        1560,
        1611
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2418": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2419": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2420": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2421": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97D"
    },
    "2424": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2425": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2427": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2428": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2429": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2430": {
      "op": "POP"
    },
    "2431": {
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2434": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x98C"
    },
    "2437": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2438": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2440": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32FE"
    },
    "2443": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        1560,
        1611
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2444": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2445": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "2447": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2449": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2450": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2452": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2453": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2454": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2455": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2457": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2458": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2459": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2460": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2461": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1560,
        1611
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2462": {
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2463": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2464": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2465": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2466": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9AA"
    },
    "2469": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2470": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2472": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2473": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2474": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2475": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "POP",
      "path": "19"
    },
    "2476": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3FC"
    },
    "2479": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C49"
    },
    "2482": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2483": {
      "offset": [
        1436,
        1456
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2484": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2485": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2486": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2487": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9BF"
    },
    "2490": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2491": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2493": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2494": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2495": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2496": {
      "op": "POP"
    },
    "2497": {
      "offset": [
        1436,
        1456
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "2499": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2500": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x429"
    },
    "2503": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2510": {
      "op": "SHL"
    },
    "2511": {
      "op": "SUB"
    },
    "2512": {
      "offset": [
        1436,
        1456
      ],
      "op": "AND",
      "path": "19"
    },
    "2513": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2514": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1436,
        1456
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2515": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2516": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2517": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2518": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2519": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9DF"
    },
    "2522": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2523": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2525": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2526": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2527": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2528": {
      "op": "POP"
    },
    "2529": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x461"
    },
    "2532": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9EE"
    },
    "2535": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2536": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2538": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32FE"
    },
    "2541": {
      "fn": "Celestial.setStake",
      "jump": "i",
      "offset": [
        2548,
        2631
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2542": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2543": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CD7"
    },
    "2546": {
      "fn": "Celestial.setStake",
      "jump": "i",
      "offset": [
        2548,
        2631
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2547": {
      "offset": [
        2025,
        2053
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2548": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2549": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2550": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2551": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9FF"
    },
    "2554": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2555": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2557": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2558": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2559": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2560": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "POP",
      "path": "19"
    },
    "2561": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2564": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1A"
    },
    "2566": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2567": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2568": {
      "fn": "Celestial.setStake",
      "offset": [
        2025,
        2053
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2569": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2570": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2571": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2572": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2573": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA15"
    },
    "2576": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2577": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2579": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2580": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2581": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2582": {
      "op": "POP"
    },
    "2583": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x84B"
    },
    "2586": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA24"
    },
    "2589": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2590": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2592": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x30B4"
    },
    "2595": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12304,
        13184
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2596": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2597": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D23"
    },
    "2600": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12304,
        13184
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2601": {
      "offset": [
        1289,
        1339
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2602": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2603": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2604": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2605": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA35"
    },
    "2608": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2609": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2611": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2612": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2613": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2614": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "POP",
      "path": "19"
    },
    "2615": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2618": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "2620": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2621": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2622": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1289,
        1339
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2623": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2624": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2625": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2626": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2627": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA4B"
    },
    "2630": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2631": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2633": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2634": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2635": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2636": {
      "op": "POP"
    },
    "2637": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D2"
    },
    "2640": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA5A"
    },
    "2643": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2644": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2646": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x357F"
    },
    "2649": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2650": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "op": "SUB"
    },
    "2659": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 3
    },
    "2660": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2661": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "7"
    },
    "2662": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2664": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2665": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2666": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2667": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2669": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2671": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2672": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2673": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2674": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2676": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2677": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2678": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2679": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2680": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2681": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2682": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "7"
    },
    "2683": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2684": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2685": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2686": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2687": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2688": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2689": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2690": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2691": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2693": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "7"
    },
    "2694": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2695": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2696": {
      "offset": [
        1684,
        1723
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2697": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2698": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2699": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2700": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA94"
    },
    "2703": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2704": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2706": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2707": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2708": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2709": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "POP",
      "path": "19"
    },
    "2710": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2713": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "2715": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2716": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2717": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1684,
        1723
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2722": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAA"
    },
    "2725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2728": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2731": {
      "op": "POP"
    },
    "2732": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461"
    },
    "2735": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB9"
    },
    "2738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2739": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32FE"
    },
    "2744": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E44"
    },
    "2749": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2750": {
      "offset": [
        1209,
        1250
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xACA"
    },
    "2757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "POP",
      "path": "19"
    },
    "2764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2767": {
      "offset": [
        1249,
        1250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "2769": {
      "offset": [
        1209,
        1250
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1209,
        1250
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2771": {
      "offset": [
        1729,
        1769
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xADF"
    },
    "2778": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2781": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "POP",
      "path": "19"
    },
    "2785": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x489"
    },
    "2788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "2790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1729,
        1769
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2793": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2794": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1012,
        1016
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "op": "NOT"
    },
    "2805": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1085
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 4
    },
    "2806": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1085
      ],
      "op": "AND",
      "path": "10"
    },
    "2807": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2814": {
      "op": "SHL"
    },
    "2815": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1085
      ],
      "op": "EQ",
      "path": "10"
    },
    "2816": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2817": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1125
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB0E"
    },
    "2820": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1125
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2821": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1125
      ],
      "op": "POP",
      "path": "10"
    },
    "2822": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1089,
        1125
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB0E"
    },
    "2825": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1113,
        1124
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2826": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1089,
        1112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EDF"
    },
    "2829": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1089,
        1125
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2830": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1089,
        1125
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2831": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1028,
        1125
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2832": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2833": {
      "op": "POP"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        910,
        1132
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2836": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2837": {
      "fn": "ERC721.name",
      "offset": [
        2468,
        2481
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2839": {
      "fn": "ERC721.name",
      "offset": [
        2500,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x0"
    },
    "2841": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2842": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2843": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB23"
    },
    "2846": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2847": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35AD"
    },
    "2850": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2851": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2852": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2853": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2855": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2856": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2858": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2859": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2860": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "7"
    },
    "2861": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "7"
    },
    "2862": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2864": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2865": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2867": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2868": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2869": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2870": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2871": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2873": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2874": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2875": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2876": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2877": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2878": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2879": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2880": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2881": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2883": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2884": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2885": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2886": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2887": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB4F"
    },
    "2890": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2891": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35AD"
    },
    "2894": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2895": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2896": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2897": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2898": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB9C"
    },
    "2901": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2902": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2903": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2905": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "LT",
      "path": "7"
    },
    "2906": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB71"
    },
    "2909": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2910": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "2913": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2914": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2915": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2916": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "7"
    },
    "2917": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "7"
    },
    "2918": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2919": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2920": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2921": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2923": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2924": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2925": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB9C"
    },
    "2928": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2929": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2930": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2931": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2932": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2933": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2934": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2936": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2937": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2939": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2941": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2942": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2943": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2944": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2945": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2946": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2947": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2948": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2949": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2951": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2952": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2953": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2955": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2956": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2957": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2958": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "GT",
      "path": "7"
    },
    "2959": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB7F"
    },
    "2962": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2963": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2964": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2965": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SUB",
      "path": "7"
    },
    "2966": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2968": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "AND",
      "path": "7"
    },
    "2969": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2970": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2971": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2972": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2973": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2974": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2975": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2976": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2977": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2978": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2979": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2980": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2981": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2982": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2983": {
      "fn": "ERC721.getApproved",
      "offset": [
        4001,
        4008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2985": {
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4044
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 6,
      "value": "0xBB1"
    },
    "2988": {
      "fn": "ERC721.getApproved",
      "offset": [
        4036,
        4043
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2989": {
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4035
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F2F"
    },
    "2992": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4028,
        4044
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2993": {
      "branch": 212,
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4044
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2994": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC17"
    },
    "2997": {
      "branch": 212,
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2998": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3000": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3009": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3012": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3014": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3015": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "ADD",
      "path": "7"
    },
    "3016": {
      "op": "MSTORE"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3021": {
      "op": "DUP3"
    },
    "3022": {
      "op": "ADD"
    },
    "3023": {
      "op": "MSTORE"
    },
    "3024": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3059": {
      "op": "DUP3"
    },
    "3060": {
      "op": "ADD"
    },
    "3061": {
      "op": "MSTORE"
    },
    "3062": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3080": {
      "op": "DUP3"
    },
    "3081": {
      "op": "ADD"
    },
    "3082": {
      "op": "MSTORE"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3085": {
      "op": "ADD"
    },
    "3086": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3087": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3089": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3090": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3091": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3092": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SUB",
      "path": "7"
    },
    "3093": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3094": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "3095": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3096": {
      "op": "POP"
    },
    "3097": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x0"
    },
    "3099": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3100": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3101": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3102": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4126
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3104": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3106": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3107": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3109": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3110": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3111": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3118": {
      "op": "SHL"
    },
    "3119": {
      "op": "SUB"
    },
    "3120": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "AND",
      "path": "7"
    },
    "3121": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3122": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3123": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3124": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3556
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3126": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC3E"
    },
    "3129": {
      "fn": "ERC721.approve",
      "offset": [
        3574,
        3581
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3130": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3573
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1327"
    },
    "3133": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3134": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3135": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3136": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "POP",
      "path": "7"
    },
    "3137": {
      "fn": "ERC721.approve",
      "offset": [
        3606,
        3611
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 8
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "op": "SUB"
    },
    "3146": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "7"
    },
    "3147": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3602
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "7"
    },
    "3157": {
      "branch": 213,
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "SUB",
      "path": "7"
    },
    "3158": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCAB"
    },
    "3161": {
      "branch": 213,
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3162": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3164": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3165": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3171": {
      "op": "SHL"
    },
    "3172": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3173": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3176": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3178": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3179": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "ADD",
      "path": "7"
    },
    "3180": {
      "op": "MSTORE"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3185": {
      "op": "DUP3"
    },
    "3186": {
      "op": "ADD"
    },
    "3187": {
      "op": "MSTORE"
    },
    "3188": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3223": {
      "op": "DUP3"
    },
    "3224": {
      "op": "ADD"
    },
    "3225": {
      "op": "MSTORE"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3230": {
      "op": "SHL"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3233": {
      "op": "DUP3"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "op": "MSTORE"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "3242": {
      "op": "JUMP"
    },
    "3243": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3244": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 9
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3251": {
      "op": "SHL"
    },
    "3252": {
      "op": "SUB"
    },
    "3253": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 10
    },
    "3254": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "AND",
      "path": "7"
    },
    "3255": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "EQ",
      "path": "7"
    },
    "3256": {
      "branch": 214,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3257": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC7"
    },
    "3260": {
      "branch": 214,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3261": {
      "op": "POP"
    },
    "3262": {
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC7"
    },
    "3265": {
      "fn": "ERC721.approve",
      "offset": [
        3723,
        3728
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3266": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3267": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA5A"
    },
    "3270": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3271": {
      "branch": 215,
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3272": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD39"
    },
    "3275": {
      "branch": 215,
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3276": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3278": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3287": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3290": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3292": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3293": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "ADD",
      "path": "7"
    },
    "3294": {
      "op": "MSTORE"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3299": {
      "op": "DUP3"
    },
    "3300": {
      "op": "ADD"
    },
    "3301": {
      "op": "MSTORE"
    },
    "3302": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3337": {
      "op": "DUP3"
    },
    "3338": {
      "op": "ADD"
    },
    "3339": {
      "op": "MSTORE"
    },
    "3340": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3375": {
      "op": "DUP3"
    },
    "3376": {
      "op": "ADD"
    },
    "3377": {
      "op": "MSTORE"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3380": {
      "op": "ADD"
    },
    "3381": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "3384": {
      "op": "JUMP"
    },
    "3385": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3386": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 11,
      "value": "0xD43"
    },
    "3389": {
      "fn": "ERC721.approve",
      "offset": [
        3845,
        3847
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3390": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3856
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3391": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3844
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F4C"
    },
    "3394": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3395": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3396": {
      "fn": "ERC721.approve",
      "offset": [
        3533,
        3864
      ],
      "op": "POP",
      "path": "7"
    },
    "3397": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "7"
    },
    "3398": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "7"
    },
    "3399": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3400": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3401": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3867,
        3871
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3403": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3903
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 12,
      "value": "0x1A"
    },
    "3405": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3903
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3406": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3907,
        3908
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3408": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3908
      ],
      "op": "EQ",
      "path": "19"
    },
    "3409": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3908
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3410": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3944
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3411": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3944
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3412": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3944
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD5F"
    },
    "3415": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3944
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3416": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3944
      ],
      "op": "POP",
      "path": "19"
    },
    "3417": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3931,
        3944
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1A"
    },
    "3419": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3931,
        3944
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3420": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3912,
        3927
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "3421": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3912,
        3944
      ],
      "op": "LT",
      "path": "19"
    },
    "3422": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3912,
        3944
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3423": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3890,
        3944
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3424": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3883,
        3944
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3425": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3883,
        3944
      ],
      "op": "POP",
      "path": "19"
    },
    "3426": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3816,
        3951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3427": {
      "fn": "Celestial.mintingStartedSOUL",
      "jump": "o",
      "offset": [
        3816,
        3951
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3428": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3429": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3431": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3436": {
      "op": "SHL"
    },
    "3437": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3438": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "3439": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3441": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "3442": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3443": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8E"
    },
    "3446": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3447": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3449": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3456": {
      "op": "SHL"
    },
    "3457": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3458": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3459": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3461": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "3462": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC0E"
    },
    "3465": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3466": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35E7"
    },
    "3469": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3470": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3471": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10108
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 13
    },
    "3472": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10112,
        10113
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3474": {
      "branch": 165,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10113
      ],
      "op": "EQ",
      "path": "19"
    },
    "3475": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10125
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3476": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10125
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD9D"
    },
    "3479": {
      "branch": 165,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10125
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3480": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10125
      ],
      "op": "POP",
      "path": "19"
    },
    "3481": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10117,
        10120
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3482": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10124,
        10125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "3484": {
      "branch": 166,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10117,
        10125
      ],
      "op": "EQ",
      "path": "19"
    },
    "3485": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10125
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3486": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10138
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3487": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10138
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDA8"
    },
    "3490": {
      "branch": 166,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10138
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3491": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10138
      ],
      "op": "POP",
      "path": "19"
    },
    "3492": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10129,
        10132
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3493": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10136,
        10138
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "3495": {
      "branch": 167,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10129,
        10138
      ],
      "op": "EQ",
      "path": "19"
    },
    "3496": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10105,
        10138
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3497": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDC4"
    },
    "3500": {
      "branch": 167,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3501": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3503": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3510": {
      "op": "SHL"
    },
    "3511": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3512": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3513": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3515": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "ADD",
      "path": "19"
    },
    "3516": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "3519": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3520": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3611"
    },
    "3523": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10084,
        10193
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3524": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10084,
        10193
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3525": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10231,
        10239
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 14
    },
    "3526": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10231,
        10246
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3527": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10224,
        10227
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3528": {
      "branch": 168,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10224,
        10246
      ],
      "op": "EQ",
      "path": "19"
    },
    "3529": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10224,
        10278
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3530": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10224,
        10278
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3531": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10224,
        10278
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDD4"
    },
    "3534": {
      "branch": 168,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10224,
        10278
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3535": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10224,
        10278
      ],
      "op": "POP",
      "path": "19"
    },
    "3536": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10257,
        10271
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3537": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10257,
        10278
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3538": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10250,
        10253
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3539": {
      "branch": 169,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10250,
        10278
      ],
      "op": "EQ",
      "path": "19"
    },
    "3540": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10224,
        10278
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3541": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDF0"
    },
    "3544": {
      "branch": 169,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3545": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3547": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3554": {
      "op": "SHL"
    },
    "3555": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3556": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3557": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3559": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "ADD",
      "path": "19"
    },
    "3560": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "3563": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3564": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3648"
    },
    "3567": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10203,
        10356
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3568": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10203,
        10356
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3569": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10461,
        10486
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 15,
      "value": "0x14"
    },
    "3571": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10461,
        10486
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3572": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10440,
        10486
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDFF"
    },
    "3575": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10440,
        10486
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3576": {
      "offset": [
        1052,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "3579": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10440,
        10486
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36B2"
    },
    "3582": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10440,
        10486
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3583": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10440,
        10486
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3584": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10415,
        10418
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3585": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10412
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "3587": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10412
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3588": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE0D"
    },
    "3591": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10418
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3592": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10418
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3593": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "3596": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10388,
        10418
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3597": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10418
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3598": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10387,
        10487
      ],
      "op": "GT",
      "path": "19"
    },
    "3599": {
      "branch": 170,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10387,
        10487
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3600": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE2B"
    },
    "3603": {
      "branch": 170,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3604": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3606": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3607": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3613": {
      "op": "SHL"
    },
    "3614": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3615": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3616": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3618": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "ADD",
      "path": "19"
    },
    "3619": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "3622": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3623": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36E1"
    },
    "3626": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10366,
        10547
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3627": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10366,
        10547
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3628": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10597,
        10624
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3630": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10649,
        10652
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3631": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10627,
        10646
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3633": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10627,
        10646
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3634": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10627,
        10652
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE3B"
    },
    "3637": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10627,
        10652
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3638": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10627,
        10652
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3639": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10627,
        10652
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3723"
    },
    "3642": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10627,
        10652
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3643": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10627,
        10652
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3644": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10687
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 16,
      "value": "0xC"
    },
    "3646": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10687
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3647": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10597,
        10652
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3648": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10597,
        10652
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10597,
        10652
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3651": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10597,
        10652
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3658": {
      "op": "SHL"
    },
    "3659": {
      "op": "SUB"
    },
    "3660": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10687
      ],
      "op": "AND",
      "path": "19"
    },
    "3661": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10697
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "3666": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3667": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3669": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3676": {
      "op": "SHL"
    },
    "3677": {
      "op": "SUB"
    },
    "3678": {
      "op": "NOT"
    },
    "3679": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3681": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3682": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3683": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "SHL",
      "path": "19"
    },
    "3684": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "AND",
      "path": "19"
    },
    "3685": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3686": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3693": {
      "op": "SHL"
    },
    "3694": {
      "op": "SUB"
    },
    "3695": {
      "op": "SWAP1"
    },
    "3696": {
      "op": "SWAP2"
    },
    "3697": {
      "op": "AND"
    },
    "3698": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3700": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3701": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "ADD",
      "path": "19"
    },
    "3702": {
      "op": "MSTORE"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3708": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3710": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3711": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3712": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3713": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "SUB",
      "path": "19"
    },
    "3714": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3715": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3716": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "GAS",
      "path": "19"
    },
    "3717": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3718": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3719": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3720": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3721": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE96"
    },
    "3724": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3725": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3726": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3728": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3729": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3730": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3731": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3733": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3734": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3735": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "POP",
      "path": "19"
    },
    "3736": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "POP",
      "path": "19"
    },
    "3737": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "POP",
      "path": "19"
    },
    "3738": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "POP",
      "path": "19"
    },
    "3739": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3741": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3742": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3743": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3745": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "NOT",
      "path": "19"
    },
    "3746": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3748": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3749": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "ADD",
      "path": "19"
    },
    "3750": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "AND",
      "path": "19"
    },
    "3751": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3752": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "ADD",
      "path": "19"
    },
    "3753": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3754": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3756": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3757": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "POP",
      "path": "19"
    },
    "3758": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3759": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "ADD",
      "path": "19"
    },
    "3760": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3761": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEBA"
    },
    "3764": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3765": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3766": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3742"
    },
    "3769": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10683,
        10711
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3770": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10711
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3771": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10734
      ],
      "op": "LT",
      "path": "19"
    },
    "3772": {
      "branch": 171,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10683,
        10734
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3773": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEFA"
    },
    "3776": {
      "branch": 171,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3777": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3779": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3786": {
      "op": "SHL"
    },
    "3787": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3788": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3791": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3793": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3794": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "ADD",
      "path": "19"
    },
    "3795": {
      "op": "MSTORE"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3800": {
      "op": "DUP3"
    },
    "3801": {
      "op": "ADD"
    },
    "3802": {
      "op": "MSTORE"
    },
    "3803": {
      "op": "PUSH15",
      "value": "0x1B9BDD08195B9BDD59DA0814D3D553"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3824": {
      "op": "DUP3"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "op": "MSTORE"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "3833": {
      "op": "JUMP"
    },
    "3834": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10662,
        10775
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3835": {
      "offset": [
        926,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1388"
    },
    "3838": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10827
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3840": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10827
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3841": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10860
      ],
      "op": "GT",
      "path": "19"
    },
    "3842": {
      "branch": 172,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10860
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3843": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10938
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3844": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10938
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3845": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10938
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF1C"
    },
    "3848": {
      "branch": 172,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10938
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3849": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10938
      ],
      "op": "POP",
      "path": "19"
    },
    "3850": {
      "offset": [
        926,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1388"
    },
    "3853": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10903,
        10906
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3854": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10876,
        10900
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3856": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10876,
        10900
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3857": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10876,
        10906
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF1A"
    },
    "3860": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10876,
        10906
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3861": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10876,
        10906
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3862": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10876,
        10906
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "3865": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10876,
        10906
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3866": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10876,
        10906
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3867": {
      "branch": 173,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10876,
        10938
      ],
      "op": "GT",
      "path": "19"
    },
    "3868": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10803,
        10938
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3869": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10786,
        11019
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3870": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10786,
        11019
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF33"
    },
    "3873": {
      "branch": 173,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10786,
        11019
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3874": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10985,
        11004
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 17,
      "value": "0xB"
    },
    "3876": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10985,
        11004
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3877": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10985,
        11008
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF2F"
    },
    "3880": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10985,
        11008
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3881": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11007,
        11008
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3883": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10985,
        11008
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3723"
    },
    "3886": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10985,
        11008
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3887": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10985,
        11008
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3888": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10963,
        10982
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3890": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10963,
        11008
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3891": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10786,
        11019
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3892": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11057,
        11060
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 18
    },
    "3893": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11053
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3895": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11053
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3897": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3898": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3899": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3900": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF45"
    },
    "3903": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3904": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3905": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "3908": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        11029,
        11060
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3909": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3910": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3911": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3912": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11029,
        11060
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3913": {
      "op": "POP"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11096
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 19,
      "value": "0xC"
    },
    "3917": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11096
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3924": {
      "op": "SHL"
    },
    "3925": {
      "op": "SUB"
    },
    "3926": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11096
      ],
      "op": "AND",
      "path": "19"
    },
    "3927": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11105
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x79CC6790"
    },
    "3932": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3933": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3935": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3942": {
      "op": "SHL"
    },
    "3943": {
      "op": "SUB"
    },
    "3944": {
      "op": "NOT"
    },
    "3945": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3947": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3948": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3949": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "SHL",
      "path": "19"
    },
    "3950": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "AND",
      "path": "19"
    },
    "3951": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3952": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3959": {
      "op": "SHL"
    },
    "3960": {
      "op": "SUB"
    },
    "3961": {
      "op": "SWAP1"
    },
    "3962": {
      "op": "SWAP2"
    },
    "3963": {
      "op": "AND"
    },
    "3964": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3966": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3967": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "ADD",
      "path": "19"
    },
    "3968": {
      "op": "MSTORE"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3971": {
      "op": "DUP2"
    },
    "3972": {
      "op": "ADD"
    },
    "3973": {
      "op": "DUP5"
    },
    "3974": {
      "op": "SWAP1"
    },
    "3975": {
      "op": "MSTORE"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3981": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3983": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3984": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3985": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3986": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "SUB",
      "path": "19"
    },
    "3987": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3988": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3990": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3991": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3992": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3993": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3994": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3995": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3996": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFA4"
    },
    "3999": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4000": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4002": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4003": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4004": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4005": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "POP",
      "path": "19"
    },
    "4006": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "GAS",
      "path": "19"
    },
    "4007": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "CALL",
      "path": "19"
    },
    "4008": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4009": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4010": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4011": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFB8"
    },
    "4014": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4015": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4016": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4018": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4019": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4020": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4021": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4023": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4024": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4025": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "POP",
      "path": "19"
    },
    "4026": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "POP",
      "path": "19"
    },
    "4027": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "POP",
      "path": "19"
    },
    "4028": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11092,
        11140
      ],
      "op": "POP",
      "path": "19"
    },
    "4029": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11177,
        11239
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 20,
      "value": "0xFCE"
    },
    "4032": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11195,
        11198
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4033": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11200,
        11208
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4034": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11210,
        11224
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4035": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11226,
        11238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFC9"
    },
    "4038": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4039": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4040": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4041": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11226,
        11238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4042": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11177,
        11194
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FBA"
    },
    "4045": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        11177,
        11239
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4046": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11177,
        11239
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4047": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10008,
        11246
      ],
      "op": "POP",
      "path": "19"
    },
    "4048": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "POP",
      "path": "19"
    },
    "4049": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "POP",
      "path": "19"
    },
    "4050": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9851,
        11246
      ],
      "op": "POP",
      "path": "19"
    },
    "4051": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "o",
      "offset": [
        9851,
        11246
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4052": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2868,
        3093
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4053": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4055": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4062": {
      "op": "SHL"
    },
    "4063": {
      "op": "SUB"
    },
    "4064": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4065": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4066": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4067": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFE"
    },
    "4070": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4071": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4073": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4080": {
      "op": "SHL"
    },
    "4081": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4082": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4083": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4085": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4086": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "4089": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4090": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "4093": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4094": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4095": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2978,
        2993
      ],
      "op": "TIMESTAMP",
      "path": "19",
      "statement": 21
    },
    "4096": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2964,
        2974
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4097": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2964,
        2993
      ],
      "op": "LT",
      "path": "19"
    },
    "4098": {
      "branch": 174,
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2964,
        2993
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4099": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x104E"
    },
    "4102": {
      "branch": 174,
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4103": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4105": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4106": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4112": {
      "op": "SHL"
    },
    "4113": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4114": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4117": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4119": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4120": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "ADD",
      "path": "19"
    },
    "4121": {
      "op": "MSTORE"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4126": {
      "op": "DUP3"
    },
    "4127": {
      "op": "ADD"
    },
    "4128": {
      "op": "MSTORE"
    },
    "4129": {
      "op": "PUSH32",
      "value": "0x737461727454696D652063616E6E6F7420626520696E20746865207061737400"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4164": {
      "op": "DUP3"
    },
    "4165": {
      "op": "ADD"
    },
    "4166": {
      "op": "MSTORE"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "4173": {
      "op": "JUMP"
    },
    "4174": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2943,
        3050
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4175": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        3060,
        3073
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 22,
      "value": "0x1A"
    },
    "4177": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        3060,
        3086
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4178": {
      "fn": "Celestial.setStartTimeSOUL",
      "jump": "o",
      "offset": [
        2868,
        3093
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4179": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4180": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 23,
      "value": "0x105D"
    },
    "4183": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4184": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5011,
        5018
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4185": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        4996
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2035"
    },
    "4188": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4189": {
      "branch": 216,
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4190": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1079"
    },
    "4193": {
      "branch": 216,
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4194": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4196": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4203": {
      "op": "SHL"
    },
    "4204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4205": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4206": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "ADD",
      "path": "7"
    },
    "4209": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "4212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3790"
    },
    "4216": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5112
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 24,
      "value": "0xD43"
    },
    "4221": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5094,
        5098
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5100,
        5102
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5104,
        5111
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4224": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x211F"
    },
    "4227": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5084,
        5112
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4228": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4229": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1308,
        1315
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4231": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1343,
        1366
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 25,
      "value": "0x108F"
    },
    "4234": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1360,
        1365
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4235": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1343,
        1359
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x146E"
    },
    "4238": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1343,
        1366
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4239": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1343,
        1366
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4240": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1335,
        1340
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4241": {
      "branch": 228,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1335,
        1366
      ],
      "op": "LT",
      "path": "10"
    },
    "4242": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10F1"
    },
    "4245": {
      "branch": 228,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4246": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4248": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4255": {
      "op": "SHL"
    },
    "4256": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4257": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4260": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4262": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4263": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "ADD",
      "path": "10"
    },
    "4264": {
      "op": "MSTORE"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4269": {
      "op": "DUP3"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4307": {
      "op": "DUP3"
    },
    "4308": {
      "op": "ADD"
    },
    "4309": {
      "op": "MSTORE"
    },
    "4310": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4324": {
      "op": "SHL"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4327": {
      "op": "DUP3"
    },
    "4328": {
      "op": "ADD"
    },
    "4329": {
      "op": "MSTORE"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4332": {
      "op": "ADD"
    },
    "4333": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC0E"
    },
    "4336": {
      "op": "JUMP"
    },
    "4337": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4345": {
      "op": "SHL"
    },
    "4346": {
      "op": "SUB"
    },
    "4347": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 26
    },
    "4348": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4349": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4350": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "AND",
      "path": "10"
    },
    "4351": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4353": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4354": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4355": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4356": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1443
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4358": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4360": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4361": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4362": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4363": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4365": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4366": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4367": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4368": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4369": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4370": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4371": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4372": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4373": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4374": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4375": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4376": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4377": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4378": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2637,
        2862
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4379": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4381": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4388": {
      "op": "SHL"
    },
    "4389": {
      "op": "SUB"
    },
    "4390": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4391": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4392": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4393": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1144"
    },
    "4396": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4397": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4399": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4406": {
      "op": "SHL"
    },
    "4407": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4408": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4409": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4411": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4412": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "4415": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4416": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "4419": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4420": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4421": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2747,
        2762
      ],
      "op": "TIMESTAMP",
      "path": "19",
      "statement": 27
    },
    "4422": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2733,
        2743
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4423": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2733,
        2762
      ],
      "op": "LT",
      "path": "19"
    },
    "4424": {
      "branch": 175,
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2733,
        2762
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4425": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1194"
    },
    "4428": {
      "branch": 175,
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4429": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4431": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4438": {
      "op": "SHL"
    },
    "4439": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4440": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4443": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4445": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4446": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "ADD",
      "path": "19"
    },
    "4447": {
      "op": "MSTORE"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4452": {
      "op": "DUP3"
    },
    "4453": {
      "op": "ADD"
    },
    "4454": {
      "op": "MSTORE"
    },
    "4455": {
      "op": "PUSH32",
      "value": "0x737461727454696D652063616E6E6F7420626520696E20746865207061737400"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4490": {
      "op": "DUP3"
    },
    "4491": {
      "op": "ADD"
    },
    "4492": {
      "op": "MSTORE"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4495": {
      "op": "ADD"
    },
    "4496": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "4499": {
      "op": "JUMP"
    },
    "4500": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2712,
        2819
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4501": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2829,
        2842
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 28,
      "value": "0x19"
    },
    "4503": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2829,
        2855
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4504": {
      "fn": "Celestial.setStartTimeAVAX",
      "jump": "o",
      "offset": [
        2637,
        2862
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4505": {
      "fn": "Celestial.getType",
      "offset": [
        3338,
        3507
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4506": {
      "fn": "Celestial.getType",
      "offset": [
        3394,
        3401
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4508": {
      "fn": "Celestial.getType",
      "offset": [
        3421,
        3438
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 29,
      "value": "0x11A4"
    },
    "4511": {
      "fn": "Celestial.getType",
      "offset": [
        3429,
        3437
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4512": {
      "fn": "Celestial.getType",
      "offset": [
        3421,
        3428
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F2F"
    },
    "4515": {
      "fn": "Celestial.getType",
      "jump": "i",
      "offset": [
        3421,
        3438
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4516": {
      "branch": 176,
      "fn": "Celestial.getType",
      "offset": [
        3421,
        3438
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4517": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11E7"
    },
    "4520": {
      "branch": 176,
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4521": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4523": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4530": {
      "op": "SHL"
    },
    "4531": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4532": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4535": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4537": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4538": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "ADD",
      "path": "19"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4544": {
      "op": "DUP3"
    },
    "4545": {
      "op": "ADD"
    },
    "4546": {
      "op": "MSTORE"
    },
    "4547": {
      "op": "PUSH20",
      "value": "0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "4570": {
      "op": "SHL"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4573": {
      "op": "DUP3"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "MSTORE"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4578": {
      "op": "ADD"
    },
    "4579": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "4582": {
      "op": "JUMP"
    },
    "4583": {
      "fn": "Celestial.getType",
      "offset": [
        3413,
        3463
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4584": {
      "op": "POP"
    },
    "4585": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 30,
      "value": "0x0"
    },
    "4587": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4588": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4589": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4590": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3490
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1B"
    },
    "4592": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4594": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4595": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4597": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4598": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4599": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4600": {
      "fn": "Celestial.getType",
      "offset": [
        3480,
        3500
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4601": {
      "fn": "Celestial.getType",
      "jump": "o",
      "offset": [
        3338,
        3507
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4602": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4603": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 31,
      "value": "0xD43"
    },
    "4606": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5335,
        5339
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4607": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5341,
        5343
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4608": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5345,
        5352
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4609": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4612": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4613": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "ADD",
      "path": "7"
    },
    "4616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4618": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4619": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4620": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "POP",
      "path": "7"
    },
    "4625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5334
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B70"
    },
    "4628": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5318,
        5357
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4629": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4045,
        4218
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4630": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4632": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4639": {
      "op": "SHL"
    },
    "4640": {
      "op": "SUB"
    },
    "4641": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4642": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4643": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4644": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123F"
    },
    "4647": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4648": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4650": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4657": {
      "op": "SHL"
    },
    "4658": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4659": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4660": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4662": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4663": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "4666": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4667": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "4670": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4671": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4672": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4175,
        4211
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 32,
      "value": "0xD43"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4681": {
      "op": "SHL"
    },
    "4682": {
      "op": "SUB"
    },
    "4683": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4175,
        4194
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4684": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4175,
        4194
      ],
      "op": "AND",
      "path": "19"
    },
    "4685": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4195,
        4201
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4686": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4203,
        4210
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4687": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4175,
        4194
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22CA"
    },
    "4690": {
      "fn": "Celestial.forwardERC20s",
      "jump": "i",
      "offset": [
        4175,
        4211
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4691": {
      "fn": "Celestial.exist",
      "offset": [
        4747,
        4847
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4692": {
      "fn": "Celestial.exist",
      "offset": [
        4801,
        4805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4694": {
      "fn": "Celestial.exist",
      "offset": [
        4824,
        4840
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 33,
      "value": "0xB0E"
    },
    "4697": {
      "fn": "Celestial.exist",
      "offset": [
        4832,
        4839
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4698": {
      "fn": "Celestial.exist",
      "offset": [
        4824,
        4831
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F2F"
    },
    "4701": {
      "fn": "Celestial.exist",
      "jump": "i",
      "offset": [
        4824,
        4840
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4702": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4703": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1793,
        1800
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4705": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1828,
        1858
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 34,
      "value": "0x1269"
    },
    "4708": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "4710": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1639
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4711": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4712": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4713": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1828,
        1858
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4714": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1820,
        1825
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4715": {
      "branch": 229,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1820,
        1858
      ],
      "op": "LT",
      "path": "10"
    },
    "4716": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12CC"
    },
    "4719": {
      "branch": 229,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4720": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4722": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4723": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4731": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4734": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4736": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4737": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "ADD",
      "path": "10"
    },
    "4738": {
      "op": "MSTORE"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4743": {
      "op": "DUP3"
    },
    "4744": {
      "op": "ADD"
    },
    "4745": {
      "op": "MSTORE"
    },
    "4746": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4781": {
      "op": "DUP3"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "MSTORE"
    },
    "4784": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4799": {
      "op": "SHL"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4802": {
      "op": "DUP3"
    },
    "4803": {
      "op": "ADD"
    },
    "4804": {
      "op": "MSTORE"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4807": {
      "op": "ADD"
    },
    "4808": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC0E"
    },
    "4811": {
      "op": "JUMP"
    },
    "4812": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4813": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1934
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 35,
      "value": "0x8"
    },
    "4815": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1935,
        1940
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4816": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4817": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4818": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4819": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "LT",
      "path": "10"
    },
    "4820": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12DF"
    },
    "4823": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4824": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12DF"
    },
    "4827": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37E1"
    },
    "4830": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4831": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4832": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4833": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4835": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4836": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4838": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4840": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4841": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "10"
    },
    "4842": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4843": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1917,
        1941
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4844": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1917,
        1941
      ],
      "op": "POP",
      "path": "10"
    },
    "4845": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4846": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4847": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "POP",
      "path": "10"
    },
    "4848": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4849": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3229,
        3332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4850": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4852": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4859": {
      "op": "SHL"
    },
    "4860": {
      "op": "SUB"
    },
    "4861": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4862": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4863": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4864": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131B"
    },
    "4867": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4868": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4870": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4877": {
      "op": "SHL"
    },
    "4878": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4879": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4880": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4882": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4883": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "4886": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4887": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "4890": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4891": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4892": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3305,
        3325
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 36,
      "value": "0xD43"
    },
    "4895": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3305,
        3313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "4897": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3316,
        3325
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4898": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3316,
        3325
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4899": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3305,
        3325
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F4F"
    },
    "4902": {
      "fn": "Celestial.setBaseURI",
      "jump": "i",
      "offset": [
        3305,
        3325
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4903": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4904": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2189,
        2196
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4906": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4907": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4908": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4909": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2231
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4911": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4913": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4914": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4916": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4917": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4918": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4925": {
      "op": "SHL"
    },
    "4926": {
      "op": "SUB"
    },
    "4927": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "AND",
      "path": "7"
    },
    "4928": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4929": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 37,
      "value": "0xB0E"
    },
    "4932": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4933": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4935": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4942": {
      "op": "SHL"
    },
    "4943": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4944": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4947": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4949": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4950": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "ADD",
      "path": "7"
    },
    "4951": {
      "op": "MSTORE"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4956": {
      "op": "DUP3"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "MSTORE"
    },
    "4959": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4994": {
      "op": "DUP3"
    },
    "4995": {
      "op": "ADD"
    },
    "4996": {
      "op": "MSTORE"
    },
    "4997": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5009": {
      "op": "SHL"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5012": {
      "op": "DUP3"
    },
    "5013": {
      "op": "ADD"
    },
    "5014": {
      "op": "MSTORE"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5017": {
      "op": "ADD"
    },
    "5018": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "5021": {
      "op": "JUMP"
    },
    "5022": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5023": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11318,
        11334
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "5025": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11374,
        11375
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 38,
      "value": "0x0"
    },
    "5027": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11354,
        11371
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13AB"
    },
    "5030": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11364,
        11370
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5031": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11354,
        11363
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146E"
    },
    "5034": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11354,
        11371
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5035": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11354,
        11371
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5036": {
      "branch": 177,
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11354,
        11375
      ],
      "op": "GT",
      "path": "19"
    },
    "5037": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13C8"
    },
    "5040": {
      "branch": 177,
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5041": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5043": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5050": {
      "op": "SHL"
    },
    "5051": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5052": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5053": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5055": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "ADD",
      "path": "19"
    },
    "5056": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "5059": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5060": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37F7"
    },
    "5063": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11346,
        11411
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5064": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11346,
        11411
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5065": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11421,
        11436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5067": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11439,
        11456
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13D3"
    },
    "5070": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11449,
        11455
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5071": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11439,
        11448
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146E"
    },
    "5074": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11439,
        11456
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5075": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11439,
        11456
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5076": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11421,
        11456
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5077": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11421,
        11456
      ],
      "op": "POP",
      "path": "19"
    },
    "5078": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11466,
        11491
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5080": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11508,
        11515
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5081": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5090": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5091": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "GT",
      "path": "19"
    },
    "5092": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5093": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13F0"
    },
    "5096": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5097": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13F0"
    },
    "5100": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x30E0"
    },
    "5103": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11494,
        11516
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5104": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5105": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5107": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5108": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5109": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5110": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5111": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5112": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5113": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5115": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "MUL",
      "path": "19"
    },
    "5116": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5118": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "ADD",
      "path": "19"
    },
    "5119": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5120": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "ADD",
      "path": "19"
    },
    "5121": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5123": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5124": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5125": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5126": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1419"
    },
    "5129": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5130": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5131": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5133": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "ADD",
      "path": "19"
    },
    "5134": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5136": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5137": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "MUL",
      "path": "19"
    },
    "5138": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5139": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "5140": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5141": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "CALLDATACOPY",
      "path": "19"
    },
    "5142": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "ADD",
      "path": "19"
    },
    "5143": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5144": {
      "op": "POP"
    },
    "5145": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5146": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11494,
        11516
      ],
      "op": "POP",
      "path": "19"
    },
    "5147": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11466,
        11516
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5148": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11466,
        11516
      ],
      "op": "POP",
      "path": "19"
    },
    "5149": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11531,
        11540
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5151": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11526,
        11671
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5152": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11550,
        11557
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5153": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11546,
        11547
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5154": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11546,
        11557
      ],
      "op": "LT",
      "path": "19"
    },
    "5155": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11526,
        11671
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5156": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11526,
        11671
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1466"
    },
    "5159": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11526,
        11671
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5160": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11578,
        11593
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5162": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11596,
        11625
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1433"
    },
    "5165": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11616,
        11622
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5166": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11623,
        11624
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5167": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11596,
        11615
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1084"
    },
    "5170": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11596,
        11625
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5171": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11596,
        11625
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5172": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11578,
        11625
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5173": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11578,
        11625
      ],
      "op": "POP",
      "path": "19"
    },
    "5174": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11653,
        11660
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 39
    },
    "5175": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11647
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5176": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11648,
        11649
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5177": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5178": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5179": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5180": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "LT",
      "path": "19"
    },
    "5181": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1448"
    },
    "5184": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5185": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1448"
    },
    "5188": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37E1"
    },
    "5191": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11639,
        11650
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5192": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5193": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5195": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5196": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5197": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "MUL",
      "path": "19"
    },
    "5198": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5199": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5200": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5201": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "ADD",
      "path": "19"
    },
    "5202": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11650
      ],
      "op": "ADD",
      "path": "19"
    },
    "5203": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11639,
        11660
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5204": {
      "op": "POP"
    },
    "5205": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11559,
        11562
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 40
    },
    "5206": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11559,
        11562
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x145E"
    },
    "5209": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11559,
        11562
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5210": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11559,
        11562
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x382E"
    },
    "5213": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "i",
      "offset": [
        11559,
        11562
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5214": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11559,
        11562
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5215": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11559,
        11562
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5216": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11559,
        11562
      ],
      "op": "POP",
      "path": "19"
    },
    "5217": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11559,
        11562
      ],
      "op": "POP",
      "path": "19"
    },
    "5218": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11526,
        11671
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x141F"
    },
    "5221": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11526,
        11671
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5222": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11526,
        11671
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5223": {
      "op": "POP"
    },
    "5224": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11687,
        11695
      ],
      "op": "SWAP4",
      "path": "19",
      "statement": 41
    },
    "5225": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "offset": [
        11252,
        11702
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5226": {
      "op": "POP"
    },
    "5227": {
      "op": "POP"
    },
    "5228": {
      "op": "POP"
    },
    "5229": {
      "fn": "Celestial.GetTokenIdsOfOwner",
      "jump": "o",
      "offset": [
        11252,
        11702
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5230": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5231": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1927,
        1934
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5239": {
      "op": "SHL"
    },
    "5240": {
      "op": "SUB"
    },
    "5241": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 42
    },
    "5242": {
      "branch": 217,
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "AND",
      "path": "7"
    },
    "5243": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14D9"
    },
    "5246": {
      "branch": 217,
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5247": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5249": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5256": {
      "op": "SHL"
    },
    "5257": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5258": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5261": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5263": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5264": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "ADD",
      "path": "7"
    },
    "5265": {
      "op": "MSTORE"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5270": {
      "op": "DUP3"
    },
    "5271": {
      "op": "ADD"
    },
    "5272": {
      "op": "MSTORE"
    },
    "5273": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5308": {
      "op": "DUP3"
    },
    "5309": {
      "op": "ADD"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5324": {
      "op": "SHL"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5327": {
      "op": "DUP3"
    },
    "5328": {
      "op": "ADD"
    },
    "5329": {
      "op": "MSTORE"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5332": {
      "op": "ADD"
    },
    "5333": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "5336": {
      "op": "JUMP"
    },
    "5337": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5338": {
      "op": "POP"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5345": {
      "op": "SHL"
    },
    "5346": {
      "op": "SUB"
    },
    "5347": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "AND",
      "path": "7",
      "statement": 43
    },
    "5348": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5350": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5351": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5352": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5353": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2046
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "5355": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5357": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5358": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5360": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5361": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5362": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5363": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5364": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5365": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5366": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5368": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5375": {
      "op": "SHL"
    },
    "5376": {
      "op": "SUB"
    },
    "5377": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "5378": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5379": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "5380": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151F"
    },
    "5383": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5384": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5386": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5393": {
      "op": "SHL"
    },
    "5394": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5395": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5396": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5398": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "5399": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "5402": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5403": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "5406": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5407": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5408": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x1529"
    },
    "5411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5413": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x231C"
    },
    "5416": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5417": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5418": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5419": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5420": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "5422": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5427": {
      "op": "SHL"
    },
    "5428": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5429": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "5430": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5432": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "5433": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5434": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1555"
    },
    "5437": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5438": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5440": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5447": {
      "op": "SHL"
    },
    "5448": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5449": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5450": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5452": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "5453": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC0E"
    },
    "5456": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5457": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35E7"
    },
    "5460": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5461": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5462": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7264,
        7274
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 45,
      "value": "0x10"
    },
    "5464": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7264,
        7274
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5465": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7278,
        7279
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5467": {
      "branch": 178,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7264,
        7279
      ],
      "op": "SUB",
      "path": "19"
    },
    "5468": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1596"
    },
    "5471": {
      "branch": 178,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5472": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5474": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5475": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5481": {
      "op": "SHL"
    },
    "5482": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5483": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5486": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5488": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5489": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "ADD",
      "path": "19"
    },
    "5490": {
      "op": "MSTORE"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5495": {
      "op": "DUP3"
    },
    "5496": {
      "op": "ADD"
    },
    "5497": {
      "op": "MSTORE"
    },
    "5498": {
      "op": "PUSH12",
      "value": "0x1B5A5CDCDA5B99C81C9BDBDD"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "5513": {
      "op": "SHL"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5516": {
      "op": "DUP3"
    },
    "5517": {
      "op": "ADD"
    },
    "5518": {
      "op": "MSTORE"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5521": {
      "op": "ADD"
    },
    "5522": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "5525": {
      "op": "JUMP"
    },
    "5526": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7256,
        7296
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5527": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5529": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5530": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5543": {
      "op": "NOT"
    },
    "5544": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5547": {
      "op": "SHL"
    },
    "5548": {
      "op": "AND"
    },
    "5549": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5551": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5552": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "ADD",
      "path": "19"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7500,
        7512
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5556": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7500,
        7512
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "5559": {
      "op": "ADD"
    },
    "5560": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5562": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5563": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5565": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5566": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5567": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "SUB",
      "path": "19"
    },
    "5568": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "SUB",
      "path": "19"
    },
    "5569": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5570": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5571": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5572": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5574": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7525,
        7555
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5575": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7515,
        7556
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5576": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7515,
        7556
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5577": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7515,
        7556
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5578": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7515,
        7556
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5580": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7515,
        7556
      ],
      "op": "ADD",
      "path": "19"
    },
    "5581": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7515,
        7556
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5582": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7500,
        7556
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5583": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7500,
        7556
      ],
      "op": "POP",
      "path": "19"
    },
    "5584": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 46,
      "value": "0x1610"
    },
    "5587": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7606,
        7618
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5588": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7606,
        7618
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5589": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5590": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5591": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5593": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "MUL",
      "path": "19"
    },
    "5594": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5596": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "ADD",
      "path": "19"
    },
    "5597": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5599": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5600": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5601": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5602": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "ADD",
      "path": "19"
    },
    "5603": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5605": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5606": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5607": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5608": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5609": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5610": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5611": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5612": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5613": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5614": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5616": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "ADD",
      "path": "19"
    },
    "5617": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5618": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5619": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5621": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "MUL",
      "path": "19"
    },
    "5622": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5623": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5624": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5625": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "CALLDATACOPY",
      "path": "19"
    },
    "5626": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5628": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5629": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "ADD",
      "path": "19"
    },
    "5630": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5631": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5632": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5633": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5634": {
      "op": "POP"
    },
    "5635": {
      "op": "POP"
    },
    "5636": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7620,
        7630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "5638": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7620,
        7630
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5639": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7620,
        7630
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7632,
        7636
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5642": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7632,
        7636
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5643": {
      "op": "POP"
    },
    "5644": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7605
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x236E"
    },
    "5647": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        7587,
        7637
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5648": {
      "branch": 179,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7587,
        7637
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5649": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x166A"
    },
    "5652": {
      "branch": 179,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5653": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5655": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5662": {
      "op": "SHL"
    },
    "5663": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5664": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5667": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5669": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5670": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "ADD",
      "path": "19"
    },
    "5671": {
      "op": "MSTORE"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5676": {
      "op": "DUP3"
    },
    "5677": {
      "op": "ADD"
    },
    "5678": {
      "op": "MSTORE"
    },
    "5679": {
      "op": "PUSH32",
      "value": "0x74686973206164647265737320646F6573206E6F742068617665207065726D69"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5714": {
      "op": "DUP3"
    },
    "5715": {
      "op": "ADD"
    },
    "5716": {
      "op": "MSTORE"
    },
    "5717": {
      "op": "PUSH5",
      "value": "0x39B9B4B7B7"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "5725": {
      "op": "SHL"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5728": {
      "op": "DUP3"
    },
    "5729": {
      "op": "ADD"
    },
    "5730": {
      "op": "MSTORE"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5733": {
      "op": "ADD"
    },
    "5734": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "5737": {
      "op": "JUMP"
    },
    "5738": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7566,
        7700
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5739": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7779
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 47
    },
    "5740": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7783,
        7784
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5742": {
      "branch": 180,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7784
      ],
      "op": "EQ",
      "path": "19"
    },
    "5743": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7796
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5744": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7796
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1679"
    },
    "5747": {
      "branch": 180,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7796
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5748": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7796
      ],
      "op": "POP",
      "path": "19"
    },
    "5749": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7788,
        7791
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5750": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7795,
        7796
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "5752": {
      "branch": 181,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7788,
        7796
      ],
      "op": "EQ",
      "path": "19"
    },
    "5753": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7796
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5754": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7809
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5755": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7809
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1684"
    },
    "5758": {
      "branch": 181,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7809
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5759": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7809
      ],
      "op": "POP",
      "path": "19"
    },
    "5760": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7800,
        7803
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5761": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7807,
        7809
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5763": {
      "branch": 182,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7800,
        7809
      ],
      "op": "EQ",
      "path": "19"
    },
    "5764": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7776,
        7809
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5765": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A0"
    },
    "5768": {
      "branch": 182,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5769": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5771": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5778": {
      "op": "SHL"
    },
    "5779": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5780": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5781": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5783": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "ADD",
      "path": "19"
    },
    "5784": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "5787": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5788": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3611"
    },
    "5791": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        7755,
        7864
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5792": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7755,
        7864
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5793": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7902,
        7910
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 48
    },
    "5794": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7902,
        7917
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5795": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7895,
        7898
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5796": {
      "branch": 183,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7895,
        7917
      ],
      "op": "EQ",
      "path": "19"
    },
    "5797": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7895,
        7949
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5798": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7895,
        7949
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5799": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7895,
        7949
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16B0"
    },
    "5802": {
      "branch": 183,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7895,
        7949
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5803": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7895,
        7949
      ],
      "op": "POP",
      "path": "19"
    },
    "5804": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7928,
        7942
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5805": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7928,
        7949
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5806": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7921,
        7924
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5807": {
      "branch": 184,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7921,
        7949
      ],
      "op": "EQ",
      "path": "19"
    },
    "5808": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7895,
        7949
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5809": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16CC"
    },
    "5812": {
      "branch": 184,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5813": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5815": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5816": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5822": {
      "op": "SHL"
    },
    "5823": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5824": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5825": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5827": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "ADD",
      "path": "19"
    },
    "5828": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "5831": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5832": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3648"
    },
    "5835": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        7874,
        8027
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5836": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7874,
        8027
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5837": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8464,
        8495
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 49,
      "value": "0x16DE"
    },
    "5840": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8492,
        8495
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5841": {
      "offset": [
        777,
        786
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0x120A871CC0020000"
    },
    "5850": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8464,
        8495
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3723"
    },
    "5853": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        8464,
        8495
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5854": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8464,
        8495
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5855": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8451,
        8460
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "5856": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8451,
        8495
      ],
      "op": "LT",
      "path": "19"
    },
    "5857": {
      "branch": 185,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8451,
        8495
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5858": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16FD"
    },
    "5861": {
      "branch": 185,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5862": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5864": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5871": {
      "op": "SHL"
    },
    "5872": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5873": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5874": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5876": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "ADD",
      "path": "19"
    },
    "5877": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "5880": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5881": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3847"
    },
    "5884": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        8430,
        8536
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5885": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8430,
        8536
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5886": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8576,
        8579
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 50
    },
    "5887": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8572
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "5889": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8572
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5891": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5892": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5893": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5894": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x170F"
    },
    "5897": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5898": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5899": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "5902": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        8547,
        8579
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5903": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5904": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5905": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5906": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8547,
        8579
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5907": {
      "op": "POP"
    },
    "5908": {
      "op": "POP"
    },
    "5909": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5910": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 51,
      "value": "0x0"
    },
    "5912": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5913": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5914": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5915": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8605
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "5917": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5919": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5920": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5922": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5923": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5924": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5925": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5926": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8623,
        8626
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5927": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8623,
        8626
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5928": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8619
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5929": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1733"
    },
    "5932": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5933": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8623,
        8626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5934": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8623,
        8626
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5935": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "5938": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        8589,
        8626
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5939": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5940": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5941": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5942": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8589,
        8626
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5943": {
      "op": "POP"
    },
    "5944": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8664,
        8726
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 52,
      "value": "0x1745"
    },
    "5947": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8664,
        8726
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5948": {
      "op": "POP"
    },
    "5949": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8682,
        8685
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5950": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8687,
        8695
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5951": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8697,
        8711
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5952": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5953": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11177,
        11194
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FBA"
    },
    "5956": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        11177,
        11239
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5957": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8664,
        8726
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5958": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7205,
        8733
      ],
      "op": "POP",
      "path": "19"
    },
    "5959": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "POP",
      "path": "19"
    },
    "5960": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "POP",
      "path": "19"
    },
    "5961": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "POP",
      "path": "19"
    },
    "5962": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "POP",
      "path": "19"
    },
    "5963": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6998,
        8733
      ],
      "op": "POP",
      "path": "19"
    },
    "5964": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "o",
      "offset": [
        6998,
        8733
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5965": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4637,
        4741
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5966": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5968": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5975": {
      "op": "SHL"
    },
    "5976": {
      "op": "SUB"
    },
    "5977": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "5978": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5979": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "5980": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1777"
    },
    "5983": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5984": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5986": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5993": {
      "op": "SHL"
    },
    "5994": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5995": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5996": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5998": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "5999": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "6002": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6003": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "6006": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6007": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6008": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4710,
        4720
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 53,
      "value": "0x10"
    },
    "6010": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4710,
        4734
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6011": {
      "fn": "Celestial.setMerkleRoot",
      "jump": "o",
      "offset": [
        4637,
        4741
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6012": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6013": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2645
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "6015": {
      "fn": "ERC721.symbol",
      "offset": [
        2664,
        2671
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 54,
      "value": "0x1"
    },
    "6017": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6018": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6019": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB23"
    },
    "6022": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6023": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35AD"
    },
    "6026": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2657,
        2671
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6027": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11708,
        12298
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6028": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11798,
        11820
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6030": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11864,
        11865
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 55,
      "value": "0x0"
    },
    "6032": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11844,
        11861
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1798"
    },
    "6035": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11854,
        11860
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6036": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11844,
        11853
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146E"
    },
    "6039": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11844,
        11861
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6040": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11844,
        11861
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6041": {
      "branch": 186,
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11844,
        11865
      ],
      "op": "GT",
      "path": "19"
    },
    "6042": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17B5"
    },
    "6045": {
      "branch": 186,
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6046": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6048": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6055": {
      "op": "SHL"
    },
    "6056": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6057": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6058": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6060": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "ADD",
      "path": "19"
    },
    "6061": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "6064": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6065": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37F7"
    },
    "6068": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11836,
        11901
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6069": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11836,
        11901
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6070": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11911,
        11926
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6072": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11929,
        11946
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C0"
    },
    "6075": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11939,
        11945
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6076": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11929,
        11938
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146E"
    },
    "6079": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11929,
        11946
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6080": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11929,
        11946
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6081": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11911,
        11946
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6082": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11911,
        11946
      ],
      "op": "POP",
      "path": "19"
    },
    "6083": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11956,
        11982
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6085": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12005,
        12012
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6086": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6095": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6096": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "GT",
      "path": "19"
    },
    "6097": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6098": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17DD"
    },
    "6101": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6102": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17DD"
    },
    "6105": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x30E0"
    },
    "6108": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11985,
        12013
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6109": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6110": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6112": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6113": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6114": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6115": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6116": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6117": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6118": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6120": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "MUL",
      "path": "19"
    },
    "6121": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6123": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "ADD",
      "path": "19"
    },
    "6124": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6125": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "ADD",
      "path": "19"
    },
    "6126": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6128": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6129": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6130": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6131": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1822"
    },
    "6134": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6135": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6136": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6138": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "ADD",
      "path": "19"
    },
    "6139": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6142": {
      "op": "DUP1"
    },
    "6143": {
      "op": "MLOAD"
    },
    "6144": {
      "op": "DUP1"
    },
    "6145": {
      "op": "DUP3"
    },
    "6146": {
      "op": "ADD"
    },
    "6147": {
      "op": "SWAP1"
    },
    "6148": {
      "op": "SWAP2"
    },
    "6149": {
      "op": "MSTORE"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6152": {
      "op": "DUP1"
    },
    "6153": {
      "op": "DUP3"
    },
    "6154": {
      "op": "MSTORE"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6157": {
      "op": "DUP3"
    },
    "6158": {
      "op": "ADD"
    },
    "6159": {
      "op": "MSTORE"
    },
    "6160": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6161": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6162": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6164": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "ADD",
      "path": "19"
    },
    "6165": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6166": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6168": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6169": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "SUB",
      "path": "19"
    },
    "6170": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6171": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6172": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17FB"
    },
    "6175": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6176": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6177": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "POP",
      "path": "19"
    },
    "6178": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6179": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11985,
        12013
      ],
      "op": "POP",
      "path": "19"
    },
    "6180": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11956,
        12013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6181": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11956,
        12013
      ],
      "op": "POP",
      "path": "19"
    },
    "6182": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12028,
        12037
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6184": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12023,
        12272
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6185": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12047,
        12054
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6186": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12043,
        12044
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6187": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12043,
        12054
      ],
      "op": "LT",
      "path": "19"
    },
    "6188": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12023,
        12272
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6189": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12023,
        12272
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1466"
    },
    "6192": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12023,
        12272
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6193": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12075,
        12090
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6195": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12093,
        12123
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x183C"
    },
    "6198": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12113,
        12119
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6199": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12121,
        12122
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6200": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12093,
        12112
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1084"
    },
    "6203": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        12093,
        12123
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6204": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12093,
        12123
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6205": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12075,
        12123
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6206": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12075,
        12123
      ],
      "op": "POP",
      "path": "19"
    },
    "6207": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 56,
      "value": "0x40"
    },
    "6209": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6210": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6211": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6213": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "ADD",
      "path": "19"
    },
    "6214": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6216": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6217": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6218": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12187,
        12194
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6219": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6220": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6221": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6223": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "ADD",
      "path": "19"
    },
    "6224": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12237
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1B"
    },
    "6226": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6228": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12238,
        12245
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6229": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6230": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6231": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6233": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "ADD",
      "path": "19"
    },
    "6234": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6235": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6236": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6237": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6239": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "ADD",
      "path": "19"
    },
    "6240": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6242": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6243": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12227,
        12246
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6244": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6245": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6246": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12146,
        12261
      ],
      "op": "POP",
      "path": "19"
    },
    "6247": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12140
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6248": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12141,
        12142
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6249": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6250": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6251": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6252": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "LT",
      "path": "19"
    },
    "6253": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1878"
    },
    "6256": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6257": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1878"
    },
    "6260": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37E1"
    },
    "6263": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        12137,
        12143
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6264": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6265": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6267": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "MUL",
      "path": "19"
    },
    "6268": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6270": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "ADD",
      "path": "19"
    },
    "6271": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12143
      ],
      "op": "ADD",
      "path": "19"
    },
    "6272": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12261
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6273": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12261
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6274": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12261
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6275": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12137,
        12261
      ],
      "op": "POP",
      "path": "19"
    },
    "6276": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12061,
        12272
      ],
      "op": "POP",
      "path": "19"
    },
    "6277": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 57
    },
    "6278": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6279": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x188F"
    },
    "6282": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6283": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x382E"
    },
    "6286": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        12056,
        12059
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6287": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6288": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6289": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "POP",
      "path": "19"
    },
    "6290": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12056,
        12059
      ],
      "op": "POP",
      "path": "19"
    },
    "6291": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12023,
        12272
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1828"
    },
    "6294": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        12023,
        12272
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6295": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6296": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6303": {
      "op": "SHL"
    },
    "6304": {
      "op": "SUB"
    },
    "6305": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 58
    },
    "6306": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "AND",
      "path": "7"
    },
    "6307": {
      "branch": 218,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "SUB",
      "path": "7"
    },
    "6308": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18EF"
    },
    "6311": {
      "branch": 218,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6312": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6314": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6321": {
      "op": "SHL"
    },
    "6322": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6323": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6326": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6328": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6329": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "ADD",
      "path": "7"
    },
    "6330": {
      "op": "MSTORE"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6335": {
      "op": "DUP3"
    },
    "6336": {
      "op": "ADD"
    },
    "6337": {
      "op": "MSTORE"
    },
    "6338": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6373": {
      "op": "DUP3"
    },
    "6374": {
      "op": "ADD"
    },
    "6375": {
      "op": "MSTORE"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6378": {
      "op": "ADD"
    },
    "6379": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "6382": {
      "op": "JUMP"
    },
    "6383": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6384": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6385": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 59,
      "value": "0x0"
    },
    "6387": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6388": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6389": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6390": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4394
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "6392": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6394": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6395": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6396": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6397": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6399": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6400": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6401": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6408": {
      "op": "SHL"
    },
    "6409": {
      "op": "SUB"
    },
    "6410": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP8",
      "path": "7"
    },
    "6411": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "AND",
      "path": "7"
    },
    "6412": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6413": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6414": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6415": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6416": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6417": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6418": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6419": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6420": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6421": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6422": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6423": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6426": {
      "op": "NOT"
    },
    "6427": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "AND",
      "path": "7"
    },
    "6428": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP7",
      "path": "7"
    },
    "6429": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6430": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6431": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6432": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6433": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "OR",
      "path": "7"
    },
    "6434": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6437": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 60
    },
    "6438": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6439": {
      "op": "SWAP1"
    },
    "6440": {
      "op": "DUP2"
    },
    "6441": {
      "op": "MSTORE"
    },
    "6442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6444": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "6478": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6479": {
      "op": "ADD"
    },
    "6480": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6482": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6483": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6484": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6485": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SUB",
      "path": "7"
    },
    "6486": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6487": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "LOG3",
      "path": "7"
    },
    "6488": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "7"
    },
    "6489": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "7"
    },
    "6490": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6491": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3675,
        3810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6492": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3726,
        3730
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6494": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3749,
        3762
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 61,
      "value": "0x19"
    },
    "6496": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3749,
        3762
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6497": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3766,
        3767
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6499": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3749,
        3767
      ],
      "op": "EQ",
      "path": "19"
    },
    "6500": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3749,
        3767
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6501": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3749,
        3803
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6502": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3749,
        3803
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6503": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3749,
        3803
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD5F"
    },
    "6506": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3749,
        3803
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6507": {
      "op": "POP"
    },
    "6508": {
      "op": "POP"
    },
    "6509": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3790,
        3803
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x19"
    },
    "6511": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3790,
        3803
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6512": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3771,
        3786
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "6513": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3771,
        3803
      ],
      "op": "LT",
      "path": "19"
    },
    "6514": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3771,
        3803
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6515": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3771,
        3803
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6516": {
      "fn": "Celestial.mintingStartedAVAX",
      "jump": "o",
      "offset": [
        3675,
        3810
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6517": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8780,
        9804
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6518": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "6520": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6525": {
      "op": "SHL"
    },
    "6526": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6527": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "6528": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6530": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "6531": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6532": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x199F"
    },
    "6535": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6536": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6538": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6545": {
      "op": "SHL"
    },
    "6546": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6547": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6548": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6550": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "6551": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC0E"
    },
    "6554": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6555": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35E7"
    },
    "6558": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6559": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6560": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9045
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 62
    },
    "6561": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9049,
        9050
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6563": {
      "branch": 187,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9050
      ],
      "op": "EQ",
      "path": "19"
    },
    "6564": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9062
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6565": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9062
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19AE"
    },
    "6568": {
      "branch": 187,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9062
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6569": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9062
      ],
      "op": "POP",
      "path": "19"
    },
    "6570": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9054,
        9057
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6571": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9061,
        9062
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "6573": {
      "branch": 188,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9054,
        9062
      ],
      "op": "EQ",
      "path": "19"
    },
    "6574": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9062
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6575": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9075
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6576": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9075
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19B9"
    },
    "6579": {
      "branch": 188,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9075
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6580": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9075
      ],
      "op": "POP",
      "path": "19"
    },
    "6581": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9066,
        9069
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6582": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9073,
        9075
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "6584": {
      "branch": 189,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9066,
        9075
      ],
      "op": "EQ",
      "path": "19"
    },
    "6585": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9042,
        9075
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6586": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19D5"
    },
    "6589": {
      "branch": 189,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6590": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6592": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6599": {
      "op": "SHL"
    },
    "6600": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6601": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6602": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6604": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "ADD",
      "path": "19"
    },
    "6605": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "6608": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6609": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3611"
    },
    "6612": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9021,
        9130
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6613": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9021,
        9130
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6614": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9168,
        9176
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 63
    },
    "6615": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9168,
        9183
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6616": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9161,
        9164
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6617": {
      "branch": 190,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9161,
        9183
      ],
      "op": "EQ",
      "path": "19"
    },
    "6618": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9161,
        9215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6619": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9161,
        9215
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6620": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9161,
        9215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19E5"
    },
    "6623": {
      "branch": 190,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9161,
        9215
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6624": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9161,
        9215
      ],
      "op": "POP",
      "path": "19"
    },
    "6625": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9194,
        9208
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6626": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9194,
        9215
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6627": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9187,
        9190
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6628": {
      "branch": 191,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9187,
        9215
      ],
      "op": "EQ",
      "path": "19"
    },
    "6629": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9161,
        9215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6630": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A01"
    },
    "6633": {
      "branch": 191,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6634": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6636": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6637": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6643": {
      "op": "SHL"
    },
    "6644": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6645": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6646": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6648": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "ADD",
      "path": "19"
    },
    "6649": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "6652": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6653": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3648"
    },
    "6656": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9140,
        9293
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6657": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9140,
        9293
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6658": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9398,
        9423
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 64,
      "value": "0x14"
    },
    "6660": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9398,
        9423
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6661": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9377,
        9423
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A10"
    },
    "6664": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9377,
        9423
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6665": {
      "offset": [
        1052,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "6668": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9377,
        9423
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36B2"
    },
    "6671": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9377,
        9423
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6672": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9377,
        9423
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6673": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9352,
        9355
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6674": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9325,
        9349
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "6676": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9325,
        9349
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6677": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9325,
        9355
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A1E"
    },
    "6680": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9325,
        9355
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6681": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9325,
        9355
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6682": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9325,
        9355
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "6685": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9325,
        9355
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6686": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9325,
        9355
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6687": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9324,
        9424
      ],
      "op": "GT",
      "path": "19"
    },
    "6688": {
      "branch": 192,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9324,
        9424
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6689": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A3C"
    },
    "6692": {
      "branch": 192,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6693": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6695": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6696": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6702": {
      "op": "SHL"
    },
    "6703": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6704": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6705": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6707": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "ADD",
      "path": "19"
    },
    "6708": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "6711": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6712": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36E1"
    },
    "6715": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9303,
        9484
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6716": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9303,
        9484
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6717": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9537,
        9560
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6719": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9563,
        9589
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A50"
    },
    "6722": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9586,
        9589
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6723": {
      "offset": [
        689,
        698
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0x14D1120D7B160000"
    },
    "6732": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9563,
        9589
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3723"
    },
    "6735": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9563,
        9589
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6736": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9563,
        9589
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6737": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9537,
        9589
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6738": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9537,
        9589
      ],
      "op": "POP",
      "path": "19"
    },
    "6739": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9620,
        9635
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 65
    },
    "6740": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9607,
        9616
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6741": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9607,
        9635
      ],
      "op": "LT",
      "path": "19"
    },
    "6742": {
      "branch": 193,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9607,
        9635
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6743": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A72"
    },
    "6746": {
      "branch": 193,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6747": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6749": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6750": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6756": {
      "op": "SHL"
    },
    "6757": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6758": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6759": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6761": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "ADD",
      "path": "19"
    },
    "6762": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "6765": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6766": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3847"
    },
    "6769": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9599,
        9655
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6770": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9599,
        9655
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6771": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9694,
        9697
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 66
    },
    "6772": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9690
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "6774": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9690
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6776": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6777": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6778": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6779": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A84"
    },
    "6782": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6783": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6784": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "6787": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9666,
        9697
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6788": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6789": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6790": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6791": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9666,
        9697
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6792": {
      "op": "POP"
    },
    "6793": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9735,
        9797
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 67,
      "value": "0xFCE"
    },
    "6796": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9735,
        9797
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6797": {
      "op": "POP"
    },
    "6798": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9753,
        9756
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6799": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9758,
        9766
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6800": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9768,
        9782
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6801": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6802": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        11177,
        11194
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FBA"
    },
    "6805": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        11177,
        11239
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6806": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4282,
        4576
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6807": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6809": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6816": {
      "op": "SHL"
    },
    "6817": {
      "op": "SUB"
    },
    "6818": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "6819": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6820": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "6821": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC0"
    },
    "6824": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6825": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6827": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6834": {
      "op": "SHL"
    },
    "6835": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6836": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6837": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6839": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "6840": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "6843": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6844": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "6847": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6848": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6849": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4391,
        4398
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 68
    },
    "6850": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4366,
        4387
      ],
      "op": "SELFBALANCE",
      "path": "19"
    },
    "6851": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4366,
        4398
      ],
      "op": "LT",
      "path": "19"
    },
    "6852": {
      "branch": 194,
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4366,
        4398
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6853": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AE0"
    },
    "6856": {
      "branch": 194,
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6857": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6859": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6866": {
      "op": "SHL"
    },
    "6867": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6868": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6869": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6871": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "ADD",
      "path": "19"
    },
    "6872": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "6875": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6876": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3847"
    },
    "6879": {
      "fn": "Celestial.withdrawAVAX",
      "jump": "i",
      "offset": [
        4358,
        4418
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6880": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4358,
        4418
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6881": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6883": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6884": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6885": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6886": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6888": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6889": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6890": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6891": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4511,
        4518
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6892": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4511,
        4518
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6893": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6894": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6895": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6896": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6897": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4511,
        4518
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6898": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6899": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "GAS",
      "path": "19"
    },
    "6900": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "CALL",
      "path": "19"
    },
    "6901": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6902": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "POP",
      "path": "19"
    },
    "6903": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "POP",
      "path": "19"
    },
    "6904": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "POP",
      "path": "19"
    },
    "6905": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6906": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6907": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6909": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6910": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "EQ",
      "path": "19"
    },
    "6911": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B24"
    },
    "6914": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6915": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6917": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6918": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6919": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "POP",
      "path": "19"
    },
    "6920": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6922": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "NOT",
      "path": "19"
    },
    "6923": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3F"
    },
    "6925": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6926": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "ADD",
      "path": "19"
    },
    "6927": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "AND",
      "path": "19"
    },
    "6928": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6929": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "ADD",
      "path": "19"
    },
    "6930": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6932": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6933": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6934": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6935": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6936": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6937": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6939": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6941": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6942": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "ADD",
      "path": "19"
    },
    "6943": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "6944": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B29"
    },
    "6947": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6948": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6949": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6951": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6952": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "POP",
      "path": "19"
    },
    "6953": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6954": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4496,
        4523
      ],
      "op": "POP",
      "path": "19"
    },
    "6955": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4480,
        4523
      ],
      "op": "POP",
      "path": "19"
    },
    "6956": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4480,
        4523
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6957": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4480,
        4523
      ],
      "op": "POP",
      "path": "19"
    },
    "6958": {
      "branch": 195,
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4541,
        4545
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 69
    },
    "6959": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD43"
    },
    "6962": {
      "branch": 195,
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6963": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6965": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6972": {
      "op": "SHL"
    },
    "6973": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6974": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6977": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6979": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6980": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "ADD",
      "path": "19"
    },
    "6981": {
      "op": "MSTORE"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6986": {
      "op": "DUP3"
    },
    "6987": {
      "op": "ADD"
    },
    "6988": {
      "op": "MSTORE"
    },
    "6989": {
      "op": "PUSH19",
      "value": "0x8CC2D2D8CAC840E8DE40E6CADCC84082AC82B"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x6B"
    },
    "7011": {
      "op": "SHL"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7014": {
      "op": "DUP3"
    },
    "7015": {
      "op": "ADD"
    },
    "7016": {
      "op": "MSTORE"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7019": {
      "op": "ADD"
    },
    "7020": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4533,
        4569
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "7023": {
      "op": "JUMP"
    },
    "7024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7025": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 70,
      "value": "0x1B7A"
    },
    "7028": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5632,
        5639
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7030": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5617
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2035"
    },
    "7033": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7034": {
      "branch": 219,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B96"
    },
    "7038": {
      "branch": 219,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7041": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7048": {
      "op": "SHL"
    },
    "7049": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7050": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7051": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7053": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "ADD",
      "path": "7"
    },
    "7054": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "7057": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7058": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3790"
    },
    "7061": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7062": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7063": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5743
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 71,
      "value": "0xFCE"
    },
    "7066": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5718,
        5722
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7067": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5724,
        5726
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7068": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5728,
        5735
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7069": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5737,
        5742
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7070": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5717
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x241F"
    },
    "7073": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5704,
        5743
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7074": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7075": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6676,
        6689
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "7077": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6726,
        6742
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 72,
      "value": "0x1BAD"
    },
    "7080": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6734,
        6741
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7081": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6726,
        6733
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F2F"
    },
    "7084": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6726,
        6742
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7085": {
      "branch": 196,
      "fn": "Celestial.tokenURI",
      "offset": [
        6726,
        6742
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7086": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C11"
    },
    "7089": {
      "branch": 196,
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7090": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7092": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7099": {
      "op": "SHL"
    },
    "7100": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7101": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7104": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7106": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7107": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "ADD",
      "path": "19"
    },
    "7108": {
      "op": "MSTORE"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7113": {
      "op": "DUP3"
    },
    "7114": {
      "op": "ADD"
    },
    "7115": {
      "op": "MSTORE"
    },
    "7116": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7151": {
      "op": "DUP3"
    },
    "7152": {
      "op": "ADD"
    },
    "7153": {
      "op": "MSTORE"
    },
    "7154": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "7172": {
      "op": "SHL"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7175": {
      "op": "DUP3"
    },
    "7176": {
      "op": "ADD"
    },
    "7177": {
      "op": "MSTORE"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7180": {
      "op": "ADD"
    },
    "7181": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "7184": {
      "op": "JUMP"
    },
    "7185": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6705,
        6815
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7186": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6885,
        6895
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 73,
      "value": "0x1C19"
    },
    "7189": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6885,
        6893
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2452"
    },
    "7192": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6885,
        6895
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7193": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6885,
        6895
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7194": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6902,
        6920
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C22"
    },
    "7197": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6902,
        6909
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7198": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6902,
        6918
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2461"
    },
    "7201": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6902,
        6920
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7202": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6902,
        6920
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7203": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7205": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7206": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7208": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "ADD",
      "path": "19"
    },
    "7209": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C33"
    },
    "7212": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7213": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7214": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7215": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3870"
    },
    "7218": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6868,
        6930
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7219": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7220": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7222": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7223": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7225": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7226": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7227": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "SUB",
      "path": "19"
    },
    "7228": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "SUB",
      "path": "19"
    },
    "7229": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7230": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7231": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7232": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7234": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6868,
        6930
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7235": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6825,
        6944
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7236": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6825,
        6944
      ],
      "op": "POP",
      "path": "19"
    },
    "7237": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7238": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7239": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6563,
        6951
      ],
      "op": "POP",
      "path": "19"
    },
    "7240": {
      "fn": "Celestial.tokenURI",
      "jump": "o",
      "offset": [
        6563,
        6951
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7241": {
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7242": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "7244": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7245": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7246": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C56"
    },
    "7249": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7250": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35AD"
    },
    "7253": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7254": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7255": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7256": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7258": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7259": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7261": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7262": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7263": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DIV",
      "path": "19"
    },
    "7264": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "MUL",
      "path": "19"
    },
    "7265": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7267": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7268": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7270": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7271": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7272": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7273": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7274": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7276": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7277": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7278": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7279": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7280": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7281": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7282": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7283": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7284": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7286": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7287": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7288": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7289": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7290": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C82"
    },
    "7293": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7294": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35AD"
    },
    "7297": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7298": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7299": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7300": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7301": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CCF"
    },
    "7304": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7305": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7306": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7308": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "LT",
      "path": "19"
    },
    "7309": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CA4"
    },
    "7312": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7313": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "7316": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7317": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7318": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7319": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DIV",
      "path": "19"
    },
    "7320": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "MUL",
      "path": "19"
    },
    "7321": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7322": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7323": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7324": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7326": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7327": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7328": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CCF"
    },
    "7331": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7332": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7333": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7334": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7335": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7336": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7337": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7339": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7340": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7342": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7344": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7345": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7346": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7347": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7348": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7349": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7350": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7351": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7352": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7354": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7355": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7356": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7358": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7359": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7360": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7361": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "GT",
      "path": "19"
    },
    "7362": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CB2"
    },
    "7365": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7366": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7367": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7368": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SUB",
      "path": "19"
    },
    "7369": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7371": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "AND",
      "path": "19"
    },
    "7372": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7373": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "ADD",
      "path": "19"
    },
    "7374": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7375": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7376": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "POP",
      "path": "19"
    },
    "7377": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "POP",
      "path": "19"
    },
    "7378": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "POP",
      "path": "19"
    },
    "7379": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "POP",
      "path": "19"
    },
    "7380": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "POP",
      "path": "19"
    },
    "7381": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1483,
        1505
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7382": {
      "fn": "Celestial.tokenURI",
      "jump": "o",
      "offset": [
        1483,
        1505
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7383": {
      "fn": "Celestial.setStake",
      "offset": [
        2548,
        2631
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7384": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7386": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7393": {
      "op": "SHL"
    },
    "7394": {
      "op": "SUB"
    },
    "7395": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "7396": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7397": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "7398": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D01"
    },
    "7401": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7402": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7404": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7411": {
      "op": "SHL"
    },
    "7412": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7413": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7414": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7416": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "7417": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "7420": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7421": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "7424": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7425": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7426": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2615
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 74,
      "value": "0xE"
    },
    "7428": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7429": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7436": {
      "op": "SHL"
    },
    "7437": {
      "op": "SUB"
    },
    "7438": {
      "op": "NOT"
    },
    "7439": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "AND",
      "path": "19"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7446": {
      "op": "SHL"
    },
    "7447": {
      "op": "SUB"
    },
    "7448": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7449": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7450": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7451": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "AND",
      "path": "19"
    },
    "7452": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7453": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7454": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7455": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "OR",
      "path": "19"
    },
    "7456": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7457": {
      "fn": "Celestial.setStake",
      "offset": [
        2610,
        2624
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7458": {
      "fn": "Celestial.setStake",
      "jump": "o",
      "offset": [
        2548,
        2631
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7459": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7460": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12413,
        12435
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "7462": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12537,
        12538
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 75,
      "value": "0x0"
    },
    "7464": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12517,
        12534
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D30"
    },
    "7467": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12527,
        12533
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7468": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12517,
        12526
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146E"
    },
    "7471": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12517,
        12534
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7472": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12517,
        12534
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7473": {
      "branch": 197,
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12517,
        12538
      ],
      "op": "GT",
      "path": "19"
    },
    "7474": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4D"
    },
    "7477": {
      "branch": 197,
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7478": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7480": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7487": {
      "op": "SHL"
    },
    "7488": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7489": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7490": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7492": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "ADD",
      "path": "19"
    },
    "7493": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "7496": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7497": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37F7"
    },
    "7500": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12509,
        12574
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7501": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12509,
        12574
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7502": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7504": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7505": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7506": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12640,
        12641
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7508": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7509": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7510": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7511": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC0"
    },
    "7513": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7514": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "ADD",
      "path": "19"
    },
    "7515": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7516": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7517": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7518": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12584,
        12617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7520": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12584,
        12617
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7521": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7522": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7524": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "ADD",
      "path": "19"
    },
    "7525": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7526": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7528": {
      "op": "DUP1"
    },
    "7529": {
      "op": "MLOAD"
    },
    "7530": {
      "op": "DUP1"
    },
    "7531": {
      "op": "DUP3"
    },
    "7532": {
      "op": "ADD"
    },
    "7533": {
      "op": "SWAP1"
    },
    "7534": {
      "op": "SWAP2"
    },
    "7535": {
      "op": "MSTORE"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7538": {
      "op": "DUP1"
    },
    "7539": {
      "op": "DUP3"
    },
    "7540": {
      "op": "MSTORE"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7543": {
      "op": "DUP3"
    },
    "7544": {
      "op": "ADD"
    },
    "7545": {
      "op": "MSTORE"
    },
    "7546": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7547": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7548": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7550": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "ADD",
      "path": "19"
    },
    "7551": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7552": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7554": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7555": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "SUB",
      "path": "19"
    },
    "7556": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7557": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7558": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D65"
    },
    "7561": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7562": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7563": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12620,
        12642
      ],
      "op": "POP",
      "path": "19"
    },
    "7564": {
      "op": "POP"
    },
    "7565": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12584,
        12642
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7566": {
      "op": "POP"
    },
    "7567": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12652,
        12670
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7569": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12673,
        12682
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D9B"
    },
    "7572": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12673,
        12678
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7573": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12681,
        12682
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7575": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12673,
        12682
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3723"
    },
    "7578": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12673,
        12682
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7579": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12673,
        12682
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7580": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12652,
        12682
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7581": {
      "op": "POP"
    },
    "7582": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12692,
        12708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7584": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12711,
        12725
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DAA"
    },
    "7587": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12652,
        12682
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7588": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12724,
        12725
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7590": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12711,
        12725
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "7593": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12711,
        12725
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7594": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12711,
        12725
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7595": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12692,
        12725
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7596": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12692,
        12725
      ],
      "op": "POP",
      "path": "19"
    },
    "7597": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12751,
        12768
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "7600": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12761,
        12767
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7601": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12751,
        12760
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146E"
    },
    "7604": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12751,
        12768
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7605": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12751,
        12768
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7606": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12740,
        12748
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7607": {
      "branch": 198,
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12740,
        12768
      ],
      "op": "GT",
      "path": "19"
    },
    "7608": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12736,
        12823
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7609": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12736,
        12823
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DC8"
    },
    "7612": {
      "branch": 198,
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12736,
        12823
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7613": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12795,
        12812
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 76,
      "value": "0x1DC5"
    },
    "7616": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12805,
        12811
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7617": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12795,
        12804
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146E"
    },
    "7620": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12795,
        12812
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7621": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12795,
        12812
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7622": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12784,
        12812
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7623": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12784,
        12812
      ],
      "op": "POP",
      "path": "19"
    },
    "7624": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12736,
        12823
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7625": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12849,
        12859
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7626": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12832,
        13151
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7627": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12865,
        12873
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7628": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12861,
        12862
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7629": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12861,
        12873
      ],
      "op": "LT",
      "path": "19"
    },
    "7630": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12832,
        13151
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7631": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12832,
        13151
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E39"
    },
    "7634": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12832,
        13151
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7635": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12894,
        12909
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7637": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12912,
        12942
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DDE"
    },
    "7640": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12932,
        12938
      ],
      "op": "DUP9",
      "path": "19"
    },
    "7641": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12940,
        12941
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7642": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12912,
        12931
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1084"
    },
    "7645": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12912,
        12942
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7646": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12912,
        12942
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7647": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12894,
        12942
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7648": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12894,
        12942
      ],
      "op": "POP",
      "path": "19"
    },
    "7649": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 77,
      "value": "0x40"
    },
    "7651": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7652": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7653": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7655": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "ADD",
      "path": "19"
    },
    "7656": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7658": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7659": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7660": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13066,
        13073
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7661": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7662": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7663": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7665": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "ADD",
      "path": "19"
    },
    "7666": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13116
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1B"
    },
    "7668": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7670": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13117,
        13124
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7671": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7672": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7673": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7675": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "ADD",
      "path": "19"
    },
    "7676": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7677": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7678": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7679": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7681": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "ADD",
      "path": "19"
    },
    "7682": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7684": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7685": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13106,
        13125
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7686": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7687": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7688": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13025,
        13140
      ],
      "op": "POP",
      "path": "19"
    },
    "7689": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13019
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7690": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13020,
        13021
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7691": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7692": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7693": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7694": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "LT",
      "path": "19"
    },
    "7695": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E1A"
    },
    "7698": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7699": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E1A"
    },
    "7702": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37E1"
    },
    "7705": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        13009,
        13022
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7706": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7707": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7709": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "MUL",
      "path": "19"
    },
    "7710": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7712": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "ADD",
      "path": "19"
    },
    "7713": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13022
      ],
      "op": "ADD",
      "path": "19"
    },
    "7714": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7715": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7716": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7717": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13009,
        13140
      ],
      "op": "POP",
      "path": "19"
    },
    "7718": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12880,
        13151
      ],
      "op": "POP",
      "path": "19"
    },
    "7719": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 78
    },
    "7720": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7721": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E31"
    },
    "7724": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7725": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x382E"
    },
    "7728": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12875,
        12878
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7729": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7730": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7731": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "POP",
      "path": "19"
    },
    "7732": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12875,
        12878
      ],
      "op": "POP",
      "path": "19"
    },
    "7733": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12832,
        13151
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DCA"
    },
    "7736": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12832,
        13151
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7737": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12832,
        13151
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7738": {
      "op": "POP"
    },
    "7739": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13167,
        13177
      ],
      "op": "SWAP2",
      "path": "19",
      "statement": 79
    },
    "7740": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        13167,
        13177
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "7741": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12304,
        13184
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "7742": {
      "op": "POP"
    },
    "7743": {
      "op": "POP"
    },
    "7744": {
      "op": "POP"
    },
    "7745": {
      "op": "POP"
    },
    "7746": {
      "op": "POP"
    },
    "7747": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "o",
      "offset": [
        12304,
        13184
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7749": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7751": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7758": {
      "op": "SHL"
    },
    "7759": {
      "op": "SUB"
    },
    "7760": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "7761": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7762": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "7763": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6E"
    },
    "7766": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7767": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7769": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7770": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7776": {
      "op": "SHL"
    },
    "7777": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7778": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7779": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7781": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "7782": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "7785": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7786": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375B"
    },
    "7789": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7790": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7797": {
      "op": "SHL"
    },
    "7798": {
      "op": "SUB"
    },
    "7799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 80
    },
    "7800": {
      "branch": 236,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "7801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED3"
    },
    "7804": {
      "branch": 236,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7807": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7814": {
      "op": "SHL"
    },
    "7815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "7823": {
      "op": "MSTORE"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7828": {
      "op": "DUP3"
    },
    "7829": {
      "op": "ADD"
    },
    "7830": {
      "op": "MSTORE"
    },
    "7831": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7866": {
      "op": "DUP3"
    },
    "7867": {
      "op": "ADD"
    },
    "7868": {
      "op": "MSTORE"
    },
    "7869": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7878": {
      "op": "SHL"
    },
    "7879": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7881": {
      "op": "DUP3"
    },
    "7882": {
      "op": "ADD"
    },
    "7883": {
      "op": "MSTORE"
    },
    "7884": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7886": {
      "op": "ADD"
    },
    "7887": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "7890": {
      "op": "JUMP"
    },
    "7891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 81,
      "value": "0x1EDC"
    },
    "7895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x231C"
    },
    "7899": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "7902": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7903": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7904": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1598,
        1602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7912": {
      "op": "SHL"
    },
    "7913": {
      "op": "SUB"
    },
    "7914": {
      "op": "NOT"
    },
    "7915": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 82
    },
    "7916": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "AND",
      "path": "7"
    },
    "7917": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7924": {
      "op": "SHL"
    },
    "7925": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "EQ",
      "path": "7"
    },
    "7926": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7927": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F10"
    },
    "7930": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7931": {
      "op": "POP"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7938": {
      "op": "SHL"
    },
    "7939": {
      "op": "SUB"
    },
    "7940": {
      "op": "NOT"
    },
    "7941": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7942": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "AND",
      "path": "7"
    },
    "7943": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7950": {
      "op": "SHL"
    },
    "7951": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "EQ",
      "path": "7"
    },
    "7952": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7953": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7954": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB0E"
    },
    "7957": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7958": {
      "op": "POP"
    },
    "7959": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7966": {
      "op": "SHL"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7973": {
      "op": "SHL"
    },
    "7974": {
      "op": "SUB"
    },
    "7975": {
      "op": "NOT"
    },
    "7976": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 83
    },
    "7977": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "17"
    },
    "7978": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "17"
    },
    "7979": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1753,
        1789
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB0E"
    },
    "7982": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        763,
        918
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7983": {
      "fn": "ERC721._exists",
      "offset": [
        7222,
        7347
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7984": {
      "fn": "ERC721._exists",
      "offset": [
        7287,
        7291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7986": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 84
    },
    "7987": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7988": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7989": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "7991": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7993": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7994": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7996": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7997": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7998": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8005": {
      "op": "SHL"
    },
    "8006": {
      "op": "SUB"
    },
    "8007": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "7"
    },
    "8008": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8009": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8010": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8011": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7222,
        7347
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8012": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8013": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 85,
      "value": "0x0"
    },
    "8015": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8016": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8017": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8018": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11162
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "8020": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8022": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8023": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8025": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8026": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8027": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8028": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8035": {
      "op": "SHL"
    },
    "8036": {
      "op": "SUB"
    },
    "8037": {
      "op": "NOT"
    },
    "8038": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "7"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8045": {
      "op": "SHL"
    },
    "8046": {
      "op": "SUB"
    },
    "8047": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8048": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "7"
    },
    "8049": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8050": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8051": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "OR",
      "path": "7"
    },
    "8052": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8053": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8054": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8055": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8056": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8057": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 86,
      "value": "0x1F81"
    },
    "8060": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8061": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11214
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1327"
    },
    "8064": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8065": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8072": {
      "op": "SHL"
    },
    "8073": {
      "op": "SUB"
    },
    "8074": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "AND",
      "path": "7"
    },
    "8075": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8108": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8110": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8111": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8113": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8114": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8115": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8116": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SUB",
      "path": "7"
    },
    "8117": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8118": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "LOG4",
      "path": "7"
    },
    "8119": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "7"
    },
    "8120": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "7"
    },
    "8121": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8122": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6082,
        6557
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8123": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6256,
        6265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8125": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6251,
        6397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8126": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6275,
        6278
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8127": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6271,
        6272
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8128": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6271,
        6278
      ],
      "op": "LT",
      "path": "19"
    },
    "8129": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6251,
        6397
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8130": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6251,
        6397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x202E"
    },
    "8133": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6251,
        6397
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8134": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6319,
        6320
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 87,
      "value": "0x1"
    },
    "8136": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "8138": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "8140": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8141": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8142": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8143": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FD8"
    },
    "8146": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8147": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8148": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "8151": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        6299,
        6320
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8152": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8153": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "8154": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "POP",
      "path": "19"
    },
    "8155": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "POP",
      "path": "19"
    },
    "8156": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8157": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8158": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "8159": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6299,
        6320
      ],
      "op": "POP",
      "path": "19"
    },
    "8160": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6334,
        6386
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 88,
      "value": "0x201C"
    },
    "8163": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6351,
        6353
      ],
      "op": "DUP3",
      "path": "19"
    },
    "8164": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6363
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8165": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6364,
        6365
      ],
      "op": "DUP4",
      "path": "19"
    },
    "8166": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8167": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8168": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8169": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "LT",
      "path": "19"
    },
    "8170": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FF5"
    },
    "8173": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8174": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FF5"
    },
    "8177": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37E1"
    },
    "8180": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        6355,
        6366
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8181": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8182": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8184": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "MUL",
      "path": "19"
    },
    "8185": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8187": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "ADD",
      "path": "19"
    },
    "8188": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "ADD",
      "path": "19"
    },
    "8189": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6355,
        6366
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8190": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6382
      ],
      "op": "DUP6",
      "path": "19"
    },
    "8191": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6383,
        6384
      ],
      "op": "DUP5",
      "path": "19"
    },
    "8192": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8193": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8194": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8195": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "LT",
      "path": "19"
    },
    "8196": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x200F"
    },
    "8199": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "8200": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x200F"
    },
    "8203": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37E1"
    },
    "8206": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        6368,
        6385
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8207": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8208": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8210": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "MUL",
      "path": "19"
    },
    "8211": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "8213": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "8214": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "8215": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6368,
        6385
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "8216": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6334,
        6350
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2562"
    },
    "8219": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        6334,
        6386
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8220": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6334,
        6386
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8221": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6280,
        6283
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 89
    },
    "8222": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6280,
        6283
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2026"
    },
    "8225": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6280,
        6283
      ],
      "op": "DUP2",
      "path": "19"
    },
    "8226": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6280,
        6283
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x382E"
    },
    "8229": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        6280,
        6283
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8230": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6280,
        6283
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8231": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6280,
        6283
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "8232": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6280,
        6283
      ],
      "op": "POP",
      "path": "19"
    },
    "8233": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6280,
        6283
      ],
      "op": "POP",
      "path": "19"
    },
    "8234": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6251,
        6397
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FBD"
    },
    "8237": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6251,
        6397
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8238": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6251,
        6397
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8239": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6251,
        6397
      ],
      "op": "POP",
      "path": "19"
    },
    "8240": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6082,
        6557
      ],
      "op": "POP",
      "path": "19"
    },
    "8241": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6082,
        6557
      ],
      "op": "POP",
      "path": "19"
    },
    "8242": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6082,
        6557
      ],
      "op": "POP",
      "path": "19"
    },
    "8243": {
      "fn": "Celestial._createCelestials",
      "offset": [
        6082,
        6557
      ],
      "op": "POP",
      "path": "19"
    },
    "8244": {
      "fn": "Celestial._createCelestials",
      "jump": "o",
      "offset": [
        6082,
        6557
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8245": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8246": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7598,
        7602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8248": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7638
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 90,
      "value": "0x2040"
    },
    "8251": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7630,
        7637
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8252": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7629
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F2F"
    },
    "8255": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7622,
        7638
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8256": {
      "branch": 220,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7638
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8257": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20A1"
    },
    "8260": {
      "branch": 220,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8261": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8263": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8270": {
      "op": "SHL"
    },
    "8271": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8272": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8275": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "8277": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "ADD",
      "path": "7"
    },
    "8279": {
      "op": "MSTORE"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8284": {
      "op": "DUP3"
    },
    "8285": {
      "op": "ADD"
    },
    "8286": {
      "op": "MSTORE"
    },
    "8287": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8322": {
      "op": "DUP3"
    },
    "8323": {
      "op": "ADD"
    },
    "8324": {
      "op": "MSTORE"
    },
    "8325": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8340": {
      "op": "SHL"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8343": {
      "op": "DUP3"
    },
    "8344": {
      "op": "ADD"
    },
    "8345": {
      "op": "MSTORE"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8348": {
      "op": "ADD"
    },
    "8349": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "8352": {
      "op": "JUMP"
    },
    "8353": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8354": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8356": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20AC"
    },
    "8359": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7728,
        7735
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8360": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1327"
    },
    "8363": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8364": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8365": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8366": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "POP",
      "path": "7"
    },
    "8367": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7765,
        7770
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 91
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8374": {
      "op": "SHL"
    },
    "8375": {
      "op": "SUB"
    },
    "8376": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "7"
    },
    "8377": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7761
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8384": {
      "op": "SHL"
    },
    "8385": {
      "op": "SUB"
    },
    "8386": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "7"
    },
    "8387": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "EQ",
      "path": "7"
    },
    "8388": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8389": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20E7"
    },
    "8392": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8393": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "POP",
      "path": "7"
    },
    "8394": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7798,
        7805
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8401": {
      "op": "SHL"
    },
    "8402": {
      "op": "SUB"
    },
    "8403": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "7"
    },
    "8404": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20DC"
    },
    "8407": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7786,
        7793
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8408": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7785
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBA6"
    },
    "8411": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8412": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8419": {
      "op": "SHL"
    },
    "8420": {
      "op": "SUB"
    },
    "8421": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "7"
    },
    "8422": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "EQ",
      "path": "7"
    },
    "8423": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8424": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8425": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2117"
    },
    "8428": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8429": {
      "op": "POP"
    },
    "8430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8436": {
      "op": "SHL"
    },
    "8437": {
      "op": "SUB"
    },
    "8438": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8439": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8440": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "7"
    },
    "8441": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8443": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8444": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8445": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "8448": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8450": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8451": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8452": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8453": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8455": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8456": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8457": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8458": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8459": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP9",
      "path": "7"
    },
    "8460": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "7"
    },
    "8461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8463": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8464": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8465": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8466": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8467": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8468": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "8470": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "7"
    },
    "8471": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7809,
        7841
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8472": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7842
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8473": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8474": {
      "op": "POP"
    },
    "8475": {
      "op": "POP"
    },
    "8476": {
      "op": "POP"
    },
    "8477": {
      "op": "POP"
    },
    "8478": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8479": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8480": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10560
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 92
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8487": {
      "op": "SHL"
    },
    "8488": {
      "op": "SUB"
    },
    "8489": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "7"
    },
    "8490": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2132"
    },
    "8493": {
      "fn": "ERC721._transfer",
      "offset": [
        10544,
        10551
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8494": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10543
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1327"
    },
    "8497": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8498": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8505": {
      "op": "SHL"
    },
    "8506": {
      "op": "SUB"
    },
    "8507": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "7"
    },
    "8508": {
      "branch": 221,
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "EQ",
      "path": "7"
    },
    "8509": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x219A"
    },
    "8512": {
      "branch": 221,
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8513": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8515": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8522": {
      "op": "SHL"
    },
    "8523": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8524": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8527": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "8529": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8530": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "ADD",
      "path": "7"
    },
    "8531": {
      "op": "MSTORE"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "8534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8536": {
      "op": "DUP3"
    },
    "8537": {
      "op": "ADD"
    },
    "8538": {
      "op": "MSTORE"
    },
    "8539": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "8572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8574": {
      "op": "DUP3"
    },
    "8575": {
      "op": "ADD"
    },
    "8576": {
      "op": "MSTORE"
    },
    "8577": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "8589": {
      "op": "SHL"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8592": {
      "op": "DUP3"
    },
    "8593": {
      "op": "ADD"
    },
    "8594": {
      "op": "MSTORE"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8597": {
      "op": "ADD"
    },
    "8598": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "8601": {
      "op": "JUMP"
    },
    "8602": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8609": {
      "op": "SHL"
    },
    "8610": {
      "op": "SUB"
    },
    "8611": {
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 93
    },
    "8612": {
      "branch": 222,
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "AND",
      "path": "7"
    },
    "8613": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21FC"
    },
    "8616": {
      "branch": 222,
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8617": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8619": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8626": {
      "op": "SHL"
    },
    "8627": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8628": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8631": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "8633": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8634": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "ADD",
      "path": "7"
    },
    "8635": {
      "op": "MSTORE"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8638": {
      "op": "DUP1"
    },
    "8639": {
      "op": "DUP3"
    },
    "8640": {
      "op": "ADD"
    },
    "8641": {
      "op": "MSTORE"
    },
    "8642": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8677": {
      "op": "DUP3"
    },
    "8678": {
      "op": "ADD"
    },
    "8679": {
      "op": "MSTORE"
    },
    "8680": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8687": {
      "op": "SHL"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8690": {
      "op": "DUP3"
    },
    "8691": {
      "op": "ADD"
    },
    "8692": {
      "op": "MSTORE"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8695": {
      "op": "ADD"
    },
    "8696": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "8699": {
      "op": "JUMP"
    },
    "8700": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8701": {
      "fn": "ERC721._transfer",
      "offset": [
        10692,
        10731
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 94,
      "value": "0x2207"
    },
    "8704": {
      "fn": "ERC721._transfer",
      "offset": [
        10713,
        10717
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8705": {
      "fn": "ERC721._transfer",
      "offset": [
        10719,
        10721
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8706": {
      "fn": "ERC721._transfer",
      "offset": [
        10723,
        10730
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8707": {
      "fn": "ERC721._transfer",
      "offset": [
        10692,
        10712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2834"
    },
    "8710": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10692,
        10731
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8711": {
      "fn": "ERC721._transfer",
      "offset": [
        10692,
        10731
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8712": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 95,
      "value": "0x2212"
    },
    "8715": {
      "fn": "ERC721._transfer",
      "offset": [
        10810,
        10811
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8717": {
      "fn": "ERC721._transfer",
      "offset": [
        10814,
        10821
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8718": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10801
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F4C"
    },
    "8721": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8722": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8729": {
      "op": "SHL"
    },
    "8730": {
      "op": "SUB"
    },
    "8731": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 96
    },
    "8732": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "AND",
      "path": "7"
    },
    "8733": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8735": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8736": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8737": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8738": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10842
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "8740": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8742": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8743": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8745": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8746": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8747": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8748": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8749": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8751": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8752": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8753": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x223B"
    },
    "8756": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8757": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8758": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8759": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36B2"
    },
    "8762": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8763": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8764": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8765": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8766": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8767": {
      "op": "POP"
    },
    "8768": {
      "op": "POP"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8775": {
      "op": "SHL"
    },
    "8776": {
      "op": "SUB"
    },
    "8777": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 97
    },
    "8778": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "AND",
      "path": "7"
    },
    "8779": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8781": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8782": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8783": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8784": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10872
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "8786": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8788": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8789": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8791": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8792": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8793": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8794": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8795": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8797": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8798": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8799": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2269"
    },
    "8802": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8803": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8804": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8805": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36C9"
    },
    "8808": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8809": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8810": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8811": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8812": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8813": {
      "op": "POP"
    },
    "8814": {
      "op": "POP"
    },
    "8815": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 98,
      "value": "0x0"
    },
    "8817": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8818": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8819": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8820": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10898
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "8822": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8824": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8825": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8827": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8828": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8829": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8830": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8831": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8838": {
      "op": "SHL"
    },
    "8839": {
      "op": "SUB"
    },
    "8840": {
      "op": "NOT"
    },
    "8841": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "7"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8848": {
      "op": "SHL"
    },
    "8849": {
      "op": "SUB"
    },
    "8850": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP7",
      "path": "7"
    },
    "8851": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8852": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "7"
    },
    "8853": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8854": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8855": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "OR",
      "path": "7"
    },
    "8856": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8857": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8858": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8859": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 99
    },
    "8860": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8861": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8862": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8863": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8864": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "DUP8",
      "path": "7"
    },
    "8865": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "AND",
      "path": "7"
    },
    "8866": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8867": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8900": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8901": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "LOG4",
      "path": "7"
    },
    "8902": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "7"
    },
    "8903": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "7"
    },
    "8904": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "7"
    },
    "8905": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8906": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8907": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 100,
      "value": "0x40"
    },
    "8909": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8910": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8917": {
      "op": "SHL"
    },
    "8918": {
      "op": "SUB"
    },
    "8919": {
      "op": "DUP5"
    },
    "8920": {
      "op": "AND"
    },
    "8921": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8923": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8924": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "6"
    },
    "8925": {
      "op": "MSTORE"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8928": {
      "op": "DUP1"
    },
    "8929": {
      "op": "DUP3"
    },
    "8930": {
      "op": "ADD"
    },
    "8931": {
      "op": "DUP5"
    },
    "8932": {
      "op": "SWAP1"
    },
    "8933": {
      "op": "MSTORE"
    },
    "8934": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8935": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8936": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8937": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8938": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "6"
    },
    "8939": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8940": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8941": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "6"
    },
    "8942": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8943": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8946": {
      "op": "SWAP1"
    },
    "8947": {
      "op": "SWAP2"
    },
    "8948": {
      "op": "ADD"
    },
    "8949": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8950": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8951": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8952": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8954": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8955": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "6"
    },
    "8956": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8957": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8962": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8964": {
      "op": "SHL"
    },
    "8965": {
      "op": "SUB"
    },
    "8966": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "6"
    },
    "8967": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8974": {
      "op": "SHL"
    },
    "8975": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "6"
    },
    "8976": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8977": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8978": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD43"
    },
    "8981": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8982": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8983": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8984": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28EC"
    },
    "8987": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8988": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8989": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8991": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8992": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8999": {
      "op": "SHL"
    },
    "9000": {
      "op": "SUB"
    },
    "9001": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 101
    },
    "9002": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9003": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "9004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9010": {
      "op": "SHL"
    },
    "9011": {
      "op": "SUB"
    },
    "9012": {
      "op": "NOT"
    },
    "9013": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9014": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "9015": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9016": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "9017": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9018": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9019": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9020": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 102,
      "value": "0x40"
    },
    "9022": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9023": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9024": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "9025": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9026": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9027": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9028": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9029": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9062": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9063": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9065": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9066": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9067": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "9068": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "9069": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9070": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9071": {
      "fn": "MerkleProof.verify",
      "offset": [
        898,
        902
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9073": {
      "fn": "MerkleProof.verify",
      "offset": [
        937,
        941
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9074": {
      "fn": "MerkleProof.verify",
      "offset": [
        898,
        902
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9075": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9076": {
      "fn": "MerkleProof.verify",
      "offset": [
        976,
        981
      ],
      "op": "DUP6",
      "path": "16"
    },
    "9077": {
      "fn": "MerkleProof.verify",
      "offset": [
        976,
        988
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9078": {
      "fn": "MerkleProof.verify",
      "offset": [
        972,
        973
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9079": {
      "fn": "MerkleProof.verify",
      "offset": [
        972,
        988
      ],
      "op": "LT",
      "path": "16"
    },
    "9080": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9081": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2412"
    },
    "9084": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9085": {
      "fn": "MerkleProof.verify",
      "offset": [
        1009,
        1029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9087": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1037
      ],
      "op": "DUP7",
      "path": "16"
    },
    "9088": {
      "fn": "MerkleProof.verify",
      "offset": [
        1038,
        1039
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9089": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9090": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9091": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9092": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "LT",
      "path": "16"
    },
    "9093": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2390"
    },
    "9096": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9097": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2390"
    },
    "9100": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37E1"
    },
    "9103": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        1032,
        1040
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9104": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9105": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9107": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "MUL",
      "path": "16"
    },
    "9108": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9110": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "ADD",
      "path": "16"
    },
    "9111": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "ADD",
      "path": "16"
    },
    "9112": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9113": {
      "fn": "MerkleProof.verify",
      "offset": [
        1009,
        1040
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9114": {
      "fn": "MerkleProof.verify",
      "offset": [
        1009,
        1040
      ],
      "op": "POP",
      "path": "16"
    },
    "9115": {
      "fn": "MerkleProof.verify",
      "offset": [
        1075,
        1087
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9116": {
      "fn": "MerkleProof.verify",
      "offset": [
        1059,
        1071
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9117": {
      "branch": 235,
      "fn": "MerkleProof.verify",
      "offset": [
        1059,
        1087
      ],
      "op": "GT",
      "path": "16"
    },
    "9118": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23D2"
    },
    "9121": {
      "branch": 235,
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9122": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 103,
      "value": "0x40"
    },
    "9124": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9125": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9126": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9128": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9129": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "ADD",
      "path": "16"
    },
    "9130": {
      "op": "DUP6"
    },
    "9131": {
      "op": "SWAP1"
    },
    "9132": {
      "op": "MSTORE"
    },
    "9133": {
      "op": "SWAP1"
    },
    "9134": {
      "op": "DUP2"
    },
    "9135": {
      "op": "ADD"
    },
    "9136": {
      "op": "DUP3"
    },
    "9137": {
      "op": "SWAP1"
    },
    "9138": {
      "op": "MSTORE"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9141": {
      "op": "ADD"
    },
    "9142": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9144": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9145": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9147": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9148": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9149": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "SUB",
      "path": "16"
    },
    "9150": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "SUB",
      "path": "16"
    },
    "9151": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9152": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9153": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9154": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9156": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9157": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9158": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9159": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9160": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9162": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "ADD",
      "path": "16"
    },
    "9163": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "9164": {
      "fn": "MerkleProof.verify",
      "offset": [
        1185,
        1255
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9165": {
      "fn": "MerkleProof.verify",
      "offset": [
        1185,
        1255
      ],
      "op": "POP",
      "path": "16"
    },
    "9166": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23FF"
    },
    "9169": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9170": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9171": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 104,
      "value": "0x40"
    },
    "9173": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9174": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9175": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9177": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9178": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "ADD",
      "path": "16"
    },
    "9179": {
      "op": "DUP4"
    },
    "9180": {
      "op": "SWAP1"
    },
    "9181": {
      "op": "MSTORE"
    },
    "9182": {
      "op": "SWAP1"
    },
    "9183": {
      "op": "DUP2"
    },
    "9184": {
      "op": "ADD"
    },
    "9185": {
      "op": "DUP5"
    },
    "9186": {
      "op": "SWAP1"
    },
    "9187": {
      "op": "MSTORE"
    },
    "9188": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9190": {
      "op": "ADD"
    },
    "9191": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9193": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9194": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9196": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9197": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9198": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "SUB",
      "path": "16"
    },
    "9199": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "SUB",
      "path": "16"
    },
    "9200": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9201": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9202": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9203": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9205": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9206": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9207": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9208": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9209": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9211": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "ADD",
      "path": "16"
    },
    "9212": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "9213": {
      "fn": "MerkleProof.verify",
      "offset": [
        1372,
        1442
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9214": {
      "fn": "MerkleProof.verify",
      "offset": [
        1372,
        1442
      ],
      "op": "POP",
      "path": "16"
    },
    "9215": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9216": {
      "op": "POP"
    },
    "9217": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 105
    },
    "9218": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x240A"
    },
    "9221": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9222": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x382E"
    },
    "9225": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        990,
        993
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9226": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9227": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9228": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "POP",
      "path": "16"
    },
    "9229": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "POP",
      "path": "16"
    },
    "9230": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2373"
    },
    "9233": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9234": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9235": {
      "op": "POP"
    },
    "9236": {
      "fn": "MerkleProof.verify",
      "offset": [
        1559,
        1579
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 106
    },
    "9237": {
      "fn": "MerkleProof.verify",
      "offset": [
        1559,
        1579
      ],
      "op": "EQ",
      "path": "16"
    },
    "9238": {
      "fn": "MerkleProof.verify",
      "offset": [
        1559,
        1579
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9239": {
      "op": "POP"
    },
    "9240": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9241": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9242": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9243": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "POP",
      "path": "16"
    },
    "9244": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "POP",
      "path": "16"
    },
    "9245": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "POP",
      "path": "16"
    },
    "9246": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        777,
        1586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9247": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6919
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9248": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 107,
      "value": "0x242A"
    },
    "9251": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6777
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9252": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6781
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9253": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6783,
        6790
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9254": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6772
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x211F"
    },
    "9257": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9258": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9259": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 108,
      "value": "0x2436"
    },
    "9262": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6832,
        6836
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9263": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6838,
        6840
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9264": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6842,
        6849
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9265": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6851,
        6856
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9266": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29BE"
    },
    "9269": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9270": {
      "branch": 223,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9271": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFCE"
    },
    "9274": {
      "branch": 223,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "9275": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9277": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "9278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9284": {
      "op": "SHL"
    },
    "9285": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9286": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9287": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "9289": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "ADD",
      "path": "7"
    },
    "9290": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "9293": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9294": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38BE"
    },
    "9297": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9298": {
      "fn": "Celestial._baseURI",
      "offset": [
        3116,
        3223
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9299": {
      "fn": "Celestial._baseURI",
      "offset": [
        3176,
        3189
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "9301": {
      "fn": "Celestial._baseURI",
      "offset": [
        3208,
        3216
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 109,
      "value": "0xF"
    },
    "9303": {
      "fn": "Celestial._baseURI",
      "offset": [
        3201,
        3216
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9304": {
      "fn": "Celestial._baseURI",
      "offset": [
        3201,
        3216
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9305": {
      "fn": "Celestial._baseURI",
      "offset": [
        3201,
        3216
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB23"
    },
    "9308": {
      "fn": "Celestial._baseURI",
      "offset": [
        3201,
        3216
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9309": {
      "fn": "Celestial._baseURI",
      "offset": [
        3201,
        3216
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35AD"
    },
    "9312": {
      "fn": "Celestial._baseURI",
      "jump": "i",
      "offset": [
        3201,
        3216
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9313": {
      "fn": "Strings.toString",
      "offset": [
        275,
        978
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9314": {
      "fn": "Strings.toString",
      "offset": [
        331,
        344
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "9316": {
      "fn": "Strings.toString",
      "offset": [
        548,
        553
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9317": {
      "fn": "Strings.toString",
      "offset": [
        557,
        558
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9319": {
      "branch": 239,
      "fn": "Strings.toString",
      "offset": [
        548,
        558
      ],
      "op": "SUB",
      "path": "15"
    },
    "9320": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2488"
    },
    "9323": {
      "branch": 239,
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9324": {
      "op": "POP"
    },
    "9325": {
      "op": "POP"
    },
    "9326": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 110,
      "value": "0x40"
    },
    "9328": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9329": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9330": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9331": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9332": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "15"
    },
    "9333": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9334": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9335": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9336": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9338": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9339": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "9344": {
      "op": "SHL"
    },
    "9345": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9347": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9348": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "15"
    },
    "9349": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9350": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9351": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        275,
        978
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9352": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9353": {
      "fn": "Strings.toString",
      "offset": [
        619,
        624
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9354": {
      "fn": "Strings.toString",
      "offset": [
        604,
        616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9356": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9357": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9358": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9359": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24B2"
    },
    "9362": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9363": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 111
    },
    "9364": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x249C"
    },
    "9367": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9368": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x382E"
    },
    "9371": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        690,
        698
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9372": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9373": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9374": {
      "op": "POP"
    },
    "9375": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 112,
      "value": "0x24AB"
    },
    "9378": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9379": {
      "op": "POP"
    },
    "9380": {
      "fn": "Strings.toString",
      "offset": [
        720,
        722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "9382": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9383": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3926"
    },
    "9386": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        712,
        722
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9387": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9388": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9389": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "POP",
      "path": "15"
    },
    "9390": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x248C"
    },
    "9393": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9394": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9395": {
      "fn": "Strings.toString",
      "offset": [
        742,
        761
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9397": {
      "fn": "Strings.toString",
      "offset": [
        774,
        780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9398": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH8",
      "path": "15",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9407": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9408": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "GT",
      "path": "15"
    },
    "9409": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9410": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24CD"
    },
    "9413": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9414": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24CD"
    },
    "9417": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30E0"
    },
    "9420": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        764,
        781
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9421": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9422": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9424": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9425": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9426": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9427": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9428": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9429": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9430": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "9432": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9433": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "9435": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "NOT",
      "path": "15"
    },
    "9436": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "AND",
      "path": "15"
    },
    "9437": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9439": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9440": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9441": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9442": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9444": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9445": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9446": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9447": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24F7"
    },
    "9450": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9451": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9453": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9454": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9455": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9456": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9457": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "9458": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9459": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "9460": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9461": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9462": {
      "op": "POP"
    },
    "9463": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9464": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "POP",
      "path": "15"
    },
    "9465": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9466": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "POP",
      "path": "15"
    },
    "9467": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9468": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9469": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9470": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2117"
    },
    "9473": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9474": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 113,
      "value": "0x250C"
    },
    "9477": {
      "fn": "Strings.toString",
      "offset": [
        834,
        835
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9479": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9480": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36B2"
    },
    "9483": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        824,
        835
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9484": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9485": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9486": {
      "op": "POP"
    },
    "9487": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 114,
      "value": "0x2519"
    },
    "9490": {
      "fn": "Strings.toString",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "9492": {
      "fn": "Strings.toString",
      "offset": [
        892,
        897
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9493": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x393A"
    },
    "9496": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        892,
        902
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9497": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9498": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2524"
    },
    "9501": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9502": {
      "fn": "Strings.toString",
      "offset": [
        879,
        881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x30"
    },
    "9504": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36C9"
    },
    "9507": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        879,
        903
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9508": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9509": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF8"
    },
    "9511": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "SHL",
      "path": "15"
    },
    "9512": {
      "fn": "Strings.toString",
      "offset": [
        849,
        855
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9513": {
      "fn": "Strings.toString",
      "offset": [
        856,
        862
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9514": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9515": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9516": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9517": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "LT",
      "path": "15"
    },
    "9518": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2539"
    },
    "9521": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9522": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2539"
    },
    "9525": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x37E1"
    },
    "9528": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        849,
        863
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9529": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9530": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9532": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "15"
    },
    "9533": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "15"
    },
    "9534": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9539": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9541": {
      "op": "SHL"
    },
    "9542": {
      "op": "SUB"
    },
    "9543": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "NOT",
      "path": "15"
    },
    "9544": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "AND",
      "path": "15"
    },
    "9545": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9546": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9547": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9549": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "BYTE",
      "path": "15"
    },
    "9550": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9551": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "MSTORE8",
      "path": "15"
    },
    "9552": {
      "op": "POP"
    },
    "9553": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 115,
      "value": "0x255B"
    },
    "9556": {
      "fn": "Strings.toString",
      "offset": [
        928,
        930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "9558": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9559": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3926"
    },
    "9562": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        930
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9563": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9564": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9565": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "POP",
      "path": "15"
    },
    "9566": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24FB"
    },
    "9569": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9570": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4869,
        6076
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9571": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5037,
        5076
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 116,
      "value": "0x2570"
    },
    "9574": {
      "offset": [
        1109,
        1115
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A98"
    },
    "9577": {
      "offset": [
        1052,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "9580": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5037,
        5076
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36C9"
    },
    "9583": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5037,
        5076
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9584": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5037,
        5076
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9585": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5017,
        5033
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "9587": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5017,
        5033
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9588": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5017,
        5076
      ],
      "op": "GT",
      "path": "19"
    },
    "9589": {
      "branch": 199,
      "fn": "Celestial._createCelestial",
      "offset": [
        5017,
        5076
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9590": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x25C1"
    },
    "9593": {
      "branch": 199,
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9594": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9596": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9603": {
      "op": "SHL"
    },
    "9604": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9605": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9608": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9610": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9611": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "ADD",
      "path": "19"
    },
    "9612": {
      "op": "MSTORE"
    },
    "9613": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9617": {
      "op": "DUP3"
    },
    "9618": {
      "op": "ADD"
    },
    "9619": {
      "op": "MSTORE"
    },
    "9620": {
      "op": "PUSH32",
      "value": "0x63616E6E6F74206D696E7420616E796D6F72652063656C65737469616C730000"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9655": {
      "op": "DUP3"
    },
    "9656": {
      "op": "ADD"
    },
    "9657": {
      "op": "MSTORE"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9660": {
      "op": "ADD"
    },
    "9661": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "9664": {
      "op": "JUMP"
    },
    "9665": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4996,
        5132
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9666": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5151,
        5167
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 117,
      "value": "0x25CA"
    },
    "9669": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5159,
        5166
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9670": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5151,
        5158
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F2F"
    },
    "9673": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5151,
        5167
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9674": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5151,
        5167
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9675": {
      "branch": 200,
      "fn": "Celestial._createCelestial",
      "offset": [
        5150,
        5167
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9676": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2617"
    },
    "9679": {
      "branch": 200,
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9680": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9682": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9689": {
      "op": "SHL"
    },
    "9690": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9691": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9694": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9696": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9697": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "ADD",
      "path": "19"
    },
    "9698": {
      "op": "DUP2"
    },
    "9699": {
      "op": "SWAP1"
    },
    "9700": {
      "op": "MSTORE"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9703": {
      "op": "DUP3"
    },
    "9704": {
      "op": "ADD"
    },
    "9705": {
      "op": "MSTORE"
    },
    "9706": {
      "op": "PUSH32",
      "value": "0x746869732027746F6B656E49642720697320616C726561647920746F6F6B656E"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9741": {
      "op": "DUP3"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9746": {
      "op": "ADD"
    },
    "9747": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "9750": {
      "op": "JUMP"
    },
    "9751": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5142,
        5204
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9752": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5246,
        5247
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 118,
      "value": "0x1"
    },
    "9754": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5242
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9755": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5247
      ],
      "op": "LT",
      "path": "19"
    },
    "9756": {
      "branch": 201,
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5247
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9757": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5280
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9758": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5280
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9759": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5280
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x262A"
    },
    "9762": {
      "branch": 201,
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5280
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9763": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5280
      ],
      "op": "POP",
      "path": "19"
    },
    "9764": {
      "offset": [
        1052,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "9767": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5251,
        5258
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9768": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5251,
        5280
      ],
      "op": "GT",
      "path": "19"
    },
    "9769": {
      "branch": 202,
      "fn": "Celestial._createCelestial",
      "offset": [
        5251,
        5280
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9770": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5235,
        5280
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9771": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2676"
    },
    "9774": {
      "branch": 202,
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9775": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9777": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9784": {
      "op": "SHL"
    },
    "9785": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9786": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9789": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9791": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9792": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "ADD",
      "path": "19"
    },
    "9793": {
      "op": "MSTORE"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9798": {
      "op": "DUP3"
    },
    "9799": {
      "op": "ADD"
    },
    "9800": {
      "op": "MSTORE"
    },
    "9801": {
      "op": "PUSH32",
      "value": "0x27746F6B656E496427206D75737420626520696E207468652072616E67650000"
    },
    "9834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9836": {
      "op": "DUP3"
    },
    "9837": {
      "op": "ADD"
    },
    "9838": {
      "op": "MSTORE"
    },
    "9839": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9841": {
      "op": "ADD"
    },
    "9842": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "9845": {
      "op": "JUMP"
    },
    "9846": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5214,
        5336
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9847": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 119,
      "value": "0x0"
    },
    "9849": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9850": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9851": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9852": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5377
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1B"
    },
    "9854": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9856": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9857": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9859": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9860": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9861": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5386
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9862": {
      "branch": 203,
      "fn": "Celestial._createCelestial",
      "offset": [
        5367,
        5391
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9863": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26E1"
    },
    "9866": {
      "branch": 203,
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9867": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9869": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9870": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9874": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9876": {
      "op": "SHL"
    },
    "9877": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9878": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9881": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9883": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9884": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "ADD",
      "path": "19"
    },
    "9885": {
      "op": "MSTORE"
    },
    "9886": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9890": {
      "op": "DUP3"
    },
    "9891": {
      "op": "ADD"
    },
    "9892": {
      "op": "MSTORE"
    },
    "9893": {
      "op": "PUSH32",
      "value": "0x7468617420746F6B656E277320747970652068617320616C7265616479206265"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9928": {
      "op": "DUP3"
    },
    "9929": {
      "op": "ADD"
    },
    "9930": {
      "op": "MSTORE"
    },
    "9931": {
      "op": "PUSH6",
      "value": "0x195B881CD95D"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "9940": {
      "op": "SHL"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9943": {
      "op": "DUP3"
    },
    "9944": {
      "op": "ADD"
    },
    "9945": {
      "op": "MSTORE"
    },
    "9946": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9948": {
      "op": "ADD"
    },
    "9949": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "9952": {
      "op": "JUMP"
    },
    "9953": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5346,
        5455
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9954": {
      "offset": [
        1158,
        1159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9956": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5499
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 120
    },
    "9957": {
      "branch": 204,
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5513
      ],
      "op": "EQ",
      "path": "19"
    },
    "9958": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5560
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9959": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5560
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26F0"
    },
    "9962": {
      "branch": 204,
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5560
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9963": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5560
      ],
      "op": "POP",
      "path": "19"
    },
    "9964": {
      "offset": [
        1202,
        1203
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "9966": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5533,
        5546
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9967": {
      "branch": 205,
      "fn": "Celestial._createCelestial",
      "offset": [
        5533,
        5560
      ],
      "op": "EQ",
      "path": "19"
    },
    "9968": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5560
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9969": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9970": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5610
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x26FB"
    },
    "9973": {
      "branch": 205,
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5610
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9974": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5610
      ],
      "op": "POP",
      "path": "19"
    },
    "9975": {
      "offset": [
        1249,
        1250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "9977": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5580,
        5593
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9978": {
      "branch": 206,
      "fn": "Celestial._createCelestial",
      "offset": [
        5580,
        5610
      ],
      "op": "EQ",
      "path": "19"
    },
    "9979": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5486,
        5610
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9980": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2740"
    },
    "9983": {
      "branch": 206,
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9984": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9986": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9993": {
      "op": "SHL"
    },
    "9994": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9995": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9998": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "10000": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "DUP3",
      "path": "19"
    },
    "10001": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "ADD",
      "path": "19"
    },
    "10002": {
      "op": "MSTORE"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "10005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10007": {
      "op": "DUP3"
    },
    "10008": {
      "op": "ADD"
    },
    "10009": {
      "op": "MSTORE"
    },
    "10010": {
      "op": "PUSH22",
      "value": "0x696E76616C69642063656C65737469616C2074797065"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10035": {
      "op": "SHL"
    },
    "10036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10038": {
      "op": "DUP3"
    },
    "10039": {
      "op": "ADD"
    },
    "10040": {
      "op": "MSTORE"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10043": {
      "op": "ADD"
    },
    "10044": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0E"
    },
    "10047": {
      "op": "JUMP"
    },
    "10048": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5658
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10049": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 121,
      "value": "0x0"
    },
    "10051": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "DUP3",
      "path": "19"
    },
    "10052": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10053": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10054": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5678
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1B"
    },
    "10056": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "10058": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "10059": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10061": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10062": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5687
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "10063": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5703
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10064": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5703
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10065": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5668,
        5703
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "10066": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5743,
        5744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "10068": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5726,
        5744
      ],
      "op": "DUP2",
      "path": "19"
    },
    "10069": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5726,
        5744
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10070": {
      "branch": 207,
      "fn": "Celestial._createCelestial",
      "offset": [
        5726,
        5744
      ],
      "op": "SUB",
      "path": "19"
    },
    "10071": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5722,
        5898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2774"
    },
    "10074": {
      "branch": 207,
      "fn": "Celestial._createCelestial",
      "offset": [
        5722,
        5898
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10075": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5772
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 122,
      "value": "0x16"
    },
    "10077": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10078": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10079": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10080": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5772
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10082": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x276A"
    },
    "10085": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10086": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x382E"
    },
    "10089": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5760,
        5774
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10090": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10091": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10092": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10093": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "POP",
      "path": "19"
    },
    "10094": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "10095": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5760,
        5774
      ],
      "op": "POP",
      "path": "19"
    },
    "10096": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5722,
        5898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27A2"
    },
    "10099": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5722,
        5898
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10100": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5722,
        5898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10101": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5794,
        5807
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10102": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5811,
        5812
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "10104": {
      "branch": 208,
      "fn": "Celestial._createCelestial",
      "offset": [
        5794,
        5812
      ],
      "op": "SUB",
      "path": "19"
    },
    "10105": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5791,
        5898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x278C"
    },
    "10108": {
      "branch": 208,
      "fn": "Celestial._createCelestial",
      "offset": [
        5791,
        5898
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "10109": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5827,
        5839
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 123,
      "value": "0x17"
    },
    "10111": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5827,
        5841
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10112": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5827,
        5841
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10113": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5827,
        5841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10114": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5827,
        5839
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10116": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5827,
        5841
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x276A"
    },
    "10119": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5827,
        5841
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10120": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5827,
        5841
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x382E"
    },
    "10123": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5827,
        5841
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10124": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5791,
        5898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10125": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5885
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 124,
      "value": "0x18"
    },
    "10127": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10128": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10129": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10130": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5885
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "10132": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x279C"
    },
    "10135": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10136": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x382E"
    },
    "10139": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5870,
        5887
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10140": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10141": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10142": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10143": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "POP",
      "path": "19"
    },
    "10144": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "10145": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5870,
        5887
      ],
      "op": "POP",
      "path": "19"
    },
    "10146": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5791,
        5898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10147": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5908,
        5930
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 125,
      "value": "0x27AC"
    },
    "10150": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5918,
        5920
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10151": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5922,
        5929
      ],
      "op": "DUP4",
      "path": "19"
    },
    "10152": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5908,
        5917
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2ABF"
    },
    "10155": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5908,
        5930
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10156": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5908,
        5930
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10157": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5958,
        5963
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 126,
      "value": "0xE"
    },
    "10159": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5958,
        5963
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "10160": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5940,
        5969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27C3"
    },
    "10163": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5940,
        5969
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10170": {
      "op": "SHL"
    },
    "10171": {
      "op": "SUB"
    },
    "10172": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5958,
        5963
      ],
      "op": "AND",
      "path": "19"
    },
    "10173": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5958,
        5963
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "10175": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5940,
        5957
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1897"
    },
    "10178": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5940,
        5969
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10179": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5940,
        5969
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "10180": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 127,
      "value": "0x40"
    },
    "10182": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10183": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "10184": {
      "op": "DUP4"
    },
    "10185": {
      "op": "DUP2"
    },
    "10186": {
      "op": "MSTORE"
    },
    "10187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10189": {
      "op": "DUP2"
    },
    "10190": {
      "op": "ADD"
    },
    "10191": {
      "op": "DUP4"
    },
    "10192": {
      "op": "SWAP1"
    },
    "10193": {
      "op": "MSTORE"
    },
    "10194": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC3446D569695AA78750F8132CE4941514489A02C8CA9A2078EE392DCCD96474E"
    },
    "10227": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10228": {
      "op": "ADD"
    },
    "10229": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10231": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "10232": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10233": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10234": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "SUB",
      "path": "19"
    },
    "10235": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10236": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5984,
        6027
      ],
      "op": "LOG1",
      "path": "19"
    },
    "10237": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 128,
      "value": "0x40"
    },
    "10239": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "10240": {
      "op": "DUP3"
    },
    "10241": {
      "op": "DUP2"
    },
    "10242": {
      "op": "MSTORE"
    },
    "10243": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xB0C73316550069520AA3BFFD50BE8C7989584DA8716295793EDA73DBCD1C154C"
    },
    "10276": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10279": {
      "op": "ADD"
    },
    "10280": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "10282": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "10283": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "DUP1",
      "path": "19"
    },
    "10284": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "10285": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "SUB",
      "path": "19"
    },
    "10286": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "10287": {
      "fn": "Celestial._createCelestial",
      "offset": [
        6042,
        6069
      ],
      "op": "LOG1",
      "path": "19"
    },
    "10288": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4869,
        6076
      ],
      "op": "POP",
      "path": "19"
    },
    "10289": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4869,
        6076
      ],
      "op": "POP",
      "path": "19"
    },
    "10290": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4869,
        6076
      ],
      "op": "POP",
      "path": "19"
    },
    "10291": {
      "fn": "Celestial._createCelestial",
      "jump": "o",
      "offset": [
        4869,
        6076
      ],
      "op": "JUMP",
      "path": "19"
    },
    "10292": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2544,
        3116
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10299": {
      "op": "SHL"
    },
    "10300": {
      "op": "SUB"
    },
    "10301": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2743,
        2761
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10302": {
      "branch": 230,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2743,
        2761
      ],
      "op": "AND",
      "path": "10"
    },
    "10303": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x288F"
    },
    "10306": {
      "branch": 230,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10307": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2777,
        2817
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 129,
      "value": "0x288A"
    },
    "10310": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2809,
        2816
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10311": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3925,
        3935
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 130,
      "value": "0x8"
    },
    "10313": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3925,
        3942
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10314": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3925,
        3942
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10315": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10317": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10318": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10319": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10320": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3913
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "10322": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10324": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10325": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10327": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10328": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10329": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3942
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10330": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3942
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10331": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3942
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10332": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 131,
      "value": "0x1"
    },
    "10334": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10335": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "ADD",
      "path": "10"
    },
    "10336": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10337": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10338": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10339": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10340": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10341": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10342": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "10375": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "ADD",
      "path": "10"
    },
    "10376": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10377": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3822,
        3983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10378": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2777,
        2817
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10379": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28B2"
    },
    "10382": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10383": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10384": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2846,
        2848
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10391": {
      "op": "SHL"
    },
    "10392": {
      "op": "SUB"
    },
    "10393": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2838,
        2848
      ],
      "op": "AND",
      "path": "10"
    },
    "10394": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2838,
        2842
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10401": {
      "op": "SHL"
    },
    "10402": {
      "op": "SUB"
    },
    "10403": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2838,
        2848
      ],
      "op": "AND",
      "path": "10"
    },
    "10404": {
      "branch": 231,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2838,
        2848
      ],
      "op": "EQ",
      "path": "10"
    },
    "10405": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2834,
        2922
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28B2"
    },
    "10408": {
      "branch": 231,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2834,
        2922
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10409": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2864,
        2911
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 132,
      "value": "0x28B2"
    },
    "10412": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2897,
        2901
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10413": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2903,
        2910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10414": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2864,
        2896
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2ADD"
    },
    "10417": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2864,
        2911
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10418": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2864,
        2911
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10425": {
      "op": "SHL"
    },
    "10426": {
      "op": "SUB"
    },
    "10427": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2935,
        2951
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10428": {
      "branch": 232,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2935,
        2951
      ],
      "op": "AND",
      "path": "10"
    },
    "10429": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2931,
        3110
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28C9"
    },
    "10432": {
      "branch": 232,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2931,
        3110
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10433": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        3012
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 133,
      "value": "0xD43"
    },
    "10436": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3004,
        3011
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10437": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        3003
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B7A"
    },
    "10440": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2967,
        3012
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10441": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2931,
        3110
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10442": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3039,
        3043
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10449": {
      "op": "SHL"
    },
    "10450": {
      "op": "SUB"
    },
    "10451": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3043
      ],
      "op": "AND",
      "path": "10"
    },
    "10452": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3035
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10459": {
      "op": "SHL"
    },
    "10460": {
      "op": "SUB"
    },
    "10461": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3043
      ],
      "op": "AND",
      "path": "10"
    },
    "10462": {
      "branch": 233,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3043
      ],
      "op": "EQ",
      "path": "10"
    },
    "10463": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3029,
        3110
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD43"
    },
    "10466": {
      "branch": 233,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3029,
        3110
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10467": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3059,
        3099
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 134,
      "value": "0xD43"
    },
    "10470": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3087,
        3089
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10471": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3091,
        3098
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10472": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3059,
        3086
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C29"
    },
    "10475": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3059,
        3099
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10477": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2941"
    },
    "10482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10485": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10486": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10487": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10489": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "6"
    },
    "10490": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10493": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10494": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10496": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10498": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "6"
    },
    "10501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "10534": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10535": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10536": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "6"
    },
    "10537": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10544": {
      "op": "SHL"
    },
    "10545": {
      "op": "SUB"
    },
    "10546": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "6"
    },
    "10547": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6D"
    },
    "10550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10552": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10553": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10554": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "10559": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "6"
    },
    "10560": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10563": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10564": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10566": {
      "op": "POP"
    },
    "10567": {
      "branch": 237,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "10568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD43"
    },
    "10571": {
      "branch": 237,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 135
    },
    "10573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "6"
    },
    "10577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10579": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10580": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "6"
    },
    "10581": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10582": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x295F"
    },
    "10585": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10587": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x394E"
    },
    "10590": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10591": {
      "branch": 238,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD43"
    },
    "10595": {
      "branch": 238,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10596": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10598": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10605": {
      "op": "SHL"
    },
    "10606": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10607": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10610": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10612": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10613": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "6"
    },
    "10614": {
      "op": "MSTORE"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10619": {
      "op": "DUP3"
    },
    "10620": {
      "op": "ADD"
    },
    "10621": {
      "op": "MSTORE"
    },
    "10622": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10657": {
      "op": "DUP3"
    },
    "10658": {
      "op": "ADD"
    },
    "10659": {
      "op": "MSTORE"
    },
    "10660": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "10671": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "10673": {
      "op": "SHL"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10676": {
      "op": "DUP3"
    },
    "10677": {
      "op": "ADD"
    },
    "10678": {
      "op": "MSTORE"
    },
    "10679": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10681": {
      "op": "ADD"
    },
    "10682": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC0E"
    },
    "10685": {
      "op": "JUMP"
    },
    "10686": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10687": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11947,
        11951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10695": {
      "op": "SHL"
    },
    "10696": {
      "op": "SUB"
    },
    "10697": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10698": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "AND",
      "path": "7"
    },
    "10699": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "10700": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "13",
      "statement": 136
    },
    "10701": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AB4"
    },
    "10704": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10705": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10707": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10708": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10715": {
      "op": "SHL"
    },
    "10716": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10717": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10724": {
      "op": "SHL"
    },
    "10725": {
      "op": "SUB"
    },
    "10726": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "DUP6",
      "path": "7"
    },
    "10727": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "AND",
      "path": "7"
    },
    "10728": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10729": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x150B7A02"
    },
    "10734": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10735": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A02"
    },
    "10738": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10739": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "10740": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10741": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "DUP10",
      "path": "7"
    },
    "10742": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10743": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "DUP9",
      "path": "7"
    },
    "10744": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10745": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "DUP9",
      "path": "7"
    },
    "10746": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10747": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "10749": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "7"
    },
    "10750": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x396B"
    },
    "10753": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10754": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10755": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10757": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10759": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10760": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10761": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10762": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SUB",
      "path": "7"
    },
    "10763": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10764": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10766": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP8",
      "path": "7"
    },
    "10767": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "GAS",
      "path": "7"
    },
    "10768": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "CALL",
      "path": "7"
    },
    "10769": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "7"
    },
    "10771": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "7"
    },
    "10772": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "7"
    },
    "10773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10774": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10775": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A3D"
    },
    "10778": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10779": {
      "op": "POP"
    },
    "10780": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10783": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10784": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "10786": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10787": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10789": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "7"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10792": {
      "op": "NOT"
    },
    "10793": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "AND",
      "path": "7"
    },
    "10794": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10795": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "7"
    },
    "10796": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10797": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10798": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10799": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A3A"
    },
    "10802": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10803": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10804": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "7"
    },
    "10805": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10806": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x39A8"
    },
    "10809": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10810": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10811": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "10813": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10814": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A9A"
    },
    "10817": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10818": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10819": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10820": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10821": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A6B"
    },
    "10825": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10826": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10828": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10830": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "7"
    },
    "10831": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "10833": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "NOT",
      "path": "7"
    },
    "10834": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "10836": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10837": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "7"
    },
    "10838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "AND",
      "path": "7"
    },
    "10839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "7"
    },
    "10841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10845": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10846": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10848": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10850": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10852": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10853": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "7"
    },
    "10854": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "10855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A70"
    },
    "10858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10859": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10860": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "10862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "7"
    },
    "10864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "7"
    },
    "10866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12251
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12258
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12262,
        12263
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10870": {
      "branch": 224,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12263
      ],
      "op": "SUB",
      "path": "7"
    },
    "10871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A92"
    },
    "10874": {
      "branch": 224,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 137,
      "value": "0x40"
    },
    "10877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10884": {
      "op": "SHL"
    },
    "10885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10887": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "10889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "ADD",
      "path": "7"
    },
    "10890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "10893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10894": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38BE"
    },
    "10897": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12287,
        12347
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12459,
        12465
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12453,
        12466
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12444,
        12450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12440,
        12442
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12436,
        12451
      ],
      "op": "ADD",
      "path": "7"
    },
    "10905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12429,
        12467
      ],
      "op": "REVERT",
      "path": "7"
    },
    "10906": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10913": {
      "op": "SHL"
    },
    "10914": {
      "op": "SUB"
    },
    "10915": {
      "op": "NOT"
    },
    "10916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "AND",
      "path": "7",
      "statement": 138
    },
    "10917": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10922": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10924": {
      "op": "SHL"
    },
    "10925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "EQ",
      "path": "7"
    },
    "10926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10927": {
      "op": "POP"
    },
    "10928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12179
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2117"
    },
    "10931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12179
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10933": {
      "op": "POP"
    },
    "10934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12558,
        12562
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 139,
      "value": "0x1"
    },
    "10936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "10937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "10938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "7"
    },
    "10939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "7"
    },
    "10940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "7"
    },
    "10941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "7"
    },
    "10942": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11797,
        12579
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10943": {
      "fn": "ERC721._safeMint",
      "offset": [
        8179,
        8287
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10944": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 140,
      "value": "0x2AD9"
    },
    "10947": {
      "fn": "ERC721._safeMint",
      "offset": [
        8264,
        8266
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10948": {
      "fn": "ERC721._safeMint",
      "offset": [
        8268,
        8275
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10949": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10951": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10952": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10953": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10955": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "ADD",
      "path": "7"
    },
    "10956": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10958": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10959": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10960": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10962": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10963": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10964": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "POP",
      "path": "7"
    },
    "10965": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8263
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C7C"
    },
    "10968": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8254,
        8280
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10969": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10970": {
      "fn": "ERC721._safeMint",
      "offset": [
        8179,
        8287
      ],
      "op": "POP",
      "path": "7"
    },
    "10971": {
      "fn": "ERC721._safeMint",
      "offset": [
        8179,
        8287
      ],
      "op": "POP",
      "path": "7"
    },
    "10972": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8179,
        8287
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10973": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4600,
        5570
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10974": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4862,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10976": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4912,
        4913
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "10978": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4909
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AEA"
    },
    "10981": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4904,
        4908
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10982": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4903
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x146E"
    },
    "10985": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4887,
        4909
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10986": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4909
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10987": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AF4"
    },
    "10990": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10991": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10992": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36B2"
    },
    "10995": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4887,
        4913
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10996": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10997": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4923,
        4941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10999": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11000": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11001": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11002": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "11004": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11006": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11007": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11009": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11010": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11011": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11012": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4862,
        4913
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11013": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4862,
        4913
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11014": {
      "op": "POP"
    },
    "11015": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5074,
        5102
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11016": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5074,
        5102
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11017": {
      "branch": 234,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5074,
        5102
      ],
      "op": "EQ",
      "path": "10"
    },
    "11018": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5070,
        5393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B47"
    },
    "11021": {
      "branch": 234,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5070,
        5393
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11028": {
      "op": "SHL"
    },
    "11029": {
      "op": "SUB"
    },
    "11030": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11031": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "AND",
      "path": "10"
    },
    "11032": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5118,
        5137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11034": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11035": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11036": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11037": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5152
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11039": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11041": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11042": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11043": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11044": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11046": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11047": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11048": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11049": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP6",
      "path": "10"
    },
    "11050": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11051": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11052": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11053": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11054": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11055": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11056": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11057": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11058": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 141
    },
    "11059": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11060": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11061": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11062": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11063": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11064": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5233
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11065": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11066": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5233
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11067": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 142
    },
    "11068": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11069": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5322
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "11071": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11072": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11073": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11074": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11075": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11076": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5348
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11077": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5348
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11078": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5348
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11079": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5070,
        5393
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11080": {
      "op": "POP"
    },
    "11081": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 143,
      "value": "0x0"
    },
    "11083": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11084": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11085": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11086": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5503
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "11088": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11090": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11091": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11092": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11093": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11095": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11096": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11097": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11098": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5479,
        5512
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11099": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5479,
        5512
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11100": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5479,
        5512
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11107": {
      "op": "SHL"
    },
    "11108": {
      "op": "SUB"
    },
    "11109": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 144
    },
    "11110": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "11111": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "AND",
      "path": "10"
    },
    "11112": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11113": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11114": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5541
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11116": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11117": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11118": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11119": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11120": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11121": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11122": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11123": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11124": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11125": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11126": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11127": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11128": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5522,
        5563
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11129": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4600,
        5570
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11130": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5858,
        6919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11131": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6142
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "11133": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6149
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11134": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6129
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11136": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6129
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11137": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6153
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B8C"
    },
    "11140": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6153
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11141": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6152,
        6153
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11143": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6152,
        6153
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11144": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6153
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36B2"
    },
    "11147": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6132,
        6153
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11148": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6153
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11149": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6163,
        6181
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11151": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11152": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11153": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11154": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6199
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "11156": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11158": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11159": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11161": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11162": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11163": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11164": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6562
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "11166": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11167": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11168": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6153
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "11169": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6153
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "11170": {
      "op": "POP"
    },
    "11171": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11172": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11173": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6153
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11174": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6153
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11175": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11176": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "LT",
      "path": "10"
    },
    "11177": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BB4"
    },
    "11180": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11181": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BB4"
    },
    "11184": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37E1"
    },
    "11187": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6552,
        6578
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11188": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11189": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11190": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11192": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11193": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11195": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11197": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11198": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "ADD",
      "path": "10"
    },
    "11199": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11200": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6530,
        6578
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11201": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6530,
        6578
      ],
      "op": "POP",
      "path": "10"
    },
    "11202": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6614,
        6625
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 145
    },
    "11203": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6599
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "11205": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6600,
        6610
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11206": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11207": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11208": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11209": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "LT",
      "path": "10"
    },
    "11210": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BD5"
    },
    "11213": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11214": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BD5"
    },
    "11217": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37E1"
    },
    "11220": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6589,
        6611
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11221": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11222": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11224": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11225": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11226": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11227": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11229": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11230": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11231": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11232": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11233": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11234": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "ADD",
      "path": "10"
    },
    "11235": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6625
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11236": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6625
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11237": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6625
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11238": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6625
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11239": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 146
    },
    "11240": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11241": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11242": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "11244": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11245": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11246": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11247": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11249": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11250": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11251": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11252": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6734
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11253": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6734
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11254": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6734
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11255": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 147
    },
    "11256": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11257": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11258": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11259": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11260": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6855,
        6886
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11261": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6906
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 148,
      "value": "0x8"
    },
    "11263": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11264": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11265": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11266": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C0D"
    },
    "11269": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11270": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C0D"
    },
    "11273": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39C5"
    },
    "11276": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6896,
        6912
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11277": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11278": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11280": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11281": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SUB",
      "path": "10"
    },
    "11282": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11283": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11284": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11285": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11287": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11288": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11290": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11292": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11293": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "ADD",
      "path": "10"
    },
    "11294": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11296": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11297": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11298": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11299": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11300": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5929,
        6919
      ],
      "op": "POP",
      "path": "10"
    },
    "11301": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5929,
        6919
      ],
      "op": "POP",
      "path": "10"
    },
    "11302": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5929,
        6919
      ],
      "op": "POP",
      "path": "10"
    },
    "11303": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5858,
        6919
      ],
      "op": "POP",
      "path": "10"
    },
    "11304": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5858,
        6919
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11305": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3410,
        3627
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11306": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3494,
        3508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11308": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3511,
        3531
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C34"
    },
    "11311": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3528,
        3530
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11312": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3511,
        3527
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x146E"
    },
    "11315": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3511,
        3531
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11316": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3511,
        3531
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11323": {
      "op": "SHL"
    },
    "11324": {
      "op": "SUB"
    },
    "11325": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 149
    },
    "11326": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "11327": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "AND",
      "path": "10"
    },
    "11328": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11330": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11331": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11332": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11333": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3553
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11335": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11337": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11338": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11339": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11340": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11342": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11343": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11344": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11345": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11346": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11347": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11348": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11349": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11350": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11351": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11352": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11353": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3575
      ],
      "op": "DUP6",
      "path": "10"
    },
    "11354": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3575
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11355": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3575
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11356": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP4",
      "path": "10",
      "statement": 150
    },
    "11357": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11358": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11359": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3602
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "11361": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11362": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11363": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11364": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11365": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11366": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11367": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3620
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11368": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3620
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11369": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3620
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11370": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3620
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11371": {
      "op": "POP"
    },
    "11372": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3410,
        3627
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11373": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11374": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "11376": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 151,
      "value": "0x2117"
    },
    "11379": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "13"
    },
    "11380": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "13"
    },
    "11381": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11383": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "13"
    },
    "11384": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2CAF"
    },
    "11387": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11388": {
      "fn": "ERC721._safeMint",
      "offset": [
        8508,
        8819
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11389": {
      "fn": "ERC721._safeMint",
      "offset": [
        8633,
        8651
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 152,
      "value": "0x2C86"
    },
    "11392": {
      "fn": "ERC721._safeMint",
      "offset": [
        8639,
        8641
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11393": {
      "fn": "ERC721._safeMint",
      "offset": [
        8643,
        8650
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11394": {
      "fn": "ERC721._safeMint",
      "offset": [
        8633,
        8638
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DD7"
    },
    "11397": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8633,
        8651
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11398": {
      "fn": "ERC721._safeMint",
      "offset": [
        8633,
        8651
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11399": {
      "fn": "ERC721._safeMint",
      "offset": [
        8682,
        8736
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 153,
      "value": "0x2C93"
    },
    "11402": {
      "fn": "ERC721._safeMint",
      "offset": [
        8713,
        8714
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11404": {
      "fn": "ERC721._safeMint",
      "offset": [
        8717,
        8719
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11405": {
      "fn": "ERC721._safeMint",
      "offset": [
        8721,
        8728
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11406": {
      "fn": "ERC721._safeMint",
      "offset": [
        8730,
        8735
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11407": {
      "fn": "ERC721._safeMint",
      "offset": [
        8682,
        8704
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29BE"
    },
    "11410": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8682,
        8736
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11411": {
      "branch": 225,
      "fn": "ERC721._safeMint",
      "offset": [
        8682,
        8736
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11412": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD43"
    },
    "11415": {
      "branch": 225,
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11416": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11418": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11425": {
      "op": "SHL"
    },
    "11426": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11427": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11428": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11430": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "ADD",
      "path": "7"
    },
    "11431": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "11434": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11435": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38BE"
    },
    "11438": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8661,
        8812
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11439": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11440": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "11442": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 154
    },
    "11443": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "13"
    },
    "11444": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "13"
    },
    "11445": {
      "branch": 209,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11446": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D10"
    },
    "11449": {
      "branch": 209,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11450": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11452": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11459": {
      "op": "SHL"
    },
    "11460": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11461": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11464": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "13"
    },
    "11468": {
      "op": "MSTORE"
    },
    "11469": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11473": {
      "op": "DUP3"
    },
    "11474": {
      "op": "ADD"
    },
    "11475": {
      "op": "MSTORE"
    },
    "11476": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "11509": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11511": {
      "op": "DUP3"
    },
    "11512": {
      "op": "ADD"
    },
    "11513": {
      "op": "MSTORE"
    },
    "11514": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "11521": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "11523": {
      "op": "SHL"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11526": {
      "op": "DUP3"
    },
    "11527": {
      "op": "ADD"
    },
    "11528": {
      "op": "MSTORE"
    },
    "11529": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11531": {
      "op": "ADD"
    },
    "11532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC0E"
    },
    "11535": {
      "op": "JUMP"
    },
    "11536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11537": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "13"
    },
    "11538": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "11539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 155,
      "value": "0x2D5E"
    },
    "11542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11552": {
      "op": "SHL"
    },
    "11553": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11559": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11560": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "13"
    },
    "11561": {
      "op": "MSTORE"
    },
    "11562": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "11564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11566": {
      "op": "DUP3"
    },
    "11567": {
      "op": "ADD"
    },
    "11568": {
      "op": "MSTORE"
    },
    "11569": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "11602": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11604": {
      "op": "DUP3"
    },
    "11605": {
      "op": "ADD"
    },
    "11606": {
      "op": "MSTORE"
    },
    "11607": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11609": {
      "op": "ADD"
    },
    "11610": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC0E"
    },
    "11613": {
      "op": "JUMP"
    },
    "11614": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11615": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11617": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11618": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11625": {
      "op": "SHL"
    },
    "11626": {
      "op": "SUB"
    },
    "11627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "13"
    },
    "11628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "13"
    },
    "11629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "13"
    },
    "11630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D7A"
    },
    "11636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39DB"
    },
    "11641": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11645": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11647": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11649": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "13"
    },
    "11650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "13"
    },
    "11651": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "13"
    },
    "11653": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "13"
    },
    "11654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "13"
    },
    "11655": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "13"
    },
    "11656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "11657": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11658": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11659": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11660": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11661": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11665": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "13"
    },
    "11666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DB7"
    },
    "11669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11672": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11673": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11674": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "11677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "13"
    },
    "11678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "11680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "11682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "13"
    },
    "11683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "11685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11694": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "11696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "13"
    },
    "11697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "11698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "11699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DBC"
    },
    "11702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "11706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11707": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11712": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 156,
      "value": "0x2DCC"
    },
    "11717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5007,
        5014
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5016,
        5026
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5028,
        5040
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11720": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5006
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F16"
    },
    "11723": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5041
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5041
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "11726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "11727": {
      "op": "POP"
    },
    "11728": {
      "op": "POP"
    },
    "11729": {
      "op": "POP"
    },
    "11730": {
      "op": "POP"
    },
    "11731": {
      "op": "POP"
    },
    "11732": {
      "op": "POP"
    },
    "11733": {
      "op": "POP"
    },
    "11734": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11735": {
      "fn": "ERC721._mint",
      "offset": [
        9141,
        9513
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11742": {
      "op": "SHL"
    },
    "11743": {
      "op": "SUB"
    },
    "11744": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9236
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 157
    },
    "11745": {
      "branch": 226,
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9236
      ],
      "op": "AND",
      "path": "7"
    },
    "11746": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E2D"
    },
    "11749": {
      "branch": 226,
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11750": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11752": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11759": {
      "op": "SHL"
    },
    "11760": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11761": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11764": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11766": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11767": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "ADD",
      "path": "7"
    },
    "11768": {
      "op": "DUP2"
    },
    "11769": {
      "op": "SWAP1"
    },
    "11770": {
      "op": "MSTORE"
    },
    "11771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11773": {
      "op": "DUP3"
    },
    "11774": {
      "op": "ADD"
    },
    "11775": {
      "op": "MSTORE"
    },
    "11776": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11809": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11811": {
      "op": "DUP3"
    },
    "11812": {
      "op": "ADD"
    },
    "11813": {
      "op": "MSTORE"
    },
    "11814": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11816": {
      "op": "ADD"
    },
    "11817": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "11820": {
      "op": "JUMP"
    },
    "11821": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11822": {
      "fn": "ERC721._mint",
      "offset": [
        9292,
        9308
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 158,
      "value": "0x2E36"
    },
    "11825": {
      "fn": "ERC721._mint",
      "offset": [
        9300,
        9307
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11826": {
      "fn": "ERC721._mint",
      "offset": [
        9292,
        9299
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F2F"
    },
    "11829": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9292,
        9308
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11830": {
      "fn": "ERC721._mint",
      "offset": [
        9292,
        9308
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11831": {
      "branch": 227,
      "fn": "ERC721._mint",
      "offset": [
        9291,
        9308
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "11832": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E83"
    },
    "11835": {
      "branch": 227,
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11836": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11838": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11839": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11843": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11845": {
      "op": "SHL"
    },
    "11846": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11847": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11850": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11852": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11853": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "ADD",
      "path": "7"
    },
    "11854": {
      "op": "MSTORE"
    },
    "11855": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11857": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11859": {
      "op": "DUP3"
    },
    "11860": {
      "op": "ADD"
    },
    "11861": {
      "op": "MSTORE"
    },
    "11862": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11895": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11897": {
      "op": "DUP3"
    },
    "11898": {
      "op": "ADD"
    },
    "11899": {
      "op": "MSTORE"
    },
    "11900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11902": {
      "op": "ADD"
    },
    "11903": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0E"
    },
    "11906": {
      "op": "JUMP"
    },
    "11907": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11908": {
      "fn": "ERC721._mint",
      "offset": [
        9352,
        9397
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 159,
      "value": "0x2E8F"
    },
    "11911": {
      "fn": "ERC721._mint",
      "offset": [
        9381,
        9382
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11913": {
      "fn": "ERC721._mint",
      "offset": [
        9385,
        9387
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11914": {
      "fn": "ERC721._mint",
      "offset": [
        9389,
        9396
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11915": {
      "fn": "ERC721._mint",
      "offset": [
        9352,
        9372
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2834"
    },
    "11918": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9352,
        9397
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11919": {
      "fn": "ERC721._mint",
      "offset": [
        9352,
        9397
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11926": {
      "op": "SHL"
    },
    "11927": {
      "op": "SUB"
    },
    "11928": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 160
    },
    "11929": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "AND",
      "path": "7"
    },
    "11930": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11932": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11933": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11934": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11935": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9417
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "11937": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "11939": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11940": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11942": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11943": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "11944": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11945": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "11946": {
      "fn": "ERC721._mint",
      "offset": [
        9425,
        9426
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "11948": {
      "fn": "ERC721._mint",
      "offset": [
        9425,
        9426
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "11949": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11950": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EB8"
    },
    "11953": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11954": {
      "fn": "ERC721._mint",
      "offset": [
        9425,
        9426
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11955": {
      "fn": "ERC721._mint",
      "offset": [
        9425,
        9426
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11956": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36C9"
    },
    "11959": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9408,
        9426
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11960": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11961": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11962": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11963": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "11964": {
      "op": "POP"
    },
    "11965": {
      "op": "POP"
    },
    "11966": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 161,
      "value": "0x0"
    },
    "11968": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11969": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11970": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11971": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9443
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "11973": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "11975": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11976": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11978": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11979": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11980": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "11981": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11982": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11989": {
      "op": "SHL"
    },
    "11990": {
      "op": "SUB"
    },
    "11991": {
      "op": "NOT"
    },
    "11992": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "AND",
      "path": "7"
    },
    "11993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11999": {
      "op": "SHL"
    },
    "12000": {
      "op": "SUB"
    },
    "12001": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "DUP7",
      "path": "7"
    },
    "12002": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "AND",
      "path": "7"
    },
    "12003": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12004": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "DUP2",
      "path": "7"
    },
    "12005": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "OR",
      "path": "7"
    },
    "12006": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12007": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "12008": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "12009": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 162
    },
    "12010": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "12011": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP4",
      "path": "7"
    },
    "12012": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "12013": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12014": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12047": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12048": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP3",
      "path": "7"
    },
    "12049": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12050": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "LOG4",
      "path": "7"
    },
    "12051": {
      "fn": "ERC721._mint",
      "offset": [
        9141,
        9513
      ],
      "op": "POP",
      "path": "7"
    },
    "12052": {
      "fn": "ERC721._mint",
      "offset": [
        9141,
        9513
      ],
      "op": "POP",
      "path": "7"
    },
    "12053": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9141,
        9513
      ],
      "op": "JUMP",
      "path": "7"
    },
    "12054": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "12055": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7096,
        7108
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "12057": {
      "branch": 210,
      "fn": "Address._verifyCallResult",
      "offset": [
        7124,
        7131
      ],
      "op": "DUP4",
      "path": "13"
    },
    "12058": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "12059": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F25"
    },
    "12062": {
      "branch": 210,
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12063": {
      "op": "POP"
    },
    "12064": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7154,
        7164
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 163
    },
    "12065": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2418"
    },
    "12068": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "JUMP",
      "path": "13"
    },
    "12069": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "12070": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "DUP3",
      "path": "13"
    },
    "12071": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "12072": {
      "branch": 211,
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7286
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "12073": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F35"
    },
    "12076": {
      "branch": 211,
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12077": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7459,
        7469
      ],
      "op": "DUP3",
      "path": "13"
    },
    "12078": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7453,
        7470
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "12079": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7519,
        7534
      ],
      "op": "DUP1",
      "path": "13"
    },
    "12080": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7506,
        7516
      ],
      "op": "DUP5",
      "path": "13"
    },
    "12081": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7502,
        7504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "12083": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7498,
        7517
      ],
      "op": "ADD",
      "path": "13"
    },
    "12084": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7491,
        7535
      ],
      "op": "REVERT",
      "path": "13"
    },
    "12085": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "12086": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7598,
        7610
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 164
    },
    "12087": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "12089": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "12090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12096": {
      "op": "SHL"
    },
    "12097": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "DUP2",
      "path": "13"
    },
    "12098": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "12099": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "12101": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "ADD",
      "path": "13"
    },
    "12102": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC0E"
    },
    "12105": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "12106": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "12107": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3073"
    },
    "12110": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7591,
        7611
      ],
      "op": "JUMP",
      "path": "13"
    },
    "12111": {
      "op": "JUMPDEST"
    },
    "12112": {
      "op": "DUP3"
    },
    "12113": {
      "op": "DUP1"
    },
    "12114": {
      "op": "SLOAD"
    },
    "12115": {
      "op": "PUSH2",
      "value": "0x2F5B"
    },
    "12118": {
      "op": "SWAP1"
    },
    "12119": {
      "op": "PUSH2",
      "value": "0x35AD"
    },
    "12122": {
      "jump": "i",
      "op": "JUMP"
    },
    "12123": {
      "op": "JUMPDEST"
    },
    "12124": {
      "op": "SWAP1"
    },
    "12125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12127": {
      "op": "MSTORE"
    },
    "12128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12132": {
      "op": "KECCAK256"
    },
    "12133": {
      "op": "SWAP1"
    },
    "12134": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12136": {
      "op": "ADD"
    },
    "12137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12139": {
      "op": "SWAP1"
    },
    "12140": {
      "op": "DIV"
    },
    "12141": {
      "op": "DUP2"
    },
    "12142": {
      "op": "ADD"
    },
    "12143": {
      "op": "SWAP3"
    },
    "12144": {
      "op": "DUP3"
    },
    "12145": {
      "op": "PUSH2",
      "value": "0x2F7D"
    },
    "12148": {
      "op": "JUMPI"
    },
    "12149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12151": {
      "op": "DUP6"
    },
    "12152": {
      "op": "SSTORE"
    },
    "12153": {
      "op": "PUSH2",
      "value": "0x2FC3"
    },
    "12156": {
      "op": "JUMP"
    },
    "12157": {
      "op": "JUMPDEST"
    },
    "12158": {
      "op": "DUP3"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12161": {
      "op": "LT"
    },
    "12162": {
      "op": "PUSH2",
      "value": "0x2F96"
    },
    "12165": {
      "op": "JUMPI"
    },
    "12166": {
      "op": "DUP3"
    },
    "12167": {
      "op": "DUP1"
    },
    "12168": {
      "op": "ADD"
    },
    "12169": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12171": {
      "op": "NOT"
    },
    "12172": {
      "op": "DUP3"
    },
    "12173": {
      "op": "CALLDATALOAD"
    },
    "12174": {
      "op": "AND"
    },
    "12175": {
      "op": "OR"
    },
    "12176": {
      "op": "DUP6"
    },
    "12177": {
      "op": "SSTORE"
    },
    "12178": {
      "op": "PUSH2",
      "value": "0x2FC3"
    },
    "12181": {
      "op": "JUMP"
    },
    "12182": {
      "op": "JUMPDEST"
    },
    "12183": {
      "op": "DUP3"
    },
    "12184": {
      "op": "DUP1"
    },
    "12185": {
      "op": "ADD"
    },
    "12186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12188": {
      "op": "ADD"
    },
    "12189": {
      "op": "DUP6"
    },
    "12190": {
      "op": "SSTORE"
    },
    "12191": {
      "op": "DUP3"
    },
    "12192": {
      "op": "ISZERO"
    },
    "12193": {
      "op": "PUSH2",
      "value": "0x2FC3"
    },
    "12196": {
      "op": "JUMPI"
    },
    "12197": {
      "op": "SWAP2"
    },
    "12198": {
      "op": "DUP3"
    },
    "12199": {
      "op": "ADD"
    },
    "12200": {
      "op": "JUMPDEST"
    },
    "12201": {
      "op": "DUP3"
    },
    "12202": {
      "op": "DUP2"
    },
    "12203": {
      "op": "GT"
    },
    "12204": {
      "op": "ISZERO"
    },
    "12205": {
      "op": "PUSH2",
      "value": "0x2FC3"
    },
    "12208": {
      "op": "JUMPI"
    },
    "12209": {
      "op": "DUP3"
    },
    "12210": {
      "op": "CALLDATALOAD"
    },
    "12211": {
      "op": "DUP3"
    },
    "12212": {
      "op": "SSTORE"
    },
    "12213": {
      "op": "SWAP2"
    },
    "12214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12216": {
      "op": "ADD"
    },
    "12217": {
      "op": "SWAP2"
    },
    "12218": {
      "op": "SWAP1"
    },
    "12219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12221": {
      "op": "ADD"
    },
    "12222": {
      "op": "SWAP1"
    },
    "12223": {
      "op": "PUSH2",
      "value": "0x2FA8"
    },
    "12226": {
      "op": "JUMP"
    },
    "12227": {
      "op": "JUMPDEST"
    },
    "12228": {
      "op": "POP"
    },
    "12229": {
      "op": "PUSH2",
      "value": "0x2FCF"
    },
    "12232": {
      "op": "SWAP3"
    },
    "12233": {
      "op": "SWAP2"
    },
    "12234": {
      "op": "POP"
    },
    "12235": {
      "op": "PUSH2",
      "value": "0x2FD3"
    },
    "12238": {
      "jump": "i",
      "op": "JUMP"
    },
    "12239": {
      "op": "JUMPDEST"
    },
    "12240": {
      "op": "POP"
    },
    "12241": {
      "op": "SWAP1"
    },
    "12242": {
      "jump": "o",
      "op": "JUMP"
    },
    "12243": {
      "op": "JUMPDEST"
    },
    "12244": {
      "op": "JUMPDEST"
    },
    "12245": {
      "op": "DUP1"
    },
    "12246": {
      "op": "DUP3"
    },
    "12247": {
      "op": "GT"
    },
    "12248": {
      "op": "ISZERO"
    },
    "12249": {
      "op": "PUSH2",
      "value": "0x2FCF"
    },
    "12252": {
      "op": "JUMPI"
    },
    "12253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12255": {
      "op": "DUP2"
    },
    "12256": {
      "op": "SSTORE"
    },
    "12257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12259": {
      "op": "ADD"
    },
    "12260": {
      "op": "PUSH2",
      "value": "0x2FD4"
    },
    "12263": {
      "op": "JUMP"
    },
    "12264": {
      "op": "JUMPDEST"
    },
    "12265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12269": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12271": {
      "op": "SHL"
    },
    "12272": {
      "op": "SUB"
    },
    "12273": {
      "op": "NOT"
    },
    "12274": {
      "op": "DUP2"
    },
    "12275": {
      "op": "AND"
    },
    "12276": {
      "op": "DUP2"
    },
    "12277": {
      "op": "EQ"
    },
    "12278": {
      "op": "PUSH2",
      "value": "0x1EDC"
    },
    "12281": {
      "op": "JUMPI"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12284": {
      "op": "DUP1"
    },
    "12285": {
      "op": "REVERT"
    },
    "12286": {
      "op": "JUMPDEST"
    },
    "12287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12291": {
      "op": "DUP3"
    },
    "12292": {
      "op": "DUP5"
    },
    "12293": {
      "op": "SUB"
    },
    "12294": {
      "op": "SLT"
    },
    "12295": {
      "op": "ISZERO"
    },
    "12296": {
      "op": "PUSH2",
      "value": "0x3010"
    },
    "12299": {
      "op": "JUMPI"
    },
    "12300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12302": {
      "op": "DUP1"
    },
    "12303": {
      "op": "REVERT"
    },
    "12304": {
      "op": "JUMPDEST"
    },
    "12305": {
      "op": "DUP2"
    },
    "12306": {
      "op": "CALLDATALOAD"
    },
    "12307": {
      "op": "PUSH2",
      "value": "0x2418"
    },
    "12310": {
      "op": "DUP2"
    },
    "12311": {
      "op": "PUSH2",
      "value": "0x2FE8"
    },
    "12314": {
      "jump": "i",
      "op": "JUMP"
    },
    "12315": {
      "op": "JUMPDEST"
    },
    "12316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12318": {
      "op": "JUMPDEST"
    },
    "12319": {
      "op": "DUP4"
    },
    "12320": {
      "op": "DUP2"
    },
    "12321": {
      "op": "LT"
    },
    "12322": {
      "op": "ISZERO"
    },
    "12323": {
      "op": "PUSH2",
      "value": "0x3036"
    },
    "12326": {
      "op": "JUMPI"
    },
    "12327": {
      "op": "DUP2"
    },
    "12328": {
      "op": "DUP2"
    },
    "12329": {
      "op": "ADD"
    },
    "12330": {
      "op": "MLOAD"
    },
    "12331": {
      "op": "DUP4"
    },
    "12332": {
      "op": "DUP3"
    },
    "12333": {
      "op": "ADD"
    },
    "12334": {
      "op": "MSTORE"
    },
    "12335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12337": {
      "op": "ADD"
    },
    "12338": {
      "op": "PUSH2",
      "value": "0x301E"
    },
    "12341": {
      "op": "JUMP"
    },
    "12342": {
      "op": "JUMPDEST"
    },
    "12343": {
      "op": "DUP4"
    },
    "12344": {
      "op": "DUP2"
    },
    "12345": {
      "op": "GT"
    },
    "12346": {
      "op": "ISZERO"
    },
    "12347": {
      "op": "PUSH2",
      "value": "0xFCE"
    },
    "12350": {
      "op": "JUMPI"
    },
    "12351": {
      "op": "POP"
    },
    "12352": {
      "op": "POP"
    },
    "12353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12355": {
      "op": "SWAP2"
    },
    "12356": {
      "op": "ADD"
    },
    "12357": {
      "op": "MSTORE"
    },
    "12358": {
      "jump": "o",
      "op": "JUMP"
    },
    "12359": {
      "op": "JUMPDEST"
    },
    "12360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12362": {
      "op": "DUP2"
    },
    "12363": {
      "op": "MLOAD"
    },
    "12364": {
      "op": "DUP1"
    },
    "12365": {
      "op": "DUP5"
    },
    "12366": {
      "op": "MSTORE"
    },
    "12367": {
      "op": "PUSH2",
      "value": "0x305F"
    },
    "12370": {
      "op": "DUP2"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12373": {
      "op": "DUP7"
    },
    "12374": {
      "op": "ADD"
    },
    "12375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12377": {
      "op": "DUP7"
    },
    "12378": {
      "op": "ADD"
    },
    "12379": {
      "op": "PUSH2",
      "value": "0x301B"
    },
    "12382": {
      "jump": "i",
      "op": "JUMP"
    },
    "12383": {
      "op": "JUMPDEST"
    },
    "12384": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12386": {
      "op": "ADD"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12389": {
      "op": "NOT"
    },
    "12390": {
      "op": "AND"
    },
    "12391": {
      "op": "SWAP3"
    },
    "12392": {
      "op": "SWAP1"
    },
    "12393": {
      "op": "SWAP3"
    },
    "12394": {
      "op": "ADD"
    },
    "12395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12397": {
      "op": "ADD"
    },
    "12398": {
      "op": "SWAP3"
    },
    "12399": {
      "op": "SWAP2"
    },
    "12400": {
      "op": "POP"
    },
    "12401": {
      "op": "POP"
    },
    "12402": {
      "jump": "o",
      "op": "JUMP"
    },
    "12403": {
      "op": "JUMPDEST"
    },
    "12404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12406": {
      "op": "DUP2"
    },
    "12407": {
      "op": "MSTORE"
    },
    "12408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12410": {
      "op": "PUSH2",
      "value": "0x2418"
    },
    "12413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12415": {
      "op": "DUP4"
    },
    "12416": {
      "op": "ADD"
    },
    "12417": {
      "op": "DUP5"
    },
    "12418": {
      "op": "PUSH2",
      "value": "0x3047"
    },
    "12421": {
      "jump": "i",
      "op": "JUMP"
    },
    "12422": {
      "op": "JUMPDEST"
    },
    "12423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12427": {
      "op": "DUP3"
    },
    "12428": {
      "op": "DUP5"
    },
    "12429": {
      "op": "SUB"
    },
    "12430": {
      "op": "SLT"
    },
    "12431": {
      "op": "ISZERO"
    },
    "12432": {
      "op": "PUSH2",
      "value": "0x3098"
    },
    "12435": {
      "op": "JUMPI"
    },
    "12436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12438": {
      "op": "DUP1"
    },
    "12439": {
      "op": "REVERT"
    },
    "12440": {
      "op": "JUMPDEST"
    },
    "12441": {
      "op": "POP"
    },
    "12442": {
      "op": "CALLDATALOAD"
    },
    "12443": {
      "op": "SWAP2"
    },
    "12444": {
      "op": "SWAP1"
    },
    "12445": {
      "op": "POP"
    },
    "12446": {
      "jump": "o",
      "op": "JUMP"
    },
    "12447": {
      "op": "JUMPDEST"
    },
    "12448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12454": {
      "op": "SHL"
    },
    "12455": {
      "op": "SUB"
    },
    "12456": {
      "op": "DUP2"
    },
    "12457": {
      "op": "AND"
    },
    "12458": {
      "op": "DUP2"
    },
    "12459": {
      "op": "EQ"
    },
    "12460": {
      "op": "PUSH2",
      "value": "0x1EDC"
    },
    "12463": {
      "op": "JUMPI"
    },
    "12464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12466": {
      "op": "DUP1"
    },
    "12467": {
      "op": "REVERT"
    },
    "12468": {
      "op": "JUMPDEST"
    },
    "12469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12471": {
      "op": "DUP1"
    },
    "12472": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12474": {
      "op": "DUP4"
    },
    "12475": {
      "op": "DUP6"
    },
    "12476": {
      "op": "SUB"
    },
    "12477": {
      "op": "SLT"
    },
    "12478": {
      "op": "ISZERO"
    },
    "12479": {
      "op": "PUSH2",
      "value": "0x30C7"
    },
    "12482": {
      "op": "JUMPI"
    },
    "12483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12485": {
      "op": "DUP1"
    },
    "12486": {
      "op": "REVERT"
    },
    "12487": {
      "op": "JUMPDEST"
    },
    "12488": {
      "op": "DUP3"
    },
    "12489": {
      "op": "CALLDATALOAD"
    },
    "12490": {
      "op": "PUSH2",
      "value": "0x30D2"
    },
    "12493": {
      "op": "DUP2"
    },
    "12494": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "12497": {
      "jump": "i",
      "op": "JUMP"
    },
    "12498": {
      "op": "JUMPDEST"
    },
    "12499": {
      "op": "SWAP5"
    },
    "12500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12502": {
      "op": "SWAP4"
    },
    "12503": {
      "op": "SWAP1"
    },
    "12504": {
      "op": "SWAP4"
    },
    "12505": {
      "op": "ADD"
    },
    "12506": {
      "op": "CALLDATALOAD"
    },
    "12507": {
      "op": "SWAP4"
    },
    "12508": {
      "op": "POP"
    },
    "12509": {
      "op": "POP"
    },
    "12510": {
      "op": "POP"
    },
    "12511": {
      "jump": "o",
      "op": "JUMP"
    },
    "12512": {
      "op": "JUMPDEST"
    },
    "12513": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12520": {
      "op": "SHL"
    },
    "12521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12523": {
      "op": "MSTORE"
    },
    "12524": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12526": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12528": {
      "op": "MSTORE"
    },
    "12529": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12533": {
      "op": "REVERT"
    },
    "12534": {
      "op": "JUMPDEST"
    },
    "12535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12537": {
      "op": "MLOAD"
    },
    "12538": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12540": {
      "op": "DUP3"
    },
    "12541": {
      "op": "ADD"
    },
    "12542": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12544": {
      "op": "NOT"
    },
    "12545": {
      "op": "AND"
    },
    "12546": {
      "op": "DUP2"
    },
    "12547": {
      "op": "ADD"
    },
    "12548": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12557": {
      "op": "DUP2"
    },
    "12558": {
      "op": "GT"
    },
    "12559": {
      "op": "DUP3"
    },
    "12560": {
      "op": "DUP3"
    },
    "12561": {
      "op": "LT"
    },
    "12562": {
      "op": "OR"
    },
    "12563": {
      "op": "ISZERO"
    },
    "12564": {
      "op": "PUSH2",
      "value": "0x311F"
    },
    "12567": {
      "op": "JUMPI"
    },
    "12568": {
      "op": "PUSH2",
      "value": "0x311F"
    },
    "12571": {
      "op": "PUSH2",
      "value": "0x30E0"
    },
    "12574": {
      "jump": "i",
      "op": "JUMP"
    },
    "12575": {
      "op": "JUMPDEST"
    },
    "12576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12578": {
      "op": "MSTORE"
    },
    "12579": {
      "op": "SWAP2"
    },
    "12580": {
      "op": "SWAP1"
    },
    "12581": {
      "op": "POP"
    },
    "12582": {
      "jump": "o",
      "op": "JUMP"
    },
    "12583": {
      "op": "JUMPDEST"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12586": {
      "op": "DUP3"
    },
    "12587": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12589": {
      "op": "DUP4"
    },
    "12590": {
      "op": "ADD"
    },
    "12591": {
      "op": "SLT"
    },
    "12592": {
      "op": "PUSH2",
      "value": "0x3138"
    },
    "12595": {
      "op": "JUMPI"
    },
    "12596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12598": {
      "op": "DUP1"
    },
    "12599": {
      "op": "REVERT"
    },
    "12600": {
      "op": "JUMPDEST"
    },
    "12601": {
      "op": "DUP2"
    },
    "12602": {
      "op": "CALLDATALOAD"
    },
    "12603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12605": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12614": {
      "op": "DUP3"
    },
    "12615": {
      "op": "GT"
    },
    "12616": {
      "op": "ISZERO"
    },
    "12617": {
      "op": "PUSH2",
      "value": "0x3154"
    },
    "12620": {
      "op": "JUMPI"
    },
    "12621": {
      "op": "PUSH2",
      "value": "0x3154"
    },
    "12624": {
      "op": "PUSH2",
      "value": "0x30E0"
    },
    "12627": {
      "jump": "i",
      "op": "JUMP"
    },
    "12628": {
      "op": "JUMPDEST"
    },
    "12629": {
      "op": "DUP2"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12632": {
      "op": "SHL"
    },
    "12633": {
      "op": "PUSH2",
      "value": "0x3163"
    },
    "12636": {
      "op": "DUP3"
    },
    "12637": {
      "op": "DUP3"
    },
    "12638": {
      "op": "ADD"
    },
    "12639": {
      "op": "PUSH2",
      "value": "0x30F6"
    },
    "12642": {
      "jump": "i",
      "op": "JUMP"
    },
    "12643": {
      "op": "JUMPDEST"
    },
    "12644": {
      "op": "SWAP3"
    },
    "12645": {
      "op": "DUP4"
    },
    "12646": {
      "op": "MSTORE"
    },
    "12647": {
      "op": "DUP5"
    },
    "12648": {
      "op": "DUP2"
    },
    "12649": {
      "op": "ADD"
    },
    "12650": {
      "op": "DUP3"
    },
    "12651": {
      "op": "ADD"
    },
    "12652": {
      "op": "SWAP3"
    },
    "12653": {
      "op": "DUP3"
    },
    "12654": {
      "op": "DUP2"
    },
    "12655": {
      "op": "ADD"
    },
    "12656": {
      "op": "SWAP1"
    },
    "12657": {
      "op": "DUP8"
    },
    "12658": {
      "op": "DUP6"
    },
    "12659": {
      "op": "GT"
    },
    "12660": {
      "op": "ISZERO"
    },
    "12661": {
      "op": "PUSH2",
      "value": "0x317D"
    },
    "12664": {
      "op": "JUMPI"
    },
    "12665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12667": {
      "op": "DUP1"
    },
    "12668": {
      "op": "REVERT"
    },
    "12669": {
      "op": "JUMPDEST"
    },
    "12670": {
      "op": "DUP4"
    },
    "12671": {
      "op": "DUP8"
    },
    "12672": {
      "op": "ADD"
    },
    "12673": {
      "op": "SWAP3"
    },
    "12674": {
      "op": "POP"
    },
    "12675": {
      "op": "JUMPDEST"
    },
    "12676": {
      "op": "DUP5"
    },
    "12677": {
      "op": "DUP4"
    },
    "12678": {
      "op": "LT"
    },
    "12679": {
      "op": "ISZERO"
    },
    "12680": {
      "op": "PUSH2",
      "value": "0x2DCC"
    },
    "12683": {
      "op": "JUMPI"
    },
    "12684": {
      "op": "DUP3"
    },
    "12685": {
      "op": "CALLDATALOAD"
    },
    "12686": {
      "op": "DUP3"
    },
    "12687": {
      "op": "MSTORE"
    },
    "12688": {
      "op": "SWAP2"
    },
    "12689": {
      "op": "DUP4"
    },
    "12690": {
      "op": "ADD"
    },
    "12691": {
      "op": "SWAP2"
    },
    "12692": {
      "op": "SWAP1"
    },
    "12693": {
      "op": "DUP4"
    },
    "12694": {
      "op": "ADD"
    },
    "12695": {
      "op": "SWAP1"
    },
    "12696": {
      "op": "PUSH2",
      "value": "0x3183"
    },
    "12699": {
      "op": "JUMP"
    },
    "12700": {
      "op": "JUMPDEST"
    },
    "12701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12703": {
      "op": "DUP1"
    },
    "12704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12706": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12708": {
      "op": "DUP5"
    },
    "12709": {
      "op": "DUP7"
    },
    "12710": {
      "op": "SUB"
    },
    "12711": {
      "op": "SLT"
    },
    "12712": {
      "op": "ISZERO"
    },
    "12713": {
      "op": "PUSH2",
      "value": "0x31B1"
    },
    "12716": {
      "op": "JUMPI"
    },
    "12717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12719": {
      "op": "DUP1"
    },
    "12720": {
      "op": "REVERT"
    },
    "12721": {
      "op": "JUMPDEST"
    },
    "12722": {
      "op": "DUP4"
    },
    "12723": {
      "op": "CALLDATALOAD"
    },
    "12724": {
      "op": "SWAP3"
    },
    "12725": {
      "op": "POP"
    },
    "12726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12728": {
      "op": "DUP5"
    },
    "12729": {
      "op": "ADD"
    },
    "12730": {
      "op": "CALLDATALOAD"
    },
    "12731": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12740": {
      "op": "DUP1"
    },
    "12741": {
      "op": "DUP3"
    },
    "12742": {
      "op": "GT"
    },
    "12743": {
      "op": "ISZERO"
    },
    "12744": {
      "op": "PUSH2",
      "value": "0x31D0"
    },
    "12747": {
      "op": "JUMPI"
    },
    "12748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12750": {
      "op": "DUP1"
    },
    "12751": {
      "op": "REVERT"
    },
    "12752": {
      "op": "JUMPDEST"
    },
    "12753": {
      "op": "PUSH2",
      "value": "0x31DC"
    },
    "12756": {
      "op": "DUP8"
    },
    "12757": {
      "op": "DUP4"
    },
    "12758": {
      "op": "DUP9"
    },
    "12759": {
      "op": "ADD"
    },
    "12760": {
      "op": "PUSH2",
      "value": "0x3127"
    },
    "12763": {
      "jump": "i",
      "op": "JUMP"
    },
    "12764": {
      "op": "JUMPDEST"
    },
    "12765": {
      "op": "SWAP4"
    },
    "12766": {
      "op": "POP"
    },
    "12767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12769": {
      "op": "DUP7"
    },
    "12770": {
      "op": "ADD"
    },
    "12771": {
      "op": "CALLDATALOAD"
    },
    "12772": {
      "op": "SWAP2"
    },
    "12773": {
      "op": "POP"
    },
    "12774": {
      "op": "DUP1"
    },
    "12775": {
      "op": "DUP3"
    },
    "12776": {
      "op": "GT"
    },
    "12777": {
      "op": "ISZERO"
    },
    "12778": {
      "op": "PUSH2",
      "value": "0x31F2"
    },
    "12781": {
      "op": "JUMPI"
    },
    "12782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12784": {
      "op": "DUP1"
    },
    "12785": {
      "op": "REVERT"
    },
    "12786": {
      "op": "JUMPDEST"
    },
    "12787": {
      "op": "POP"
    },
    "12788": {
      "op": "PUSH2",
      "value": "0x31FF"
    },
    "12791": {
      "op": "DUP7"
    },
    "12792": {
      "op": "DUP3"
    },
    "12793": {
      "op": "DUP8"
    },
    "12794": {
      "op": "ADD"
    },
    "12795": {
      "op": "PUSH2",
      "value": "0x3127"
    },
    "12798": {
      "jump": "i",
      "op": "JUMP"
    },
    "12799": {
      "op": "JUMPDEST"
    },
    "12800": {
      "op": "SWAP2"
    },
    "12801": {
      "op": "POP"
    },
    "12802": {
      "op": "POP"
    },
    "12803": {
      "op": "SWAP3"
    },
    "12804": {
      "op": "POP"
    },
    "12805": {
      "op": "SWAP3"
    },
    "12806": {
      "op": "POP"
    },
    "12807": {
      "op": "SWAP3"
    },
    "12808": {
      "jump": "o",
      "op": "JUMP"
    },
    "12809": {
      "op": "JUMPDEST"
    },
    "12810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12812": {
      "op": "DUP1"
    },
    "12813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12815": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12817": {
      "op": "DUP5"
    },
    "12818": {
      "op": "DUP7"
    },
    "12819": {
      "op": "SUB"
    },
    "12820": {
      "op": "SLT"
    },
    "12821": {
      "op": "ISZERO"
    },
    "12822": {
      "op": "PUSH2",
      "value": "0x321E"
    },
    "12825": {
      "op": "JUMPI"
    },
    "12826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12828": {
      "op": "DUP1"
    },
    "12829": {
      "op": "REVERT"
    },
    "12830": {
      "op": "JUMPDEST"
    },
    "12831": {
      "op": "DUP4"
    },
    "12832": {
      "op": "CALLDATALOAD"
    },
    "12833": {
      "op": "PUSH2",
      "value": "0x3229"
    },
    "12836": {
      "op": "DUP2"
    },
    "12837": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "12840": {
      "jump": "i",
      "op": "JUMP"
    },
    "12841": {
      "op": "JUMPDEST"
    },
    "12842": {
      "op": "SWAP3"
    },
    "12843": {
      "op": "POP"
    },
    "12844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12846": {
      "op": "DUP5"
    },
    "12847": {
      "op": "ADD"
    },
    "12848": {
      "op": "CALLDATALOAD"
    },
    "12849": {
      "op": "PUSH2",
      "value": "0x3239"
    },
    "12852": {
      "op": "DUP2"
    },
    "12853": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "12856": {
      "jump": "i",
      "op": "JUMP"
    },
    "12857": {
      "op": "JUMPDEST"
    },
    "12858": {
      "op": "SWAP3"
    },
    "12859": {
      "op": "SWAP6"
    },
    "12860": {
      "op": "SWAP3"
    },
    "12861": {
      "op": "SWAP5"
    },
    "12862": {
      "op": "POP"
    },
    "12863": {
      "op": "POP"
    },
    "12864": {
      "op": "POP"
    },
    "12865": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12867": {
      "op": "SWAP2"
    },
    "12868": {
      "op": "SWAP1"
    },
    "12869": {
      "op": "SWAP2"
    },
    "12870": {
      "op": "ADD"
    },
    "12871": {
      "op": "CALLDATALOAD"
    },
    "12872": {
      "op": "SWAP1"
    },
    "12873": {
      "jump": "o",
      "op": "JUMP"
    },
    "12874": {
      "op": "JUMPDEST"
    },
    "12875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12877": {
      "op": "DUP1"
    },
    "12878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12882": {
      "op": "DUP5"
    },
    "12883": {
      "op": "DUP7"
    },
    "12884": {
      "op": "SUB"
    },
    "12885": {
      "op": "SLT"
    },
    "12886": {
      "op": "ISZERO"
    },
    "12887": {
      "op": "PUSH2",
      "value": "0x325F"
    },
    "12890": {
      "op": "JUMPI"
    },
    "12891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12893": {
      "op": "DUP1"
    },
    "12894": {
      "op": "REVERT"
    },
    "12895": {
      "op": "JUMPDEST"
    },
    "12896": {
      "op": "DUP4"
    },
    "12897": {
      "op": "CALLDATALOAD"
    },
    "12898": {
      "op": "PUSH2",
      "value": "0x326A"
    },
    "12901": {
      "op": "DUP2"
    },
    "12902": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "12905": {
      "jump": "i",
      "op": "JUMP"
    },
    "12906": {
      "op": "JUMPDEST"
    },
    "12907": {
      "op": "SWAP3"
    },
    "12908": {
      "op": "POP"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12911": {
      "op": "DUP5"
    },
    "12912": {
      "op": "ADD"
    },
    "12913": {
      "op": "CALLDATALOAD"
    },
    "12914": {
      "op": "SWAP2"
    },
    "12915": {
      "op": "POP"
    },
    "12916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12918": {
      "op": "DUP5"
    },
    "12919": {
      "op": "ADD"
    },
    "12920": {
      "op": "CALLDATALOAD"
    },
    "12921": {
      "op": "PUSH2",
      "value": "0x3281"
    },
    "12924": {
      "op": "DUP2"
    },
    "12925": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "12928": {
      "jump": "i",
      "op": "JUMP"
    },
    "12929": {
      "op": "JUMPDEST"
    },
    "12930": {
      "op": "DUP1"
    },
    "12931": {
      "op": "SWAP2"
    },
    "12932": {
      "op": "POP"
    },
    "12933": {
      "op": "POP"
    },
    "12934": {
      "op": "SWAP3"
    },
    "12935": {
      "op": "POP"
    },
    "12936": {
      "op": "SWAP3"
    },
    "12937": {
      "op": "POP"
    },
    "12938": {
      "op": "SWAP3"
    },
    "12939": {
      "jump": "o",
      "op": "JUMP"
    },
    "12940": {
      "op": "JUMPDEST"
    },
    "12941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12943": {
      "op": "DUP1"
    },
    "12944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12946": {
      "op": "DUP4"
    },
    "12947": {
      "op": "DUP6"
    },
    "12948": {
      "op": "SUB"
    },
    "12949": {
      "op": "SLT"
    },
    "12950": {
      "op": "ISZERO"
    },
    "12951": {
      "op": "PUSH2",
      "value": "0x329F"
    },
    "12954": {
      "op": "JUMPI"
    },
    "12955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12957": {
      "op": "DUP1"
    },
    "12958": {
      "op": "REVERT"
    },
    "12959": {
      "op": "JUMPDEST"
    },
    "12960": {
      "op": "DUP3"
    },
    "12961": {
      "op": "CALLDATALOAD"
    },
    "12962": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12971": {
      "op": "DUP1"
    },
    "12972": {
      "op": "DUP3"
    },
    "12973": {
      "op": "GT"
    },
    "12974": {
      "op": "ISZERO"
    },
    "12975": {
      "op": "PUSH2",
      "value": "0x32B7"
    },
    "12978": {
      "op": "JUMPI"
    },
    "12979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12981": {
      "op": "DUP1"
    },
    "12982": {
      "op": "REVERT"
    },
    "12983": {
      "op": "JUMPDEST"
    },
    "12984": {
      "op": "DUP2"
    },
    "12985": {
      "op": "DUP6"
    },
    "12986": {
      "op": "ADD"
    },
    "12987": {
      "op": "SWAP2"
    },
    "12988": {
      "op": "POP"
    },
    "12989": {
      "op": "DUP6"
    },
    "12990": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12992": {
      "op": "DUP4"
    },
    "12993": {
      "op": "ADD"
    },
    "12994": {
      "op": "SLT"
    },
    "12995": {
      "op": "PUSH2",
      "value": "0x32CB"
    },
    "12998": {
      "op": "JUMPI"
    },
    "12999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13001": {
      "op": "DUP1"
    },
    "13002": {
      "op": "REVERT"
    },
    "13003": {
      "op": "JUMPDEST"
    },
    "13004": {
      "op": "DUP2"
    },
    "13005": {
      "op": "CALLDATALOAD"
    },
    "13006": {
      "op": "DUP2"
    },
    "13007": {
      "op": "DUP2"
    },
    "13008": {
      "op": "GT"
    },
    "13009": {
      "op": "ISZERO"
    },
    "13010": {
      "op": "PUSH2",
      "value": "0x32DA"
    },
    "13013": {
      "op": "JUMPI"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13016": {
      "op": "DUP1"
    },
    "13017": {
      "op": "REVERT"
    },
    "13018": {
      "op": "JUMPDEST"
    },
    "13019": {
      "op": "DUP7"
    },
    "13020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13022": {
      "op": "DUP3"
    },
    "13023": {
      "op": "DUP6"
    },
    "13024": {
      "op": "ADD"
    },
    "13025": {
      "op": "ADD"
    },
    "13026": {
      "op": "GT"
    },
    "13027": {
      "op": "ISZERO"
    },
    "13028": {
      "op": "PUSH2",
      "value": "0x32EC"
    },
    "13031": {
      "op": "JUMPI"
    },
    "13032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13034": {
      "op": "DUP1"
    },
    "13035": {
      "op": "REVERT"
    },
    "13036": {
      "op": "JUMPDEST"
    },
    "13037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13039": {
      "op": "SWAP3"
    },
    "13040": {
      "op": "SWAP1"
    },
    "13041": {
      "op": "SWAP3"
    },
    "13042": {
      "op": "ADD"
    },
    "13043": {
      "op": "SWAP7"
    },
    "13044": {
      "op": "SWAP2"
    },
    "13045": {
      "op": "SWAP6"
    },
    "13046": {
      "op": "POP"
    },
    "13047": {
      "op": "SWAP1"
    },
    "13048": {
      "op": "SWAP4"
    },
    "13049": {
      "op": "POP"
    },
    "13050": {
      "op": "POP"
    },
    "13051": {
      "op": "POP"
    },
    "13052": {
      "op": "POP"
    },
    "13053": {
      "jump": "o",
      "op": "JUMP"
    },
    "13054": {
      "op": "JUMPDEST"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13059": {
      "op": "DUP3"
    },
    "13060": {
      "op": "DUP5"
    },
    "13061": {
      "op": "SUB"
    },
    "13062": {
      "op": "SLT"
    },
    "13063": {
      "op": "ISZERO"
    },
    "13064": {
      "op": "PUSH2",
      "value": "0x3310"
    },
    "13067": {
      "op": "JUMPI"
    },
    "13068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13070": {
      "op": "DUP1"
    },
    "13071": {
      "op": "REVERT"
    },
    "13072": {
      "op": "JUMPDEST"
    },
    "13073": {
      "op": "DUP2"
    },
    "13074": {
      "op": "CALLDATALOAD"
    },
    "13075": {
      "op": "PUSH2",
      "value": "0x2418"
    },
    "13078": {
      "op": "DUP2"
    },
    "13079": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "13082": {
      "jump": "i",
      "op": "JUMP"
    },
    "13083": {
      "op": "JUMPDEST"
    },
    "13084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13086": {
      "op": "DUP1"
    },
    "13087": {
      "op": "DUP3"
    },
    "13088": {
      "op": "MSTORE"
    },
    "13089": {
      "op": "DUP3"
    },
    "13090": {
      "op": "MLOAD"
    },
    "13091": {
      "op": "DUP3"
    },
    "13092": {
      "op": "DUP3"
    },
    "13093": {
      "op": "ADD"
    },
    "13094": {
      "op": "DUP2"
    },
    "13095": {
      "op": "SWAP1"
    },
    "13096": {
      "op": "MSTORE"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13099": {
      "op": "SWAP2"
    },
    "13100": {
      "op": "SWAP1"
    },
    "13101": {
      "op": "DUP5"
    },
    "13102": {
      "op": "DUP3"
    },
    "13103": {
      "op": "ADD"
    },
    "13104": {
      "op": "SWAP1"
    },
    "13105": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13107": {
      "op": "DUP6"
    },
    "13108": {
      "op": "ADD"
    },
    "13109": {
      "op": "SWAP1"
    },
    "13110": {
      "op": "DUP5"
    },
    "13111": {
      "op": "JUMPDEST"
    },
    "13112": {
      "op": "DUP2"
    },
    "13113": {
      "op": "DUP2"
    },
    "13114": {
      "op": "LT"
    },
    "13115": {
      "op": "ISZERO"
    },
    "13116": {
      "op": "PUSH2",
      "value": "0x3353"
    },
    "13119": {
      "op": "JUMPI"
    },
    "13120": {
      "op": "DUP4"
    },
    "13121": {
      "op": "MLOAD"
    },
    "13122": {
      "op": "DUP4"
    },
    "13123": {
      "op": "MSTORE"
    },
    "13124": {
      "op": "SWAP3"
    },
    "13125": {
      "op": "DUP5"
    },
    "13126": {
      "op": "ADD"
    },
    "13127": {
      "op": "SWAP3"
    },
    "13128": {
      "op": "SWAP2"
    },
    "13129": {
      "op": "DUP5"
    },
    "13130": {
      "op": "ADD"
    },
    "13131": {
      "op": "SWAP2"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13134": {
      "op": "ADD"
    },
    "13135": {
      "op": "PUSH2",
      "value": "0x3337"
    },
    "13138": {
      "op": "JUMP"
    },
    "13139": {
      "op": "JUMPDEST"
    },
    "13140": {
      "op": "POP"
    },
    "13141": {
      "op": "SWAP1"
    },
    "13142": {
      "op": "SWAP7"
    },
    "13143": {
      "op": "SWAP6"
    },
    "13144": {
      "op": "POP"
    },
    "13145": {
      "op": "POP"
    },
    "13146": {
      "op": "POP"
    },
    "13147": {
      "op": "POP"
    },
    "13148": {
      "op": "POP"
    },
    "13149": {
      "op": "POP"
    },
    "13150": {
      "jump": "o",
      "op": "JUMP"
    },
    "13151": {
      "op": "JUMPDEST"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13154": {
      "op": "DUP1"
    },
    "13155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13157": {
      "op": "DUP1"
    },
    "13158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13160": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13162": {
      "op": "DUP7"
    },
    "13163": {
      "op": "DUP9"
    },
    "13164": {
      "op": "SUB"
    },
    "13165": {
      "op": "SLT"
    },
    "13166": {
      "op": "ISZERO"
    },
    "13167": {
      "op": "PUSH2",
      "value": "0x3377"
    },
    "13170": {
      "op": "JUMPI"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13173": {
      "op": "DUP1"
    },
    "13174": {
      "op": "REVERT"
    },
    "13175": {
      "op": "JUMPDEST"
    },
    "13176": {
      "op": "DUP6"
    },
    "13177": {
      "op": "CALLDATALOAD"
    },
    "13178": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13187": {
      "op": "DUP1"
    },
    "13188": {
      "op": "DUP3"
    },
    "13189": {
      "op": "GT"
    },
    "13190": {
      "op": "ISZERO"
    },
    "13191": {
      "op": "PUSH2",
      "value": "0x338F"
    },
    "13194": {
      "op": "JUMPI"
    },
    "13195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13197": {
      "op": "DUP1"
    },
    "13198": {
      "op": "REVERT"
    },
    "13199": {
      "op": "JUMPDEST"
    },
    "13200": {
      "op": "DUP2"
    },
    "13201": {
      "op": "DUP9"
    },
    "13202": {
      "op": "ADD"
    },
    "13203": {
      "op": "SWAP2"
    },
    "13204": {
      "op": "POP"
    },
    "13205": {
      "op": "DUP9"
    },
    "13206": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13208": {
      "op": "DUP4"
    },
    "13209": {
      "op": "ADD"
    },
    "13210": {
      "op": "SLT"
    },
    "13211": {
      "op": "PUSH2",
      "value": "0x33A3"
    },
    "13214": {
      "op": "JUMPI"
    },
    "13215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13217": {
      "op": "DUP1"
    },
    "13218": {
      "op": "REVERT"
    },
    "13219": {
      "op": "JUMPDEST"
    },
    "13220": {
      "op": "DUP2"
    },
    "13221": {
      "op": "CALLDATALOAD"
    },
    "13222": {
      "op": "DUP2"
    },
    "13223": {
      "op": "DUP2"
    },
    "13224": {
      "op": "GT"
    },
    "13225": {
      "op": "ISZERO"
    },
    "13226": {
      "op": "PUSH2",
      "value": "0x33B2"
    },
    "13229": {
      "op": "JUMPI"
    },
    "13230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13232": {
      "op": "DUP1"
    },
    "13233": {
      "op": "REVERT"
    },
    "13234": {
      "op": "JUMPDEST"
    },
    "13235": {
      "op": "DUP10"
    },
    "13236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13238": {
      "op": "DUP3"
    },
    "13239": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13241": {
      "op": "SHL"
    },
    "13242": {
      "op": "DUP6"
    },
    "13243": {
      "op": "ADD"
    },
    "13244": {
      "op": "ADD"
    },
    "13245": {
      "op": "GT"
    },
    "13246": {
      "op": "ISZERO"
    },
    "13247": {
      "op": "PUSH2",
      "value": "0x33C7"
    },
    "13250": {
      "op": "JUMPI"
    },
    "13251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13253": {
      "op": "DUP1"
    },
    "13254": {
      "op": "REVERT"
    },
    "13255": {
      "op": "JUMPDEST"
    },
    "13256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13258": {
      "op": "SWAP3"
    },
    "13259": {
      "op": "DUP4"
    },
    "13260": {
      "op": "ADD"
    },
    "13261": {
      "op": "SWAP8"
    },
    "13262": {
      "op": "POP"
    },
    "13263": {
      "op": "SWAP6"
    },
    "13264": {
      "op": "POP"
    },
    "13265": {
      "op": "SWAP1"
    },
    "13266": {
      "op": "DUP8"
    },
    "13267": {
      "op": "ADD"
    },
    "13268": {
      "op": "CALLDATALOAD"
    },
    "13269": {
      "op": "SWAP4"
    },
    "13270": {
      "op": "POP"
    },
    "13271": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13273": {
      "op": "DUP8"
    },
    "13274": {
      "op": "ADD"
    },
    "13275": {
      "op": "CALLDATALOAD"
    },
    "13276": {
      "op": "SWAP1"
    },
    "13277": {
      "op": "DUP1"
    },
    "13278": {
      "op": "DUP3"
    },
    "13279": {
      "op": "GT"
    },
    "13280": {
      "op": "ISZERO"
    },
    "13281": {
      "op": "PUSH2",
      "value": "0x33E9"
    },
    "13284": {
      "op": "JUMPI"
    },
    "13285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13287": {
      "op": "DUP1"
    },
    "13288": {
      "op": "REVERT"
    },
    "13289": {
      "op": "JUMPDEST"
    },
    "13290": {
      "op": "PUSH2",
      "value": "0x33F5"
    },
    "13293": {
      "op": "DUP10"
    },
    "13294": {
      "op": "DUP4"
    },
    "13295": {
      "op": "DUP11"
    },
    "13296": {
      "op": "ADD"
    },
    "13297": {
      "op": "PUSH2",
      "value": "0x3127"
    },
    "13300": {
      "jump": "i",
      "op": "JUMP"
    },
    "13301": {
      "op": "JUMPDEST"
    },
    "13302": {
      "op": "SWAP4"
    },
    "13303": {
      "op": "POP"
    },
    "13304": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13306": {
      "op": "DUP9"
    },
    "13307": {
      "op": "ADD"
    },
    "13308": {
      "op": "CALLDATALOAD"
    },
    "13309": {
      "op": "SWAP2"
    },
    "13310": {
      "op": "POP"
    },
    "13311": {
      "op": "DUP1"
    },
    "13312": {
      "op": "DUP3"
    },
    "13313": {
      "op": "GT"
    },
    "13314": {
      "op": "ISZERO"
    },
    "13315": {
      "op": "PUSH2",
      "value": "0x340B"
    },
    "13318": {
      "op": "JUMPI"
    },
    "13319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13321": {
      "op": "DUP1"
    },
    "13322": {
      "op": "REVERT"
    },
    "13323": {
      "op": "JUMPDEST"
    },
    "13324": {
      "op": "POP"
    },
    "13325": {
      "op": "PUSH2",
      "value": "0x3418"
    },
    "13328": {
      "op": "DUP9"
    },
    "13329": {
      "op": "DUP3"
    },
    "13330": {
      "op": "DUP10"
    },
    "13331": {
      "op": "ADD"
    },
    "13332": {
      "op": "PUSH2",
      "value": "0x3127"
    },
    "13335": {
      "jump": "i",
      "op": "JUMP"
    },
    "13336": {
      "op": "JUMPDEST"
    },
    "13337": {
      "op": "SWAP2"
    },
    "13338": {
      "op": "POP"
    },
    "13339": {
      "op": "POP"
    },
    "13340": {
      "op": "SWAP3"
    },
    "13341": {
      "op": "SWAP6"
    },
    "13342": {
      "op": "POP"
    },
    "13343": {
      "op": "SWAP3"
    },
    "13344": {
      "op": "SWAP6"
    },
    "13345": {
      "op": "SWAP1"
    },
    "13346": {
      "op": "SWAP4"
    },
    "13347": {
      "op": "POP"
    },
    "13348": {
      "jump": "o",
      "op": "JUMP"
    },
    "13349": {
      "op": "JUMPDEST"
    },
    "13350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13352": {
      "op": "DUP1"
    },
    "13353": {
      "op": "DUP3"
    },
    "13354": {
      "op": "MSTORE"
    },
    "13355": {
      "op": "DUP3"
    },
    "13356": {
      "op": "MLOAD"
    },
    "13357": {
      "op": "DUP3"
    },
    "13358": {
      "op": "DUP3"
    },
    "13359": {
      "op": "ADD"
    },
    "13360": {
      "op": "DUP2"
    },
    "13361": {
      "op": "SWAP1"
    },
    "13362": {
      "op": "MSTORE"
    },
    "13363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13365": {
      "op": "SWAP2"
    },
    "13366": {
      "op": "SWAP1"
    },
    "13367": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13369": {
      "op": "SWAP1"
    },
    "13370": {
      "op": "DUP2"
    },
    "13371": {
      "op": "DUP6"
    },
    "13372": {
      "op": "ADD"
    },
    "13373": {
      "op": "SWAP1"
    },
    "13374": {
      "op": "DUP7"
    },
    "13375": {
      "op": "DUP5"
    },
    "13376": {
      "op": "ADD"
    },
    "13377": {
      "op": "DUP6"
    },
    "13378": {
      "op": "JUMPDEST"
    },
    "13379": {
      "op": "DUP3"
    },
    "13380": {
      "op": "DUP2"
    },
    "13381": {
      "op": "LT"
    },
    "13382": {
      "op": "ISZERO"
    },
    "13383": {
      "op": "PUSH2",
      "value": "0x3467"
    },
    "13386": {
      "op": "JUMPI"
    },
    "13387": {
      "op": "DUP2"
    },
    "13388": {
      "op": "MLOAD"
    },
    "13389": {
      "op": "DUP1"
    },
    "13390": {
      "op": "MLOAD"
    },
    "13391": {
      "op": "DUP6"
    },
    "13392": {
      "op": "MSTORE"
    },
    "13393": {
      "op": "DUP7"
    },
    "13394": {
      "op": "ADD"
    },
    "13395": {
      "op": "MLOAD"
    },
    "13396": {
      "op": "DUP7"
    },
    "13397": {
      "op": "DUP6"
    },
    "13398": {
      "op": "ADD"
    },
    "13399": {
      "op": "MSTORE"
    },
    "13400": {
      "op": "SWAP3"
    },
    "13401": {
      "op": "DUP5"
    },
    "13402": {
      "op": "ADD"
    },
    "13403": {
      "op": "SWAP3"
    },
    "13404": {
      "op": "SWAP1"
    },
    "13405": {
      "op": "DUP6"
    },
    "13406": {
      "op": "ADD"
    },
    "13407": {
      "op": "SWAP1"
    },
    "13408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13410": {
      "op": "ADD"
    },
    "13411": {
      "op": "PUSH2",
      "value": "0x3442"
    },
    "13414": {
      "op": "JUMP"
    },
    "13415": {
      "op": "JUMPDEST"
    },
    "13416": {
      "op": "POP"
    },
    "13417": {
      "op": "SWAP2"
    },
    "13418": {
      "op": "SWAP8"
    },
    "13419": {
      "op": "SWAP7"
    },
    "13420": {
      "op": "POP"
    },
    "13421": {
      "op": "POP"
    },
    "13422": {
      "op": "POP"
    },
    "13423": {
      "op": "POP"
    },
    "13424": {
      "op": "POP"
    },
    "13425": {
      "op": "POP"
    },
    "13426": {
      "op": "POP"
    },
    "13427": {
      "jump": "o",
      "op": "JUMP"
    },
    "13428": {
      "op": "JUMPDEST"
    },
    "13429": {
      "op": "DUP1"
    },
    "13430": {
      "op": "ISZERO"
    },
    "13431": {
      "op": "ISZERO"
    },
    "13432": {
      "op": "DUP2"
    },
    "13433": {
      "op": "EQ"
    },
    "13434": {
      "op": "PUSH2",
      "value": "0x1EDC"
    },
    "13437": {
      "op": "JUMPI"
    },
    "13438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13440": {
      "op": "DUP1"
    },
    "13441": {
      "op": "REVERT"
    },
    "13442": {
      "op": "JUMPDEST"
    },
    "13443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13445": {
      "op": "DUP1"
    },
    "13446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13448": {
      "op": "DUP4"
    },
    "13449": {
      "op": "DUP6"
    },
    "13450": {
      "op": "SUB"
    },
    "13451": {
      "op": "SLT"
    },
    "13452": {
      "op": "ISZERO"
    },
    "13453": {
      "op": "PUSH2",
      "value": "0x3495"
    },
    "13456": {
      "op": "JUMPI"
    },
    "13457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13459": {
      "op": "DUP1"
    },
    "13460": {
      "op": "REVERT"
    },
    "13461": {
      "op": "JUMPDEST"
    },
    "13462": {
      "op": "DUP3"
    },
    "13463": {
      "op": "CALLDATALOAD"
    },
    "13464": {
      "op": "PUSH2",
      "value": "0x34A0"
    },
    "13467": {
      "op": "DUP2"
    },
    "13468": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "13471": {
      "jump": "i",
      "op": "JUMP"
    },
    "13472": {
      "op": "JUMPDEST"
    },
    "13473": {
      "op": "SWAP2"
    },
    "13474": {
      "op": "POP"
    },
    "13475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13477": {
      "op": "DUP4"
    },
    "13478": {
      "op": "ADD"
    },
    "13479": {
      "op": "CALLDATALOAD"
    },
    "13480": {
      "op": "PUSH2",
      "value": "0x34B0"
    },
    "13483": {
      "op": "DUP2"
    },
    "13484": {
      "op": "PUSH2",
      "value": "0x3474"
    },
    "13487": {
      "jump": "i",
      "op": "JUMP"
    },
    "13488": {
      "op": "JUMPDEST"
    },
    "13489": {
      "op": "DUP1"
    },
    "13490": {
      "op": "SWAP2"
    },
    "13491": {
      "op": "POP"
    },
    "13492": {
      "op": "POP"
    },
    "13493": {
      "op": "SWAP3"
    },
    "13494": {
      "op": "POP"
    },
    "13495": {
      "op": "SWAP3"
    },
    "13496": {
      "op": "SWAP1"
    },
    "13497": {
      "op": "POP"
    },
    "13498": {
      "jump": "o",
      "op": "JUMP"
    },
    "13499": {
      "op": "JUMPDEST"
    },
    "13500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13502": {
      "op": "DUP1"
    },
    "13503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13505": {
      "op": "DUP1"
    },
    "13506": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13508": {
      "op": "DUP6"
    },
    "13509": {
      "op": "DUP8"
    },
    "13510": {
      "op": "SUB"
    },
    "13511": {
      "op": "SLT"
    },
    "13512": {
      "op": "ISZERO"
    },
    "13513": {
      "op": "PUSH2",
      "value": "0x34D1"
    },
    "13516": {
      "op": "JUMPI"
    },
    "13517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13519": {
      "op": "DUP1"
    },
    "13520": {
      "op": "REVERT"
    },
    "13521": {
      "op": "JUMPDEST"
    },
    "13522": {
      "op": "DUP5"
    },
    "13523": {
      "op": "CALLDATALOAD"
    },
    "13524": {
      "op": "PUSH2",
      "value": "0x34DC"
    },
    "13527": {
      "op": "DUP2"
    },
    "13528": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "13531": {
      "jump": "i",
      "op": "JUMP"
    },
    "13532": {
      "op": "JUMPDEST"
    },
    "13533": {
      "op": "SWAP4"
    },
    "13534": {
      "op": "POP"
    },
    "13535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13537": {
      "op": "DUP6"
    },
    "13538": {
      "op": "DUP2"
    },
    "13539": {
      "op": "ADD"
    },
    "13540": {
      "op": "CALLDATALOAD"
    },
    "13541": {
      "op": "PUSH2",
      "value": "0x34ED"
    },
    "13544": {
      "op": "DUP2"
    },
    "13545": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "13548": {
      "jump": "i",
      "op": "JUMP"
    },
    "13549": {
      "op": "JUMPDEST"
    },
    "13550": {
      "op": "SWAP4"
    },
    "13551": {
      "op": "POP"
    },
    "13552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13554": {
      "op": "DUP7"
    },
    "13555": {
      "op": "ADD"
    },
    "13556": {
      "op": "CALLDATALOAD"
    },
    "13557": {
      "op": "SWAP3"
    },
    "13558": {
      "op": "POP"
    },
    "13559": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13561": {
      "op": "DUP7"
    },
    "13562": {
      "op": "ADD"
    },
    "13563": {
      "op": "CALLDATALOAD"
    },
    "13564": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13573": {
      "op": "DUP1"
    },
    "13574": {
      "op": "DUP3"
    },
    "13575": {
      "op": "GT"
    },
    "13576": {
      "op": "ISZERO"
    },
    "13577": {
      "op": "PUSH2",
      "value": "0x3511"
    },
    "13580": {
      "op": "JUMPI"
    },
    "13581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13583": {
      "op": "DUP1"
    },
    "13584": {
      "op": "REVERT"
    },
    "13585": {
      "op": "JUMPDEST"
    },
    "13586": {
      "op": "DUP2"
    },
    "13587": {
      "op": "DUP9"
    },
    "13588": {
      "op": "ADD"
    },
    "13589": {
      "op": "SWAP2"
    },
    "13590": {
      "op": "POP"
    },
    "13591": {
      "op": "DUP9"
    },
    "13592": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13594": {
      "op": "DUP4"
    },
    "13595": {
      "op": "ADD"
    },
    "13596": {
      "op": "SLT"
    },
    "13597": {
      "op": "PUSH2",
      "value": "0x3525"
    },
    "13600": {
      "op": "JUMPI"
    },
    "13601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13603": {
      "op": "DUP1"
    },
    "13604": {
      "op": "REVERT"
    },
    "13605": {
      "op": "JUMPDEST"
    },
    "13606": {
      "op": "DUP2"
    },
    "13607": {
      "op": "CALLDATALOAD"
    },
    "13608": {
      "op": "DUP2"
    },
    "13609": {
      "op": "DUP2"
    },
    "13610": {
      "op": "GT"
    },
    "13611": {
      "op": "ISZERO"
    },
    "13612": {
      "op": "PUSH2",
      "value": "0x3537"
    },
    "13615": {
      "op": "JUMPI"
    },
    "13616": {
      "op": "PUSH2",
      "value": "0x3537"
    },
    "13619": {
      "op": "PUSH2",
      "value": "0x30E0"
    },
    "13622": {
      "jump": "i",
      "op": "JUMP"
    },
    "13623": {
      "op": "JUMPDEST"
    },
    "13624": {
      "op": "PUSH2",
      "value": "0x3549"
    },
    "13627": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13629": {
      "op": "DUP3"
    },
    "13630": {
      "op": "ADD"
    },
    "13631": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13633": {
      "op": "NOT"
    },
    "13634": {
      "op": "AND"
    },
    "13635": {
      "op": "DUP6"
    },
    "13636": {
      "op": "ADD"
    },
    "13637": {
      "op": "PUSH2",
      "value": "0x30F6"
    },
    "13640": {
      "jump": "i",
      "op": "JUMP"
    },
    "13641": {
      "op": "JUMPDEST"
    },
    "13642": {
      "op": "SWAP2"
    },
    "13643": {
      "op": "POP"
    },
    "13644": {
      "op": "DUP1"
    },
    "13645": {
      "op": "DUP3"
    },
    "13646": {
      "op": "MSTORE"
    },
    "13647": {
      "op": "DUP10"
    },
    "13648": {
      "op": "DUP5"
    },
    "13649": {
      "op": "DUP3"
    },
    "13650": {
      "op": "DUP6"
    },
    "13651": {
      "op": "ADD"
    },
    "13652": {
      "op": "ADD"
    },
    "13653": {
      "op": "GT"
    },
    "13654": {
      "op": "ISZERO"
    },
    "13655": {
      "op": "PUSH2",
      "value": "0x355F"
    },
    "13658": {
      "op": "JUMPI"
    },
    "13659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13661": {
      "op": "DUP1"
    },
    "13662": {
      "op": "REVERT"
    },
    "13663": {
      "op": "JUMPDEST"
    },
    "13664": {
      "op": "DUP1"
    },
    "13665": {
      "op": "DUP5"
    },
    "13666": {
      "op": "DUP5"
    },
    "13667": {
      "op": "ADD"
    },
    "13668": {
      "op": "DUP6"
    },
    "13669": {
      "op": "DUP5"
    },
    "13670": {
      "op": "ADD"
    },
    "13671": {
      "op": "CALLDATACOPY"
    },
    "13672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13674": {
      "op": "DUP5"
    },
    "13675": {
      "op": "DUP3"
    },
    "13676": {
      "op": "DUP5"
    },
    "13677": {
      "op": "ADD"
    },
    "13678": {
      "op": "ADD"
    },
    "13679": {
      "op": "MSTORE"
    },
    "13680": {
      "op": "POP"
    },
    "13681": {
      "op": "DUP1"
    },
    "13682": {
      "op": "SWAP4"
    },
    "13683": {
      "op": "POP"
    },
    "13684": {
      "op": "POP"
    },
    "13685": {
      "op": "POP"
    },
    "13686": {
      "op": "POP"
    },
    "13687": {
      "op": "SWAP3"
    },
    "13688": {
      "op": "SWAP6"
    },
    "13689": {
      "op": "SWAP2"
    },
    "13690": {
      "op": "SWAP5"
    },
    "13691": {
      "op": "POP"
    },
    "13692": {
      "op": "SWAP3"
    },
    "13693": {
      "op": "POP"
    },
    "13694": {
      "jump": "o",
      "op": "JUMP"
    },
    "13695": {
      "op": "JUMPDEST"
    },
    "13696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13698": {
      "op": "DUP1"
    },
    "13699": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13701": {
      "op": "DUP4"
    },
    "13702": {
      "op": "DUP6"
    },
    "13703": {
      "op": "SUB"
    },
    "13704": {
      "op": "SLT"
    },
    "13705": {
      "op": "ISZERO"
    },
    "13706": {
      "op": "PUSH2",
      "value": "0x3592"
    },
    "13709": {
      "op": "JUMPI"
    },
    "13710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13712": {
      "op": "DUP1"
    },
    "13713": {
      "op": "REVERT"
    },
    "13714": {
      "op": "JUMPDEST"
    },
    "13715": {
      "op": "DUP3"
    },
    "13716": {
      "op": "CALLDATALOAD"
    },
    "13717": {
      "op": "PUSH2",
      "value": "0x359D"
    },
    "13720": {
      "op": "DUP2"
    },
    "13721": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "13724": {
      "jump": "i",
      "op": "JUMP"
    },
    "13725": {
      "op": "JUMPDEST"
    },
    "13726": {
      "op": "SWAP2"
    },
    "13727": {
      "op": "POP"
    },
    "13728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13730": {
      "op": "DUP4"
    },
    "13731": {
      "op": "ADD"
    },
    "13732": {
      "op": "CALLDATALOAD"
    },
    "13733": {
      "op": "PUSH2",
      "value": "0x34B0"
    },
    "13736": {
      "op": "DUP2"
    },
    "13737": {
      "op": "PUSH2",
      "value": "0x309F"
    },
    "13740": {
      "jump": "i",
      "op": "JUMP"
    },
    "13741": {
      "op": "JUMPDEST"
    },
    "13742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13744": {
      "op": "DUP2"
    },
    "13745": {
      "op": "DUP2"
    },
    "13746": {
      "op": "SHR"
    },
    "13747": {
      "op": "SWAP1"
    },
    "13748": {
      "op": "DUP3"
    },
    "13749": {
      "op": "AND"
    },
    "13750": {
      "op": "DUP1"
    },
    "13751": {
      "op": "PUSH2",
      "value": "0x35C1"
    },
    "13754": {
      "op": "JUMPI"
    },
    "13755": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13757": {
      "op": "DUP3"
    },
    "13758": {
      "op": "AND"
    },
    "13759": {
      "op": "SWAP2"
    },
    "13760": {
      "op": "POP"
    },
    "13761": {
      "op": "JUMPDEST"
    },
    "13762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13764": {
      "op": "DUP3"
    },
    "13765": {
      "op": "LT"
    },
    "13766": {
      "op": "DUP2"
    },
    "13767": {
      "op": "SUB"
    },
    "13768": {
      "op": "PUSH2",
      "value": "0x35E1"
    },
    "13771": {
      "op": "JUMPI"
    },
    "13772": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13777": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13779": {
      "op": "SHL"
    },
    "13780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13782": {
      "op": "MSTORE"
    },
    "13783": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13787": {
      "op": "MSTORE"
    },
    "13788": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13792": {
      "op": "REVERT"
    },
    "13793": {
      "op": "JUMPDEST"
    },
    "13794": {
      "op": "POP"
    },
    "13795": {
      "op": "SWAP2"
    },
    "13796": {
      "op": "SWAP1"
    },
    "13797": {
      "op": "POP"
    },
    "13798": {
      "jump": "o",
      "op": "JUMP"
    },
    "13799": {
      "op": "JUMPDEST"
    },
    "13800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13802": {
      "op": "DUP1"
    },
    "13803": {
      "op": "DUP3"
    },
    "13804": {
      "op": "MSTORE"
    },
    "13805": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13807": {
      "op": "SWAP1"
    },
    "13808": {
      "op": "DUP3"
    },
    "13809": {
      "op": "ADD"
    },
    "13810": {
      "op": "MSTORE"
    },
    "13811": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13828": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13830": {
      "op": "SHL"
    },
    "13831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13833": {
      "op": "DUP3"
    },
    "13834": {
      "op": "ADD"
    },
    "13835": {
      "op": "MSTORE"
    },
    "13836": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13838": {
      "op": "ADD"
    },
    "13839": {
      "op": "SWAP1"
    },
    "13840": {
      "jump": "o",
      "op": "JUMP"
    },
    "13841": {
      "op": "JUMPDEST"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13844": {
      "op": "DUP1"
    },
    "13845": {
      "op": "DUP3"
    },
    "13846": {
      "op": "MSTORE"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "13849": {
      "op": "SWAP1"
    },
    "13850": {
      "op": "DUP3"
    },
    "13851": {
      "op": "ADD"
    },
    "13852": {
      "op": "MSTORE"
    },
    "13853": {
      "op": "PUSH32",
      "value": "0x7175616E74697479206D7573742062652031206F722035206F72203130000000"
    },
    "13886": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13888": {
      "op": "DUP3"
    },
    "13889": {
      "op": "ADD"
    },
    "13890": {
      "op": "MSTORE"
    },
    "13891": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13893": {
      "op": "ADD"
    },
    "13894": {
      "op": "SWAP1"
    },
    "13895": {
      "jump": "o",
      "op": "JUMP"
    },
    "13896": {
      "op": "JUMPDEST"
    },
    "13897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13899": {
      "op": "DUP1"
    },
    "13900": {
      "op": "DUP3"
    },
    "13901": {
      "op": "MSTORE"
    },
    "13902": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "13904": {
      "op": "SWAP1"
    },
    "13905": {
      "op": "DUP3"
    },
    "13906": {
      "op": "ADD"
    },
    "13907": {
      "op": "MSTORE"
    },
    "13908": {
      "op": "PUSH32",
      "value": "0x4C656E677468206F662074686520616D6F756E74206F6620746865206E667420"
    },
    "13941": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13943": {
      "op": "DUP3"
    },
    "13944": {
      "op": "ADD"
    },
    "13945": {
      "op": "MSTORE"
    },
    "13946": {
      "op": "PUSH20",
      "value": "0x6D75737420626520657175616C20746F20717479"
    },
    "13967": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13969": {
      "op": "SHL"
    },
    "13970": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13972": {
      "op": "DUP3"
    },
    "13973": {
      "op": "ADD"
    },
    "13974": {
      "op": "MSTORE"
    },
    "13975": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13977": {
      "op": "ADD"
    },
    "13978": {
      "op": "SWAP1"
    },
    "13979": {
      "jump": "o",
      "op": "JUMP"
    },
    "13980": {
      "op": "JUMPDEST"
    },
    "13981": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13986": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13988": {
      "op": "SHL"
    },
    "13989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13991": {
      "op": "MSTORE"
    },
    "13992": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13994": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13996": {
      "op": "MSTORE"
    },
    "13997": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14001": {
      "op": "REVERT"
    },
    "14002": {
      "op": "JUMPDEST"
    },
    "14003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14005": {
      "op": "DUP3"
    },
    "14006": {
      "op": "DUP3"
    },
    "14007": {
      "op": "LT"
    },
    "14008": {
      "op": "ISZERO"
    },
    "14009": {
      "op": "PUSH2",
      "value": "0x36C4"
    },
    "14012": {
      "op": "JUMPI"
    },
    "14013": {
      "op": "PUSH2",
      "value": "0x36C4"
    },
    "14016": {
      "op": "PUSH2",
      "value": "0x369C"
    },
    "14019": {
      "jump": "i",
      "op": "JUMP"
    },
    "14020": {
      "op": "JUMPDEST"
    },
    "14021": {
      "op": "POP"
    },
    "14022": {
      "op": "SUB"
    },
    "14023": {
      "op": "SWAP1"
    },
    "14024": {
      "jump": "o",
      "op": "JUMP"
    },
    "14025": {
      "op": "JUMPDEST"
    },
    "14026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14028": {
      "op": "DUP3"
    },
    "14029": {
      "op": "NOT"
    },
    "14030": {
      "op": "DUP3"
    },
    "14031": {
      "op": "GT"
    },
    "14032": {
      "op": "ISZERO"
    },
    "14033": {
      "op": "PUSH2",
      "value": "0x36DC"
    },
    "14036": {
      "op": "JUMPI"
    },
    "14037": {
      "op": "PUSH2",
      "value": "0x36DC"
    },
    "14040": {
      "op": "PUSH2",
      "value": "0x369C"
    },
    "14043": {
      "jump": "i",
      "op": "JUMP"
    },
    "14044": {
      "op": "JUMPDEST"
    },
    "14045": {
      "op": "POP"
    },
    "14046": {
      "op": "ADD"
    },
    "14047": {
      "op": "SWAP1"
    },
    "14048": {
      "jump": "o",
      "op": "JUMP"
    },
    "14049": {
      "op": "JUMPDEST"
    },
    "14050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14052": {
      "op": "DUP1"
    },
    "14053": {
      "op": "DUP3"
    },
    "14054": {
      "op": "MSTORE"
    },
    "14055": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14057": {
      "op": "SWAP1"
    },
    "14058": {
      "op": "DUP3"
    },
    "14059": {
      "op": "ADD"
    },
    "14060": {
      "op": "MSTORE"
    },
    "14061": {
      "op": "PUSH32",
      "value": "0x796F752063616E2774206D696E742074686174206D616E79207269676874206E"
    },
    "14094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14096": {
      "op": "DUP3"
    },
    "14097": {
      "op": "ADD"
    },
    "14098": {
      "op": "MSTORE"
    },
    "14099": {
      "op": "PUSH2",
      "value": "0x6F77"
    },
    "14102": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "14104": {
      "op": "SHL"
    },
    "14105": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14107": {
      "op": "DUP3"
    },
    "14108": {
      "op": "ADD"
    },
    "14109": {
      "op": "MSTORE"
    },
    "14110": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14112": {
      "op": "ADD"
    },
    "14113": {
      "op": "SWAP1"
    },
    "14114": {
      "jump": "o",
      "op": "JUMP"
    },
    "14115": {
      "op": "JUMPDEST"
    },
    "14116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14118": {
      "op": "DUP2"
    },
    "14119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14121": {
      "op": "NOT"
    },
    "14122": {
      "op": "DIV"
    },
    "14123": {
      "op": "DUP4"
    },
    "14124": {
      "op": "GT"
    },
    "14125": {
      "op": "DUP3"
    },
    "14126": {
      "op": "ISZERO"
    },
    "14127": {
      "op": "ISZERO"
    },
    "14128": {
      "op": "AND"
    },
    "14129": {
      "op": "ISZERO"
    },
    "14130": {
      "op": "PUSH2",
      "value": "0x373D"
    },
    "14133": {
      "op": "JUMPI"
    },
    "14134": {
      "op": "PUSH2",
      "value": "0x373D"
    },
    "14137": {
      "op": "PUSH2",
      "value": "0x369C"
    },
    "14140": {
      "jump": "i",
      "op": "JUMP"
    },
    "14141": {
      "op": "JUMPDEST"
    },
    "14142": {
      "op": "POP"
    },
    "14143": {
      "op": "MUL"
    },
    "14144": {
      "op": "SWAP1"
    },
    "14145": {
      "jump": "o",
      "op": "JUMP"
    },
    "14146": {
      "op": "JUMPDEST"
    },
    "14147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14151": {
      "op": "DUP3"
    },
    "14152": {
      "op": "DUP5"
    },
    "14153": {
      "op": "SUB"
    },
    "14154": {
      "op": "SLT"
    },
    "14155": {
      "op": "ISZERO"
    },
    "14156": {
      "op": "PUSH2",
      "value": "0x3754"
    },
    "14159": {
      "op": "JUMPI"
    },
    "14160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14162": {
      "op": "DUP1"
    },
    "14163": {
      "op": "REVERT"
    },
    "14164": {
      "op": "JUMPDEST"
    },
    "14165": {
      "op": "POP"
    },
    "14166": {
      "op": "MLOAD"
    },
    "14167": {
      "op": "SWAP2"
    },
    "14168": {
      "op": "SWAP1"
    },
    "14169": {
      "op": "POP"
    },
    "14170": {
      "jump": "o",
      "op": "JUMP"
    },
    "14171": {
      "op": "JUMPDEST"
    },
    "14172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14174": {
      "op": "DUP1"
    },
    "14175": {
      "op": "DUP3"
    },
    "14176": {
      "op": "MSTORE"
    },
    "14177": {
      "op": "DUP2"
    },
    "14178": {
      "op": "DUP2"
    },
    "14179": {
      "op": "ADD"
    },
    "14180": {
      "op": "MSTORE"
    },
    "14181": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14214": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14216": {
      "op": "DUP3"
    },
    "14217": {
      "op": "ADD"
    },
    "14218": {
      "op": "MSTORE"
    },
    "14219": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14221": {
      "op": "ADD"
    },
    "14222": {
      "op": "SWAP1"
    },
    "14223": {
      "jump": "o",
      "op": "JUMP"
    },
    "14224": {
      "op": "JUMPDEST"
    },
    "14225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14227": {
      "op": "DUP1"
    },
    "14228": {
      "op": "DUP3"
    },
    "14229": {
      "op": "MSTORE"
    },
    "14230": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14232": {
      "op": "SWAP1"
    },
    "14233": {
      "op": "DUP3"
    },
    "14234": {
      "op": "ADD"
    },
    "14235": {
      "op": "MSTORE"
    },
    "14236": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "14269": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14271": {
      "op": "DUP3"
    },
    "14272": {
      "op": "ADD"
    },
    "14273": {
      "op": "MSTORE"
    },
    "14274": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "14292": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14294": {
      "op": "SHL"
    },
    "14295": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14297": {
      "op": "DUP3"
    },
    "14298": {
      "op": "ADD"
    },
    "14299": {
      "op": "MSTORE"
    },
    "14300": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14302": {
      "op": "ADD"
    },
    "14303": {
      "op": "SWAP1"
    },
    "14304": {
      "jump": "o",
      "op": "JUMP"
    },
    "14305": {
      "op": "JUMPDEST"
    },
    "14306": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14313": {
      "op": "SHL"
    },
    "14314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14316": {
      "op": "MSTORE"
    },
    "14317": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14319": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14321": {
      "op": "MSTORE"
    },
    "14322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14326": {
      "op": "REVERT"
    },
    "14327": {
      "op": "JUMPDEST"
    },
    "14328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14330": {
      "op": "DUP1"
    },
    "14331": {
      "op": "DUP3"
    },
    "14332": {
      "op": "MSTORE"
    },
    "14333": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14335": {
      "op": "SWAP1"
    },
    "14336": {
      "op": "DUP3"
    },
    "14337": {
      "op": "ADD"
    },
    "14338": {
      "op": "MSTORE"
    },
    "14339": {
      "op": "PUSH32",
      "value": "0x7468657265206973206E6F206E667420696E20796F75722062616C616E636500"
    },
    "14372": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14374": {
      "op": "DUP3"
    },
    "14375": {
      "op": "ADD"
    },
    "14376": {
      "op": "MSTORE"
    },
    "14377": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14379": {
      "op": "ADD"
    },
    "14380": {
      "op": "SWAP1"
    },
    "14381": {
      "jump": "o",
      "op": "JUMP"
    },
    "14382": {
      "op": "JUMPDEST"
    },
    "14383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14387": {
      "op": "DUP3"
    },
    "14388": {
      "op": "ADD"
    },
    "14389": {
      "op": "PUSH2",
      "value": "0x3840"
    },
    "14392": {
      "op": "JUMPI"
    },
    "14393": {
      "op": "PUSH2",
      "value": "0x3840"
    },
    "14396": {
      "op": "PUSH2",
      "value": "0x369C"
    },
    "14399": {
      "jump": "i",
      "op": "JUMP"
    },
    "14400": {
      "op": "JUMPDEST"
    },
    "14401": {
      "op": "POP"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14404": {
      "op": "ADD"
    },
    "14405": {
      "op": "SWAP1"
    },
    "14406": {
      "jump": "o",
      "op": "JUMP"
    },
    "14407": {
      "op": "JUMPDEST"
    },
    "14408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14410": {
      "op": "DUP1"
    },
    "14411": {
      "op": "DUP3"
    },
    "14412": {
      "op": "MSTORE"
    },
    "14413": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "14415": {
      "op": "SWAP1"
    },
    "14416": {
      "op": "DUP3"
    },
    "14417": {
      "op": "ADD"
    },
    "14418": {
      "op": "MSTORE"
    },
    "14419": {
      "op": "PUSH15",
      "value": "0xDCDEE840CADCDEEACED04082AC82B"
    },
    "14435": {
      "op": "PUSH1",
      "value": "0x8B"
    },
    "14437": {
      "op": "SHL"
    },
    "14438": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14440": {
      "op": "DUP3"
    },
    "14441": {
      "op": "ADD"
    },
    "14442": {
      "op": "MSTORE"
    },
    "14443": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14445": {
      "op": "ADD"
    },
    "14446": {
      "op": "SWAP1"
    },
    "14447": {
      "jump": "o",
      "op": "JUMP"
    },
    "14448": {
      "op": "JUMPDEST"
    },
    "14449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14451": {
      "op": "DUP4"
    },
    "14452": {
      "op": "MLOAD"
    },
    "14453": {
      "op": "PUSH2",
      "value": "0x3882"
    },
    "14456": {
      "op": "DUP2"
    },
    "14457": {
      "op": "DUP5"
    },
    "14458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14460": {
      "op": "DUP9"
    },
    "14461": {
      "op": "ADD"
    },
    "14462": {
      "op": "PUSH2",
      "value": "0x301B"
    },
    "14465": {
      "jump": "i",
      "op": "JUMP"
    },
    "14466": {
      "op": "JUMPDEST"
    },
    "14467": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "14469": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14471": {
      "op": "SHL"
    },
    "14472": {
      "op": "SWAP1"
    },
    "14473": {
      "op": "DUP4"
    },
    "14474": {
      "op": "ADD"
    },
    "14475": {
      "op": "SWAP1"
    },
    "14476": {
      "op": "DUP2"
    },
    "14477": {
      "op": "MSTORE"
    },
    "14478": {
      "op": "DUP4"
    },
    "14479": {
      "op": "MLOAD"
    },
    "14480": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "14483": {
      "op": "DUP2"
    },
    "14484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14486": {
      "op": "DUP5"
    },
    "14487": {
      "op": "ADD"
    },
    "14488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14490": {
      "op": "DUP9"
    },
    "14491": {
      "op": "ADD"
    },
    "14492": {
      "op": "PUSH2",
      "value": "0x301B"
    },
    "14495": {
      "jump": "i",
      "op": "JUMP"
    },
    "14496": {
      "op": "JUMPDEST"
    },
    "14497": {
      "op": "PUSH5",
      "value": "0x173539B7B7"
    },
    "14503": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "14505": {
      "op": "SHL"
    },
    "14506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14508": {
      "op": "SWAP3"
    },
    "14509": {
      "op": "SWAP1"
    },
    "14510": {
      "op": "SWAP2"
    },
    "14511": {
      "op": "ADD"
    },
    "14512": {
      "op": "SWAP2"
    },
    "14513": {
      "op": "DUP3"
    },
    "14514": {
      "op": "ADD"
    },
    "14515": {
      "op": "MSTORE"
    },
    "14516": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "14518": {
      "op": "ADD"
    },
    "14519": {
      "op": "SWAP5"
    },
    "14520": {
      "op": "SWAP4"
    },
    "14521": {
      "op": "POP"
    },
    "14522": {
      "op": "POP"
    },
    "14523": {
      "op": "POP"
    },
    "14524": {
      "op": "POP"
    },
    "14525": {
      "jump": "o",
      "op": "JUMP"
    },
    "14526": {
      "op": "JUMPDEST"
    },
    "14527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14529": {
      "op": "DUP1"
    },
    "14530": {
      "op": "DUP3"
    },
    "14531": {
      "op": "MSTORE"
    },
    "14532": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14534": {
      "op": "SWAP1"
    },
    "14535": {
      "op": "DUP3"
    },
    "14536": {
      "op": "ADD"
    },
    "14537": {
      "op": "MSTORE"
    },
    "14538": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14571": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14573": {
      "op": "DUP3"
    },
    "14574": {
      "op": "ADD"
    },
    "14575": {
      "op": "MSTORE"
    },
    "14576": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14595": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14597": {
      "op": "SHL"
    },
    "14598": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14600": {
      "op": "DUP3"
    },
    "14601": {
      "op": "ADD"
    },
    "14602": {
      "op": "MSTORE"
    },
    "14603": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14605": {
      "op": "ADD"
    },
    "14606": {
      "op": "SWAP1"
    },
    "14607": {
      "jump": "o",
      "op": "JUMP"
    },
    "14608": {
      "op": "JUMPDEST"
    },
    "14609": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14616": {
      "op": "SHL"
    },
    "14617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14619": {
      "op": "MSTORE"
    },
    "14620": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14622": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14624": {
      "op": "MSTORE"
    },
    "14625": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14629": {
      "op": "REVERT"
    },
    "14630": {
      "op": "JUMPDEST"
    },
    "14631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14633": {
      "op": "DUP3"
    },
    "14634": {
      "op": "PUSH2",
      "value": "0x3935"
    },
    "14637": {
      "op": "JUMPI"
    },
    "14638": {
      "op": "PUSH2",
      "value": "0x3935"
    },
    "14641": {
      "op": "PUSH2",
      "value": "0x3910"
    },
    "14644": {
      "jump": "i",
      "op": "JUMP"
    },
    "14645": {
      "op": "JUMPDEST"
    },
    "14646": {
      "op": "POP"
    },
    "14647": {
      "op": "DIV"
    },
    "14648": {
      "op": "SWAP1"
    },
    "14649": {
      "jump": "o",
      "op": "JUMP"
    },
    "14650": {
      "op": "JUMPDEST"
    },
    "14651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14653": {
      "op": "DUP3"
    },
    "14654": {
      "op": "PUSH2",
      "value": "0x3949"
    },
    "14657": {
      "op": "JUMPI"
    },
    "14658": {
      "op": "PUSH2",
      "value": "0x3949"
    },
    "14661": {
      "op": "PUSH2",
      "value": "0x3910"
    },
    "14664": {
      "jump": "i",
      "op": "JUMP"
    },
    "14665": {
      "op": "JUMPDEST"
    },
    "14666": {
      "op": "POP"
    },
    "14667": {
      "op": "MOD"
    },
    "14668": {
      "op": "SWAP1"
    },
    "14669": {
      "jump": "o",
      "op": "JUMP"
    },
    "14670": {
      "op": "JUMPDEST"
    },
    "14671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14675": {
      "op": "DUP3"
    },
    "14676": {
      "op": "DUP5"
    },
    "14677": {
      "op": "SUB"
    },
    "14678": {
      "op": "SLT"
    },
    "14679": {
      "op": "ISZERO"
    },
    "14680": {
      "op": "PUSH2",
      "value": "0x3960"
    },
    "14683": {
      "op": "JUMPI"
    },
    "14684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14686": {
      "op": "DUP1"
    },
    "14687": {
      "op": "REVERT"
    },
    "14688": {
      "op": "JUMPDEST"
    },
    "14689": {
      "op": "DUP2"
    },
    "14690": {
      "op": "MLOAD"
    },
    "14691": {
      "op": "PUSH2",
      "value": "0x2418"
    },
    "14694": {
      "op": "DUP2"
    },
    "14695": {
      "op": "PUSH2",
      "value": "0x3474"
    },
    "14698": {
      "jump": "i",
      "op": "JUMP"
    },
    "14699": {
      "op": "JUMPDEST"
    },
    "14700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14706": {
      "op": "SHL"
    },
    "14707": {
      "op": "SUB"
    },
    "14708": {
      "op": "DUP6"
    },
    "14709": {
      "op": "DUP2"
    },
    "14710": {
      "op": "AND"
    },
    "14711": {
      "op": "DUP3"
    },
    "14712": {
      "op": "MSTORE"
    },
    "14713": {
      "op": "DUP5"
    },
    "14714": {
      "op": "AND"
    },
    "14715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14717": {
      "op": "DUP3"
    },
    "14718": {
      "op": "ADD"
    },
    "14719": {
      "op": "MSTORE"
    },
    "14720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14722": {
      "op": "DUP2"
    },
    "14723": {
      "op": "ADD"
    },
    "14724": {
      "op": "DUP4"
    },
    "14725": {
      "op": "SWAP1"
    },
    "14726": {
      "op": "MSTORE"
    },
    "14727": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14731": {
      "op": "DUP3"
    },
    "14732": {
      "op": "ADD"
    },
    "14733": {
      "op": "DUP2"
    },
    "14734": {
      "op": "SWAP1"
    },
    "14735": {
      "op": "MSTORE"
    },
    "14736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14738": {
      "op": "SWAP1"
    },
    "14739": {
      "op": "PUSH2",
      "value": "0x399E"
    },
    "14742": {
      "op": "SWAP1"
    },
    "14743": {
      "op": "DUP4"
    },
    "14744": {
      "op": "ADD"
    },
    "14745": {
      "op": "DUP5"
    },
    "14746": {
      "op": "PUSH2",
      "value": "0x3047"
    },
    "14749": {
      "jump": "i",
      "op": "JUMP"
    },
    "14750": {
      "op": "JUMPDEST"
    },
    "14751": {
      "op": "SWAP7"
    },
    "14752": {
      "op": "SWAP6"
    },
    "14753": {
      "op": "POP"
    },
    "14754": {
      "op": "POP"
    },
    "14755": {
      "op": "POP"
    },
    "14756": {
      "op": "POP"
    },
    "14757": {
      "op": "POP"
    },
    "14758": {
      "op": "POP"
    },
    "14759": {
      "jump": "o",
      "op": "JUMP"
    },
    "14760": {
      "op": "JUMPDEST"
    },
    "14761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14765": {
      "op": "DUP3"
    },
    "14766": {
      "op": "DUP5"
    },
    "14767": {
      "op": "SUB"
    },
    "14768": {
      "op": "SLT"
    },
    "14769": {
      "op": "ISZERO"
    },
    "14770": {
      "op": "PUSH2",
      "value": "0x39BA"
    },
    "14773": {
      "op": "JUMPI"
    },
    "14774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14776": {
      "op": "DUP1"
    },
    "14777": {
      "op": "REVERT"
    },
    "14778": {
      "op": "JUMPDEST"
    },
    "14779": {
      "op": "DUP2"
    },
    "14780": {
      "op": "MLOAD"
    },
    "14781": {
      "op": "PUSH2",
      "value": "0x2418"
    },
    "14784": {
      "op": "DUP2"
    },
    "14785": {
      "op": "PUSH2",
      "value": "0x2FE8"
    },
    "14788": {
      "jump": "i",
      "op": "JUMP"
    },
    "14789": {
      "op": "JUMPDEST"
    },
    "14790": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14797": {
      "op": "SHL"
    },
    "14798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14800": {
      "op": "MSTORE"
    },
    "14801": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14803": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14805": {
      "op": "MSTORE"
    },
    "14806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14810": {
      "op": "REVERT"
    },
    "14811": {
      "op": "JUMPDEST"
    },
    "14812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14814": {
      "op": "DUP3"
    },
    "14815": {
      "op": "MLOAD"
    },
    "14816": {
      "op": "PUSH2",
      "value": "0x39ED"
    },
    "14819": {
      "op": "DUP2"
    },
    "14820": {
      "op": "DUP5"
    },
    "14821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14823": {
      "op": "DUP8"
    },
    "14824": {
      "op": "ADD"
    },
    "14825": {
      "op": "PUSH2",
      "value": "0x301B"
    },
    "14828": {
      "jump": "i",
      "op": "JUMP"
    },
    "14829": {
      "op": "JUMPDEST"
    },
    "14830": {
      "op": "SWAP2"
    },
    "14831": {
      "op": "SWAP1"
    },
    "14832": {
      "op": "SWAP2"
    },
    "14833": {
      "op": "ADD"
    },
    "14834": {
      "op": "SWAP3"
    },
    "14835": {
      "op": "SWAP2"
    },
    "14836": {
      "op": "POP"
    },
    "14837": {
      "op": "POP"
    },
    "14838": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e71c8e8b75c033b2761554b10000bfe0eb3fc617",
  "source": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\nimport \"./Soul.sol\";\n\ncontract Celestial is ERC721Enumerable, Ownable, Pausable {\n    using SafeERC20 for IERC20;\n    using Strings for uint256;\n\n    struct CelestialInfo {\n        uint256 tokenId;\n        uint256 celestialType;\n    }\n    // CONSTANTS\n    uint256 public constant CELESTIAL_PRICE_AVAX = 1.5 ether; // 1.5 in production\n    uint256 public constant CELESTIAL_PRICE_WHITELIST = 1.3 ether; // 1.3 in roduction\n    //uint256 public constant WHITELIST_CELESTIAL = 1000;\n    uint256 public constant CELESTIAL_PER_SOUL_MINT_LEVEL = 5000;\n    //uint256 public constant MAXIMUM_MINTS_PER_WHITELIST_ADDRESS = 4;\n    uint256 public constant NUM_GEN0_CELESTIAL = 10_000;\n    uint256 public constant NUM_GEN1_CELESTIAL = 15_000;\n    uint256 public constant ANGEL_TYPE = 1;\n    uint256 public constant DEMON_TYPE = 2;\n    uint256 public constant NEPHILIM_TYPE = 3;\n\n    // SOUL mint price tracking\n    uint256 public currentSOULMintCost = 20_000 * 1e18;\n\n    // external contracts\n    Soul public soul;\n    address public celestialverseAddress;\n    address public Stake;\n\n    // metadata URI\n    string public BASE_URI;\n\n    // whitelist\n    bytes32 public merkleRoot;\n    mapping(address => uint256) public whitelistClaimed;\n\n    // mint tracking\n    uint256 public CelestialsMintedWithAVAX;\n    uint256 public CelestialsMintedWithSOUL;\n    uint256 public CelestialsMintedWhitelist;\n    uint256 public CelestialsMinted = 0;\n\n    uint256 public AngelsMinted;\n    uint256 public DemonsMinted;\n    uint256 public NephilimsMinted;\n    // mint control timestamps\n    //uint256 public startTimeWhitelist;\n    uint256 public startTimeAVAX;\n    uint256 public startTimeSOUL;\n\n    // Celestial type definitions (ANGEL OR DEMON OR NEPHILIM)\n    mapping(uint256 => uint256) public tokenTypes; // maps tokenId to its type\n\n    // EVENTS\n\n    event onCelestialCreated(uint256 tokenId);\n    event onCelestialRevealed(uint256 tokenId, uint256 celestialType);\n\n    constructor(string memory _BASE_URI, Soul _soul)\n        ERC721(\"Celestial Verse Game\", \"CELESTIAL-VERSE-GAME\")\n    {\n        CelestialsMinted = 0;\n        BASE_URI = _BASE_URI;\n        soul = _soul;\n    }\n\n    function setStake(address _stake) external onlyOwner{\n        Stake = _stake;\n    }\n\n    function setStartTimeAVAX(uint256 _startTime) external onlyOwner {\n        require(\n            _startTime >= block.timestamp,\n            \"startTime cannot be in the past\"\n        );\n        startTimeAVAX = _startTime;\n    }\n\n    function setStartTimeSOUL(uint256 _startTime) external onlyOwner {\n        require(\n            _startTime >= block.timestamp,\n            \"startTime cannot be in the past\"\n        );\n        startTimeSOUL = _startTime;\n    }\n\n    // metadata\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return BASE_URI;\n    }\n\n    function setBaseURI(string calldata _BASE_URI) external onlyOwner {\n        BASE_URI = _BASE_URI;\n    }\n\n    function getType(uint256 _tokenId) public view returns (uint256) {\n        require(_exists(_tokenId), \"token does not exist\");\n        return tokenTypes[_tokenId];\n    }\n\n    //function mintingStartedWhitelist() public view returns (bool) {\n    //    return startTimeWhitelist != 0 && block.timestamp >= startTimeWhitelist;\n    //}\n\n    function mintingStartedAVAX() public view returns (bool) {\n        return startTimeAVAX != 0 && block.timestamp >= startTimeAVAX;\n    }\n\n    function mintingStartedSOUL() public view returns (bool) {\n        return startTimeSOUL != 0 && block.timestamp >= startTimeSOUL;\n    }\n\n    /**\n     * @dev allows owner to send ERC20s held by this contract to target\n     */\n    function forwardERC20s(\n        IERC20 _token,\n        uint256 _amount,\n        address target\n    ) external onlyOwner {\n        _token.safeTransfer(target, _amount);\n    }\n\n    /**\n     * @dev allows owner to withdraw AVAX\n     */\n    function withdrawAVAX(uint256 _amount) external payable onlyOwner {\n        require(address(this).balance >= _amount, \"not enough AVAX\");\n        address payable to = payable(_msgSender());\n        (bool sent, ) = to.call{value: _amount}(\"\");\n        require(sent, \"Failed to send AVAX\");\n    }\n\n    /**\n     * @dev merkle root for WL wallets\n     */\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function exist(uint256 tokenId) external view returns(bool) {\n        return _exists(tokenId);\n    }\n\n    // MINTING\n\n    function _createCelestial(\n        address to,\n        uint256 tokenId,\n        uint256 celestialType\n    ) internal {\n        require(\n            CelestialsMinted <= NUM_GEN0_CELESTIAL + NUM_GEN1_CELESTIAL,\n            \"cannot mint anymore celestials\"\n        );\n        require(!_exists(tokenId), \"this 'tokenId' is already tooken\");\n        require(\n            tokenId >= 1 && tokenId <= NUM_GEN0_CELESTIAL,\n            \"'tokenId' must be in the range\"\n        );\n        require(\n            tokenTypes[tokenId] == 0,\n            \"that token's type has already been set\"\n        );\n        require(\n            celestialType == ANGEL_TYPE ||\n                celestialType == DEMON_TYPE ||\n                celestialType == NEPHILIM_TYPE,\n            \"invalid celestial type\"\n        );\n        tokenTypes[tokenId] = celestialType;\n        \n        if (celestialType == 1) {\n            AngelsMinted++;\n        } else if(celestialType == 2){\n            DemonsMinted++;\n        }else{\n            NephilimsMinted++;\n        }\n\n        _safeMint(to, tokenId);\n        setApprovalForAll(Stake,true);\n        emit onCelestialRevealed(tokenId, celestialType);\n        emit onCelestialCreated(tokenId);\n    }\n\n    function _createCelestials(\n        uint256 qty,\n        uint256[] memory tokenIds,\n        uint256[] memory celestialTypes,\n        address to\n    ) internal {\n        for (uint256 i = 0; i < qty; i++) {\n            CelestialsMinted += 1;\n            _createCelestial(to, tokenIds[i], celestialTypes[i]);\n        }\n        // change parameters for percentages\n        // NumberOfAnglesLeft / NumberOfTotalNFTLeft * 100 == Angle chance percentage\n        // Server Side\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n        return\n            string(\n                abi.encodePacked(_baseURI(), \"/\", tokenId.toString(), \".json\")\n            );\n    }\n\n    /**\n     * @dev GEN0 minting\n     */\n    function mintCelestialWhitelist(\n        bytes32[] calldata _merkleProof,\n        uint256 qty,\n        uint256[] memory tokenIds,\n        uint256[] memory celestialTypes\n    ) external payable whenNotPaused {\n        // check most basic requirements\n        require(merkleRoot != 0, \"missing root\");\n        //require(mintingStartedWhitelist(), \"cannot mint right now\");\n        //require(!mintingStartedAVAX(), \"whitelist minting is closed\");\n\n        // check if address belongs in whitelist\n        bytes32 leaf = keccak256(abi.encodePacked(_msgSender()));\n        require(\n            MerkleProof.verify(_merkleProof, merkleRoot, leaf),\n            \"this address does not have permission\"\n        );\n\n        // check more advanced requirements\n        require(\n            qty == 1 || qty == 5 || qty == 10,\n            \"quantity must be 1 or 5 or 10\"\n        );\n        require(\n            qty == tokenIds.length && qty == celestialTypes.length,\n            \"Length of the amount of the nft must be equal to qty\"\n        );\n        //require(\n        //    (celestialsMintedWhitelist + qty) <= WHITELIST_CELESTIAL,\n        //    \"you can't mint that many right now\"\n        //);\n\n        //require(\n        //    (whitelistClaimed[_msgSender()] + qty) <=\n        //        MAXIMUM_MINTS_PER_WHITELIST_ADDRESS,\n        //    \"this address can't mint any more whitelist celestials\"\n        //);\n\n        // check price\n        require(\n            msg.value >= CELESTIAL_PRICE_WHITELIST * qty,\n            \"not enough AVAX\"\n        );\n\n        CelestialsMintedWhitelist += qty;\n        whitelistClaimed[_msgSender()] += qty;\n\n        // mint celestials\n        _createCelestials(qty, tokenIds, celestialTypes, _msgSender());\n    }\n\n    /**\n     * @dev GEN0 minting\n     */\n    function mintCelestialWithAVAX(\n        uint256 qty,\n        uint256[] memory tokenIds,\n        uint256[] memory celestialTypes\n    ) external payable whenNotPaused {\n        //require(mintingStartedAVAX(), \"cannot mint right now\");\n        require(\n            qty == 1 || qty == 5 || qty == 10,\n            \"quantity must be 1 or 5 or 10\"\n        );\n        require(\n            qty == tokenIds.length && qty == celestialTypes.length,\n            \"Length of the amount of the nft must be equal to qty\"\n        );\n        require(\n            (CelestialsMintedWithAVAX + qty) <=\n                (NUM_GEN0_CELESTIAL - CelestialsMintedWhitelist),\n            \"you can't mint that many right now\"\n        );\n\n        // calculate the transaction cost\n        uint256 transactionCost = CELESTIAL_PRICE_AVAX * qty;\n        require(msg.value >= transactionCost, \"not enough AVAX\");\n\n        CelestialsMintedWithAVAX += qty;\n\n        // mint Celestials\n        _createCelestials(qty, tokenIds, celestialTypes, _msgSender());\n    }\n\n    /**\n     * @dev GEN0 minting\n     */\n    function mintCelestialWithSoul(\n        uint256 qty,\n        uint256[] memory tokenIds,\n        uint256[] memory celestialTypes\n    ) external whenNotPaused {\n        //require(mintingStartedSOUL(), \"cannot mint right now\");\n        require(\n            qty == 1 || qty == 5 || qty == 10,\n            \"quantity must be 1 or 5 or 10\"\n        );\n        require(\n            qty == tokenIds.length && qty == celestialTypes.length,\n            \"Length of the amount of the nft must be equal to qty\"\n        );\n        require(\n            (CelestialsMintedWithAVAX + qty) <=\n                (NUM_GEN0_CELESTIAL - CelestialsMintedWhitelist),\n            \"you can't mint that many right now\"\n        );\n\n        // calculate transaction costs\n        uint256 transactionCostSOUL = currentSOULMintCost * qty;\n        require(\n            soul.balanceOf(_msgSender()) >= transactionCostSOUL,\n            \"not enough SOUL\"\n        );\n\n        if (\n            CelestialsMintedWithSOUL <= CELESTIAL_PER_SOUL_MINT_LEVEL &&\n            CelestialsMintedWithSOUL + qty > CELESTIAL_PER_SOUL_MINT_LEVEL\n        ) {\n            currentSOULMintCost = currentSOULMintCost * 2;\n        }\n\n        CelestialsMintedWithSOUL += qty;\n        // spend SOUL\n        soul.burnFrom(_msgSender(), transactionCostSOUL);\n\n        // mint celestial\n        _createCelestials(qty, tokenIds, celestialTypes, _msgSender());\n    }\n\n    function GetTokenIdsOfOwner(address _owner) external view returns(uint256[] memory) {\n        require(balanceOf(_owner) > 0, \"there is no nft in your balance\");\n        uint256 balance = balanceOf(_owner);\n        uint256[] memory tokenIds = new uint256[](balance);\n        for (uint256 i = 0; i < balance; i++) {\n            uint256 tokenId = tokenOfOwnerByIndex(_owner,i);\n            tokenIds[i] = tokenId;\n        }\n        return tokenIds;\n    }\n\n    function CelestialsOfOwner(address _owner)\n        external\n        view\n        returns (CelestialInfo[] memory)\n    {\n        require(balanceOf(_owner) > 0, \"there is no nft in your balance\");\n        uint256 balance = balanceOf(_owner);\n        CelestialInfo[] memory res = new CelestialInfo[](balance);\n        for (uint256 i = 0; i < balance; i++) {\n            uint256 tokenId = tokenOfOwnerByIndex(_owner, i);\n            res[i] = CelestialInfo({\n                tokenId: tokenId,\n                celestialType: tokenTypes[tokenId]\n            });\n        }\n        return res;\n    }\n\n    function bachedCelestialsOfOwner(address _owner, uint256 _page)\n        public\n        view\n        returns (CelestialInfo[] memory)\n    {\n        require(_page >= 0, \"there is no negetive page\");\n        require(balanceOf(_owner) > 0, \"there is no nft in your balance\");\n        CelestialInfo[] memory celestials = new CelestialInfo[](5);\n        uint256 StartPoint = _page * 5;\n        uint256 EndPoint = StartPoint + 5;\n\n        if (EndPoint > balanceOf(_owner)) {\n            EndPoint = balanceOf(_owner);\n        }\n        for (uint256 i = StartPoint; i < EndPoint; i++) {\n            uint256 tokenId = tokenOfOwnerByIndex(_owner, i); // tokenOfOwnerByIndex comes from IERC721Enumerable\n\n            celestials[i] = CelestialInfo({\n                tokenId: tokenId,\n                celestialType: tokenTypes[tokenId]\n            });\n        }\n        return celestials;\n    }\n}\n",
  "sourceMap": "408:12778:19:-:0;;;1326:13;1289:50;;1809:1;1775:35;;2337:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1316:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:5;1382;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1405:17:7;;;;:7;;:17;;;;;:::i;:::-;;1316:113;;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;:23::i;:::-;924:7:1;:15;;-1:-1:-1;;;;924:15:1;;;934:5;2463:16:19::1;:20:::0;2493;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2523:4:19::1;:12:::0;;-1:-1:-1;;;;;;2523:12:19::1;-1:-1:-1::0;;;;;2523:12:19;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;408:12778:19;;586:96:14;665:10;;586:96::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;408:12778:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;408:12778:19;;;-1:-1:-1;408:12778:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:22;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:183;231:13;;-1:-1:-1;;;;;273:31:22;;263:42;;253:70;;319:1;316;309:12;253:70;146:183;;;:::o;334:1193::-;436:6;444;497:2;485:9;476:7;472:23;468:32;465:52;;;513:1;510;503:12;465:52;540:16;;-1:-1:-1;;;;;605:14:22;;;602:34;;;632:1;629;622:12;602:34;670:6;659:9;655:22;645:32;;715:7;708:4;704:2;700:13;696:27;686:55;;737:1;734;727:12;686:55;766:2;760:9;788:2;784;781:10;778:36;;;794:18;;:::i;:::-;869:2;863:9;837:2;923:13;;-1:-1:-1;;919:22:22;;;943:2;915:31;911:40;899:53;;;967:18;;;987:22;;;964:46;961:72;;;1013:18;;:::i;:::-;1053:10;1049:2;1042:22;1088:2;1080:6;1073:18;1110:4;1100:14;;1151:7;1146:2;1141;1137;1133:11;1129:20;1126:33;1123:53;;;1172:1;1169;1162:12;1123:53;1194:1;1185:10;;1204:129;1218:2;1215:1;1212:9;1204:129;;;1306:10;;;1302:19;;1296:26;1275:14;;;1271:23;;1264:59;1229:10;;;;1204:129;;;1351:2;1348:1;1345:9;1342:80;;;1410:1;1405:2;1400;1392:6;1388:15;1384:24;1377:35;1342:80;1441:6;-1:-1:-1;1466:55:22;;-1:-1:-1;;1502:18:22;;;1466:55;:::i;:::-;1456:65;;;;334:1193;;;;;:::o;1532:380::-;1611:1;1607:12;;;;1654;;;1675:61;;1729:4;1721:6;1717:17;1707:27;;1675:61;1782:2;1774:6;1771:14;1751:18;1748:38;1745:161;;1828:10;1823:3;1819:20;1816:1;1809:31;1863:4;1860:1;1853:15;1891:4;1888:1;1881:15;1745:161;;1532:380;;;:::o;:::-;408:12778:19;;;;;;",
  "sourcePath": "contracts/Celestial.sol",
  "type": "contract"
}