{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_BASE_URI",
          "type": "string"
        },
        {
          "internalType": "contract Soul",
          "name": "_soul",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "onCelestialCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "celestialType",
          "type": "uint256"
        }
      ],
      "name": "onCelestialRevealed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ANGLE_TYPE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_URI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CELESTIAL_PER_SOUL_MINT_LEVEL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CELESTIAL_PRICE_AVAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CELESTIAL_PRICE_WHITELIST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CelestialsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CelestialsMintedWhitelist",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CelestialsMintedWithAVAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CelestialsMintedWithSOUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "CelestialsOfOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "celestialType",
              "type": "uint256"
            }
          ],
          "internalType": "struct Celestial.CelestialInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEMON_TYPE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NEPHILIM_TYPE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NUM_GEN0_CELESTIAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NUM_GEN1_CELESTIAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Stake",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_page",
          "type": "uint256"
        }
      ],
      "name": "bachedCelestialsOfOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "celestialType",
              "type": "uint256"
            }
          ],
          "internalType": "struct Celestial.CelestialInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "celestialverseAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentSOULMintCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "forwardERC20s",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "celestialTypes",
          "type": "uint256[]"
        }
      ],
      "name": "mintCelestialWhitelist",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "celestialTypes",
          "type": "uint256[]"
        }
      ],
      "name": "mintCelestialWithAVAX",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "celestialTypes",
          "type": "uint256[]"
        }
      ],
      "name": "mintCelestialWithSoul",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingStartedAVAX",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingStartedSOUL",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_BASE_URI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stake",
          "type": "address"
        }
      ],
      "name": "setStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "setStartTimeAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "setStartTimeSOUL",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "soul",
      "outputs": [
        {
          "internalType": "contract Soul",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTimeAVAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTimeSOUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenTypes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAVAX",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/Pausable.sol",
    "10": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "11": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "12": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "13": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
    "14": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "15": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Strings.sol",
    "16": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/cryptography/MerkleProof.sol",
    "17": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/ERC165.sol",
    "18": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/IERC165.sol",
    "19": "contracts/Celestial.sol",
    "21": "contracts/Soul.sol",
    "3": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "6": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "7": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/ERC721.sol",
    "8": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721.sol"
  },
  "ast": {
    "absolutePath": "contracts/Celestial.sol",
    "exportedSymbols": {
      "Address": [
        3385
      ],
      "Celestial": [
        937
      ],
      "Context": [
        3011
      ],
      "ERC165": [
        5212
      ],
      "ERC20": [
        4780
      ],
      "ERC20Burnable": [
        4842
      ],
      "ERC721": [
        4203
      ],
      "ERC721Enumerable": [
        2691
      ],
      "IERC165": [
        5249
      ],
      "IERC20": [
        3089
      ],
      "IERC20Metadata": [
        5237
      ],
      "IERC721": [
        4958
      ],
      "IERC721Enumerable": [
        4234
      ],
      "IERC721Metadata": [
        4985
      ],
      "IERC721Receiver": [
        2990
      ],
      "MerkleProof": [
        2762
      ],
      "Ownable": [
        2037
      ],
      "Pausable": [
        2129
      ],
      "SafeERC20": [
        2353
      ],
      "Soul": [
        2972
      ],
      "Strings": [
        5188
      ]
    },
    "id": 938,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:19"
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 2354,
        "src": "62:65:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 2692,
        "src": "128:78:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 2038,
        "src": "207:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 2130,
        "src": "260:55:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Nasrin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 2763,
        "src": "316:68:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Soul.sol",
        "file": "./Soul.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 2973,
        "src": "386:20:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2691,
              "src": "430:16:19"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "430:16:19"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2037,
              "src": "448:7:19"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "448:7:19"
          },
          {
            "baseName": {
              "id": 12,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2129,
              "src": "457:8:19"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "457:8:19"
          }
        ],
        "canonicalName": "Celestial",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 937,
        "linearizedBaseContracts": [
          937,
          2129,
          2037,
          2691,
          4234,
          4203,
          4985,
          4958,
          5212,
          5249,
          3011
        ],
        "name": "Celestial",
        "nameLocation": "417:9:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 17,
            "libraryName": {
              "id": 14,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2353,
              "src": "478:9:19"
            },
            "nodeType": "UsingForDirective",
            "src": "472:27:19",
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3089,
                "src": "492:6:19"
              },
              "referencedDeclaration": 3089,
              "src": "492:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3089",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "global": false,
            "id": 20,
            "libraryName": {
              "id": 18,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5188,
              "src": "510:7:19"
            },
            "nodeType": "UsingForDirective",
            "src": "504:26:19",
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Celestial.CelestialInfo",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "575:7:19",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "567:15:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "567:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "celestialType",
                "nameLocation": "600:13:19",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "592:21:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "592:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CelestialInfo",
            "nameLocation": "543:13:19",
            "nodeType": "StructDefinition",
            "scope": 937,
            "src": "536:84:19",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "b4fad9af",
            "id": 28,
            "mutability": "constant",
            "name": "CELESTIAL_PRICE_AVAX",
            "nameLocation": "666:20:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "642:59:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "642:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e30303135",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "689:12:19",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1500000000000000_by_1",
                "typeString": "int_const 1500000000000000"
              },
              "value": "0.0015"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2cfb18b1",
            "id": 31,
            "mutability": "constant",
            "name": "CELESTIAL_PRICE_WHITELIST",
            "nameLocation": "752:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "728:64:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "728:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e30303133",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "780:12:19",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1300000000000000_by_1",
                "typeString": "int_const 1300000000000000"
              },
              "value": "0.0013"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "6b988176",
            "id": 34,
            "mutability": "constant",
            "name": "CELESTIAL_PER_SOUL_MINT_LEVEL",
            "nameLocation": "900:29:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "876:60:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "876:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "932:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "73033bda",
            "id": 37,
            "mutability": "constant",
            "name": "NUM_GEN0_CELESTIAL",
            "nameLocation": "1037:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1013:51:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1013:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1058:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "a756a1df",
            "id": 40,
            "mutability": "constant",
            "name": "NUM_GEN1_CELESTIAL",
            "nameLocation": "1094:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1070:51:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1070:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31355f303030",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1115:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15000_by_1",
                "typeString": "int_const 15000"
              },
              "value": "15_000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "dc9f9f96",
            "id": 43,
            "mutability": "constant",
            "name": "ANGLE_TYPE",
            "nameLocation": "1151:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1127:38:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1127:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1164:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2b95b732",
            "id": 46,
            "mutability": "constant",
            "name": "DEMON_TYPE",
            "nameLocation": "1195:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1171:38:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1171:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1208:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f7be4f11",
            "id": 49,
            "mutability": "constant",
            "name": "NEPHILIM_TYPE",
            "nameLocation": "1239:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1215:41:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1215:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1255:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7d97e52",
            "id": 54,
            "mutability": "mutable",
            "name": "currentSOULMintCost",
            "nameLocation": "1310:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1295:50:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1295:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000000"
              },
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32305f303030",
                "id": 51,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1332:6:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_20000_by_1",
                  "typeString": "int_const 20000"
                },
                "value": "20_000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653138",
                "id": 52,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1341:4:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1e18"
              },
              "src": "1332:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "815b7a8c",
            "id": 57,
            "mutability": "mutable",
            "name": "soul",
            "nameLocation": "1390:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1378:16:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Soul_$2972",
              "typeString": "contract Soul"
            },
            "typeName": {
              "id": 56,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55,
                "name": "Soul",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2972,
                "src": "1378:4:19"
              },
              "referencedDeclaration": 2972,
              "src": "1378:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Soul_$2972",
                "typeString": "contract Soul"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc7d4034",
            "id": 59,
            "mutability": "mutable",
            "name": "celestialverseAddress",
            "nameLocation": "1415:21:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1400:36:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1400:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de20bc92",
            "id": 61,
            "mutability": "mutable",
            "name": "Stake",
            "nameLocation": "1457:5:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1442:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 60,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1442:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dbddb26a",
            "id": 63,
            "mutability": "mutable",
            "name": "BASE_URI",
            "nameLocation": "1503:8:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1489:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 62,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1489:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 65,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1550:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1535:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 64,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1535:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db4bec44",
            "id": 69,
            "mutability": "mutable",
            "name": "whitelistClaimed",
            "nameLocation": "1601:16:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1566:51:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 66,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1574:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1566:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 67,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1585:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65e940a2",
            "id": 71,
            "mutability": "mutable",
            "name": "CelestialsMintedWithAVAX",
            "nameLocation": "1660:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1645:39:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1645:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e9f169f7",
            "id": 73,
            "mutability": "mutable",
            "name": "CelestialsMintedWithSOUL",
            "nameLocation": "1705:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1690:39:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 72,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1690:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff2a7656",
            "id": 75,
            "mutability": "mutable",
            "name": "CelestialsMintedWhitelist",
            "nameLocation": "1750:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1735:40:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1735:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b76dbca",
            "id": 78,
            "mutability": "mutable",
            "name": "CelestialsMinted",
            "nameLocation": "1796:16:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1781:35:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1781:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 77,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1815:1:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a682f862",
            "id": 80,
            "mutability": "mutable",
            "name": "startTimeAVAX",
            "nameLocation": "1909:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1894:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1894:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7b27af7",
            "id": 82,
            "mutability": "mutable",
            "name": "startTimeSOUL",
            "nameLocation": "1943:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "1928:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 81,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1928:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33f6832a",
            "id": 86,
            "mutability": "mutable",
            "name": "tokenTypes",
            "nameLocation": "2061:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "2026:45:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2034:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2026:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 84,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2045:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "b0c73316550069520aa3bffd50be8c7989584da8716295793eda73dbcd1c154c",
            "id": 90,
            "name": "onCelestialCreated",
            "nameLocation": "2127:18:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2154:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "2146:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2145:17:19"
            },
            "src": "2121:42:19"
          },
          {
            "anonymous": false,
            "eventSelector": "c3446d569695aa78750f8132ce4941514489a02c8ca9a2078ee392dccd96474e",
            "id": 96,
            "name": "onCelestialRevealed",
            "nameLocation": "2174:19:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2202:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2194:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "celestialType",
                  "nameLocation": "2219:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2211:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2211:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2193:40:19"
            },
            "src": "2168:66:19"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "2356:89:19",
              "statements": [
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "CelestialsMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2366:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2385:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2366:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:20:19"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "BASE_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2396:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "_BASE_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2407:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2396:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2396:20:19"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116,
                      "name": "soul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "2426:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Soul_$2972",
                        "typeString": "contract Soul"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 117,
                      "name": "_soul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2433:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Soul_$2972",
                        "typeString": "contract Soul"
                      }
                    },
                    "src": "2426:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Soul_$2972",
                      "typeString": "contract Soul"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2426:12:19"
                }
              ]
            },
            "id": 121,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43656c65737469616c2056657273652047616d65",
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2304:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_46403887fa82a4ea549c82d33786653322f8753e53a1cc1e407acb2c256bded4",
                      "typeString": "literal_string \"Celestial Verse Game\""
                    },
                    "value": "Celestial Verse Game"
                  },
                  {
                    "hexValue": "43454c45535449414c2d56455253452d47414d45",
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2328:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_932c92cb2329a5e01ef52b76131c14c1503ed581bc7b09f2d46ea71f58177b6c",
                      "typeString": "literal_string \"CELESTIAL-VERSE-GAME\""
                    },
                    "value": "CELESTIAL-VERSE-GAME"
                  }
                ],
                "id": 106,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 103,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4203,
                  "src": "2297:6:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2297:54:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_BASE_URI",
                  "nameLocation": "2266:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "2252:23:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "2282:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "2277:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Soul_$2972",
                    "typeString": "contract Soul"
                  },
                  "typeName": {
                    "id": 100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99,
                      "name": "Soul",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2972,
                      "src": "2277:4:19"
                    },
                    "referencedDeclaration": 2972,
                    "src": "2277:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Soul_$2972",
                      "typeString": "contract Soul"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:37:19"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2356:0:19"
            },
            "scope": 937,
            "src": "2240:205:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "2503:31:19",
              "statements": [
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2513:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "2521:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2513:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:14:19"
                }
              ]
            },
            "functionSelector": "e2ea1319",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 126,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 125,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "2494:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2494:9:19"
              }
            ],
            "name": "setStake",
            "nameLocation": "2460:8:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "2477:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2469:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2468:16:19"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2503:0:19"
            },
            "scope": 937,
            "src": "2451:83:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "2605:160:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 141,
                          "name": "_startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2636:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 142,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2650:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2650:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2636:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "737461727454696d652063616e6e6f7420626520696e207468652070617374",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2679:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71ce12c838f5b11d2075effbf86f6dddbb5c9b8a39eb41662ba13a6f92d262f3",
                          "typeString": "literal_string \"startTime cannot be in the past\""
                        },
                        "value": "startTime cannot be in the past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71ce12c838f5b11d2075effbf86f6dddbb5c9b8a39eb41662ba13a6f92d262f3",
                          "typeString": "literal_string \"startTime cannot be in the past\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2615:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2615:107:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2615:107:19"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "startTimeAVAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "2732:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "2748:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2732:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2732:26:19"
                }
              ]
            },
            "functionSelector": "3c1d4de7",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 137,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "2595:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2595:9:19"
              }
            ],
            "name": "setStartTimeAVAX",
            "nameLocation": "2549:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nameLocation": "2574:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2566:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2565:20:19"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:0:19"
            },
            "scope": 937,
            "src": "2540:225:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "2836:160:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 161,
                          "name": "_startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2867:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 162,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2881:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2881:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2867:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "737461727454696d652063616e6e6f7420626520696e207468652070617374",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2910:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71ce12c838f5b11d2075effbf86f6dddbb5c9b8a39eb41662ba13a6f92d262f3",
                          "typeString": "literal_string \"startTime cannot be in the past\""
                        },
                        "value": "startTime cannot be in the past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71ce12c838f5b11d2075effbf86f6dddbb5c9b8a39eb41662ba13a6f92d262f3",
                          "typeString": "literal_string \"startTime cannot be in the past\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2846:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:107:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:107:19"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "startTimeSOUL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "2963:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 169,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "2979:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2963:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "2963:26:19"
                }
              ]
            },
            "functionSelector": "200ed855",
            "id": 173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 157,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "2826:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2826:9:19"
              }
            ],
            "name": "setStartTimeSOUL",
            "nameLocation": "2780:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nameLocation": "2805:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "2797:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2796:20:19"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2836:0:19"
            },
            "scope": 937,
            "src": "2771:225:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3602
            ],
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "3094:32:19",
              "statements": [
                {
                  "expression": {
                    "id": 179,
                    "name": "BASE_URI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63,
                    "src": "3111:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 178,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "3104:15:19"
                }
              ]
            },
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3028:8:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 175,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3061:8:19"
            },
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3036:2:19"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3079:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:15:19"
            },
            "scope": 937,
            "src": "3019:107:19",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "3198:37:19",
              "statements": [
                {
                  "expression": {
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 189,
                      "name": "BASE_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3208:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 190,
                      "name": "_BASE_URI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "3219:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "3208:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "3208:20:19"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "3188:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3188:9:19"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "3141:10:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "_BASE_URI",
                  "nameLocation": "3168:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "3152:25:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3152:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3151:27:19"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3198:0:19"
            },
            "scope": 937,
            "src": "3132:103:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "3306:104:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 203,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "3332:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 202,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3841,
                          "src": "3324:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3324:17:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e20646f6573206e6f74206578697374",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3343:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3dfe0a9f34ad1d1915a5d3804d001dcc4ef1afcf3422b9b56e6886a98779408",
                          "typeString": "literal_string \"token does not exist\""
                        },
                        "value": "token does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3dfe0a9f34ad1d1915a5d3804d001dcc4ef1afcf3422b9b56e6886a98779408",
                          "typeString": "literal_string \"token does not exist\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3316:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:50:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:50:19"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 208,
                      "name": "tokenTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "3383:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 210,
                    "indexExpression": {
                      "id": 209,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "3394:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3383:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 200,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "3376:27:19"
                }
              ]
            },
            "functionSelector": "4036ab78",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getType",
            "nameLocation": "3250:7:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3266:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3258:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3258:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3257:18:19"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3297:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3297:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:9:19"
            },
            "scope": 937,
            "src": "3241:169:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "3635:78:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 218,
                        "name": "startTimeAVAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "3652:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3669:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3652:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 221,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3674:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3674:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 223,
                        "name": "startTimeAVAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "3693:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3674:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3652:54:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 217,
                  "id": 226,
                  "nodeType": "Return",
                  "src": "3645:61:19"
                }
              ]
            },
            "functionSelector": "a377d7ef",
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintingStartedAVAX",
            "nameLocation": "3587:18:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3605:2:19"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "3629:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3628:6:19"
            },
            "scope": 937,
            "src": "3578:135:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "3776:78:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 233,
                        "name": "startTimeSOUL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "3793:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3810:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3793:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 236,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3815:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3815:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 238,
                        "name": "startTimeSOUL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "3834:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3815:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3793:54:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 232,
                  "id": 241,
                  "nodeType": "Return",
                  "src": "3786:61:19"
                }
              ]
            },
            "functionSelector": "11a2428a",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintingStartedSOUL",
            "nameLocation": "3728:18:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3746:2:19"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3770:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3770:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3769:6:19"
            },
            "scope": 937,
            "src": "3719:135:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 263,
              "nodeType": "Block",
              "src": "4068:53:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 259,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "4098:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 260,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "4106:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 256,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "4078:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3089",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2160,
                      "src": "4078:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3089_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3089_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4078:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "4078:36:19"
                }
              ]
            },
            "documentation": {
              "id": 244,
              "nodeType": "StructuredDocumentation",
              "src": "3860:83:19",
              "text": " @dev allows owner to send ERC20s held by this contract to target"
            },
            "functionSelector": "43f37b98",
            "id": 264,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 253,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "4058:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4058:9:19"
              }
            ],
            "name": "forwardERC20s",
            "nameLocation": "3957:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3987:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "3980:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3089",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 245,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3089,
                      "src": "3980:6:19"
                    },
                    "referencedDeclaration": 3089,
                    "src": "3980:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3089",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4011:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "4003:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "4036:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "4028:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4028:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3970:78:19"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4068:0:19"
            },
            "scope": 937,
            "src": "3948:173:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "4251:228:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 275,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4277:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Celestial_$937",
                                  "typeString": "contract Celestial"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Celestial_$937",
                                  "typeString": "contract Celestial"
                                }
                              ],
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4269:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 273,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4269:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4269:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4269:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 278,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "4294:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4269:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682041564158",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4303:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        },
                        "value": "not enough AVAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        }
                      ],
                      "id": 272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4261:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4261:60:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "4261:60:19"
                },
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4347:2:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "4331:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 283,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4331:15:19",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 290,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 287,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "4360:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4360:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4352:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 285,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4352:8:19",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4352:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4331:42:19"
                },
                {
                  "assignments": [
                    292,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 292,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "4389:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "4384:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 291,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4384:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 299,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4423:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 293,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "4399:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4399:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 295,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "4414:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4399:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4399:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4383:43:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 301,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4444:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e642041564158",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4450:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8084d9ace57e8f1ee2a5c352e12bc2515dc806481837d9c47f98db33525ce136",
                          "typeString": "literal_string \"Failed to send AVAX\""
                        },
                        "value": "Failed to send AVAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8084d9ace57e8f1ee2a5c352e12bc2515dc806481837d9c47f98db33525ce136",
                          "typeString": "literal_string \"Failed to send AVAX\""
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4436:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4436:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:36:19"
                }
              ]
            },
            "documentation": {
              "id": 265,
              "nodeType": "StructuredDocumentation",
              "src": "4127:53:19",
              "text": " @dev allows owner to withdraw AVAX"
            },
            "functionSelector": "aeb5cd5e",
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 270,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 269,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "4241:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4241:9:19"
              }
            ],
            "name": "withdrawAVAX",
            "nameLocation": "4194:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4215:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "4207:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4207:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4206:17:19"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4251:0:19"
            },
            "scope": 937,
            "src": "4185:294:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "4603:41:19",
              "statements": [
                {
                  "expression": {
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 314,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4613:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 315,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "4626:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4613:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "4613:24:19"
                }
              ]
            },
            "documentation": {
              "id": 307,
              "nodeType": "StructuredDocumentation",
              "src": "4485:50:19",
              "text": " @dev merkle root for WL wallets"
            },
            "functionSelector": "7cb64759",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 312,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 311,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1980,
                  "src": "4593:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4593:9:19"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "4549:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "4571:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "4563:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4563:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4562:21:19"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4603:0:19"
            },
            "scope": 937,
            "src": "4540:104:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "4783:895:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 329,
                          "name": "CelestialsMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4814:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 330,
                            "name": "NUM_GEN0_CELESTIAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "4834:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 331,
                            "name": "NUM_GEN1_CELESTIAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "4855:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4834:39:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4814:59:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74206d696e7420616e796d6f72652063656c65737469616c73",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4887:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51424a94b34d45ae3b42d10135c9032eff3e41fb4cd1f8bb745045b732a082cb",
                          "typeString": "literal_string \"cannot mint anymore celestials\""
                        },
                        "value": "cannot mint anymore celestials"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51424a94b34d45ae3b42d10135c9032eff3e41fb4cd1f8bb745045b732a082cb",
                          "typeString": "literal_string \"cannot mint anymore celestials\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4793:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:136:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:136:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4947:17:19",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 339,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "4956:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 338,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3841,
                            "src": "4948:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4948:16:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732027746f6b656e49642720697320616c726561647920746f6f6b656e",
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4966:34:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_002f08452a6a96e431e11a68782bc667404fc46ff52fbead267e65fcbf7f1cfa",
                          "typeString": "literal_string \"this 'tokenId' is already tooken\""
                        },
                        "value": "this 'tokenId' is already tooken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_002f08452a6a96e431e11a68782bc667404fc46ff52fbead267e65fcbf7f1cfa",
                          "typeString": "literal_string \"this 'tokenId' is already tooken\""
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4939:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4939:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "4939:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 346,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "5032:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5043:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5032:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 349,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "5048:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 350,
                            "name": "NUM_GEN0_CELESTIAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "5059:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5048:29:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5032:45:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "27746f6b656e496427206d75737420626520696e207468652072616e6765",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5091:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_090fd8c747fac93f87ae961572bd15fc4a5bde03799a14ecec22b080d72d04f5",
                          "typeString": "literal_string \"'tokenId' must be in the range\""
                        },
                        "value": "'tokenId' must be in the range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_090fd8c747fac93f87ae961572bd15fc4a5bde03799a14ecec22b080d72d04f5",
                          "typeString": "literal_string \"'tokenId' must be in the range\""
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5011:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5011:122:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "5011:122:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 357,
                            "name": "tokenTypes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "5164:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 359,
                          "indexExpression": {
                            "id": 358,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "5175:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5164:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5187:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5164:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468617420746f6b656e277320747970652068617320616c7265616479206265656e20736574",
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5202:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_203c13f8b95f36c41bfed282043ca1b3a63491fa3f09f78a9b7c11b96cb3d73f",
                          "typeString": "literal_string \"that token's type has already been set\""
                        },
                        "value": "that token's type has already been set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_203c13f8b95f36c41bfed282043ca1b3a63491fa3f09f78a9b7c11b96cb3d73f",
                          "typeString": "literal_string \"that token's type has already been set\""
                        }
                      ],
                      "id": 356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5143:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "5143:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 366,
                              "name": "celestialType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "5283:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 367,
                              "name": "ANGLE_TYPE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "5300:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5283:27:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 369,
                              "name": "celestialType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "5330:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 370,
                              "name": "DEMON_TYPE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "5347:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5330:27:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5283:74:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 373,
                            "name": "celestialType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "5377:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 374,
                            "name": "NEPHILIM_TYPE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "5394:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5377:30:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5283:124:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642063656c65737469616c2074797065",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5421:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9380bd1c6834786de94a4c7af476e28c94b94079bc9a21cfb1643c5f793be11",
                          "typeString": "literal_string \"invalid celestial type\""
                        },
                        "value": "invalid celestial type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9380bd1c6834786de94a4c7af476e28c94b94079bc9a21cfb1643c5f793be11",
                          "typeString": "literal_string \"invalid celestial type\""
                        }
                      ],
                      "id": 365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5262:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5262:193:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "5262:193:19"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 380,
                        "name": "tokenTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "5465:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 382,
                      "indexExpression": {
                        "id": 381,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "5476:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5465:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 383,
                      "name": "celestialType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "5487:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5465:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "5465:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 387,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "5520:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 388,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "5524:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 386,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3897,
                        3926
                      ],
                      "referencedDeclaration": 3897,
                      "src": "5510:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5510:22:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "5510:22:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 392,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "5560:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5566:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 391,
                      "name": "setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3700,
                      "src": "5542:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5542:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "5542:29:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 397,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "5606:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 398,
                        "name": "celestialType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "5615:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 396,
                      "name": "onCelestialRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "5586:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5586:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "EmitStatement",
                  "src": "5581:48:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 402,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "5663:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 401,
                      "name": "onCelestialCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "5644:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5644:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "EmitStatement",
                  "src": "5639:32:19"
                }
              ]
            },
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createCelestial",
            "nameLocation": "4675:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4709:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4701:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4729:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4721:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4721:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "celestialType",
                  "nameLocation": "4754:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4746:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4746:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4691:82:19"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4783:0:19"
            },
            "scope": 937,
            "src": "4666:1012:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "5843:316:19",
              "statements": [
                {
                  "body": {
                    "id": 443,
                    "nodeType": "Block",
                    "src": "5887:112:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 429,
                            "name": "CelestialsMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5901:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5921:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5901:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 432,
                        "nodeType": "ExpressionStatement",
                        "src": "5901:21:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 434,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "5953:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 435,
                                "name": "tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "5957:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 437,
                              "indexExpression": {
                                "id": 436,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 420,
                                "src": "5966:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5957:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 438,
                                "name": "celestialTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 414,
                                "src": "5970:14:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 440,
                              "indexExpression": {
                                "id": 439,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 420,
                                "src": "5985:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5970:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 433,
                            "name": "_createCelestial",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "5936:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5936:52:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 442,
                        "nodeType": "ExpressionStatement",
                        "src": "5936:52:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 423,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "5873:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 424,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "5877:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5873:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 444,
                  "initializationExpression": {
                    "assignments": [
                      420
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 420,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5866:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "5858:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 419,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5858:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 422,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5870:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5858:13:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5882:3:19",
                      "subExpression": {
                        "id": 426,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "5882:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 428,
                    "nodeType": "ExpressionStatement",
                    "src": "5882:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "5853:146:19"
                }
              ]
            },
            "id": 446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createCelestials",
            "nameLocation": "5693:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "5728:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5720:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5720:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "5758:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5741:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 409,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5741:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 410,
                    "nodeType": "ArrayTypeName",
                    "src": "5741:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "celestialTypes",
                  "nameLocation": "5793:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5776:31:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 412,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5776:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 413,
                    "nodeType": "ArrayTypeName",
                    "src": "5776:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5825:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5817:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5817:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5710:123:19"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5843:0:19"
            },
            "scope": 937,
            "src": "5684:475:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3593
            ],
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "6297:256:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 456,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "6336:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 455,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3841,
                          "src": "6328:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6328:16:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6358:49:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6307:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6307:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "6307:110:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 465,
                              "name": "_baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                182
                              ],
                              "referencedDeclaration": 182,
                              "src": "6487:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view returns (string memory)"
                              }
                            },
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6487:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2f",
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6499:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            "value": "/"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 468,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "6504:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5070,
                              "src": "6504:16:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6504:18:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a736f6e",
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6524:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            },
                            "value": ".json"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            }
                          ],
                          "expression": {
                            "id": 463,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6470:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6470:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6470:62:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6446:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 461,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6446:6:19",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6446:100:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 453,
                  "id": 474,
                  "nodeType": "Return",
                  "src": "6427:119:19"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "6174:8:19",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 450,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6252:8:19"
            },
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6191:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "6183:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6183:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6182:17:19"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "6278:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6277:15:19"
            },
            "scope": 937,
            "src": "6165:388:19",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "6807:1528:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 494,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "6866:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6880:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6866:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d697373696e6720726f6f74",
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6883:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55d544494830fe3d7f2c2ae7a6276f2264d517f1283542c86a8e66a19083c310",
                          "typeString": "literal_string \"missing root\""
                        },
                        "value": "missing root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55d544494830fe3d7f2c2ae7a6276f2264d517f1283542c86a8e66a19083c310",
                          "typeString": "literal_string \"missing root\""
                        }
                      ],
                      "id": 493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6858:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6858:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "6858:40:19"
                },
                {
                  "assignments": [
                    501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 501,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "7110:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 577,
                      "src": "7102:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 500,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7102:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 509,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 505,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3001,
                              "src": "7144:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7144:12:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 503,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7127:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7127:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7127:30:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 502,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7117:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7117:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7102:56:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 513,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "7208:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 514,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "7222:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 515,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "7234:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 511,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2762,
                            "src": "7189:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$2762_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2761,
                          "src": "7189:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7189:50:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206164647265737320646f6573206e6f742068617665207065726d697373696f6e",
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7253:39:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76f77a4f40a688e4487c8292cc8b78bbd2b964569779d8e1775f3a511530673",
                          "typeString": "literal_string \"this address does not have permission\""
                        },
                        "value": "this address does not have permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76f77a4f40a688e4487c8292cc8b78bbd2b964569779d8e1775f3a511530673",
                          "typeString": "literal_string \"this address does not have permission\""
                        }
                      ],
                      "id": 510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7168:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7168:134:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "7168:134:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 521,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 482,
                              "src": "7378:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7385:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7378:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 524,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 482,
                              "src": "7390:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7397:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "7390:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7378:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 528,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "7402:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7409:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "7402:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7378:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e74697479206d7573742062652031206f722035206f72203130",
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7425:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        },
                        "value": "quantity must be 1 or 5 or 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        }
                      ],
                      "id": 520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7357:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "7357:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 536,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "7497:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 537,
                              "name": "tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "7504:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7504:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7497:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 540,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "7523:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 541,
                              "name": "celestialTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "7530:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7530:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7523:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7497:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206d75737420626520657175616c20746f20717479",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7565:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        },
                        "value": "Length of the amount of the nft must be equal to qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7476:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7476:153:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "7476:153:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 549,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8053:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8053:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 551,
                            "name": "CELESTIAL_PRICE_WHITELIST",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "8066:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 552,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "8094:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8066:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8053:44:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682041564158",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8111:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        },
                        "value": "not enough AVAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8032:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8032:106:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "8032:106:19"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 558,
                      "name": "CelestialsMintedWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "8149:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 559,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "8178:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8149:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "8149:32:19"
                },
                {
                  "expression": {
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 562,
                        "name": "whitelistClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "8191:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 565,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 563,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "8208:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8208:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8191:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 566,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "8225:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8191:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "8191:37:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 570,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "8284:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 571,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "8289:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 572,
                        "name": "celestialTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "8299:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 573,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "8315:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8315:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 569,
                      "name": "_createCelestials",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "8266:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256[] memory,uint256[] memory,address)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "8266:62:19"
                }
              ]
            },
            "documentation": {
              "id": 477,
              "nodeType": "StructuredDocumentation",
              "src": "6559:36:19",
              "text": " @dev GEN0 minting"
            },
            "functionSelector": "7b82fda6",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 491,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 490,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2085,
                  "src": "6793:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "6793:13:19"
              }
            ],
            "name": "mintCelestialWhitelist",
            "nameLocation": "6609:22:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "6660:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6641:31:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 478,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6641:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 479,
                    "nodeType": "ArrayTypeName",
                    "src": "6641:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "6690:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6682:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6682:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "6720:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6703:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 483,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6703:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 484,
                    "nodeType": "ArrayTypeName",
                    "src": "6703:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "celestialTypes",
                  "nameLocation": "6755:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6738:31:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 486,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6738:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 487,
                    "nodeType": "ArrayTypeName",
                    "src": "6738:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6631:144:19"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6807:0:19"
            },
            "scope": 937,
            "src": "6600:1735:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "8547:859:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 593,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "8644:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8651:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8644:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 596,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "8656:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8663:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "8656:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8644:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 600,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "8668:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8675:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "8668:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8644:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e74697479206d7573742062652031206f722035206f72203130",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8691:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        },
                        "value": "quantity must be 1 or 5 or 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        }
                      ],
                      "id": 592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8623:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8623:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "8623:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 608,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "8763:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 609,
                              "name": "tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "8770:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8770:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8763:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 612,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "8789:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 613,
                              "name": "celestialTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "8796:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8796:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8789:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8763:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206d75737420626520657175616c20746f20717479",
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8831:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        },
                        "value": "Length of the amount of the nft must be equal to qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        }
                      ],
                      "id": 607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8742:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8742:153:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "8742:153:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 621,
                                "name": "CelestialsMintedWithAVAX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "8927:24:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 622,
                                "name": "qty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 581,
                                "src": "8954:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8927:30:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 624,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8926:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 625,
                                "name": "NUM_GEN0_CELESTIAL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "8979:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 626,
                                "name": "CelestialsMintedWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "9000:25:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8979:46:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 628,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8978:48:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8926:100:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e2774206d696e742074686174206d616e79207269676874206e6f77",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9040:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19ec9320f1e7ba3c9feca046f8317d8407143de9371f4c78a9700950158cbe1d",
                          "typeString": "literal_string \"you can't mint that many right now\""
                        },
                        "value": "you can't mint that many right now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19ec9320f1e7ba3c9feca046f8317d8407143de9371f4c78a9700950158cbe1d",
                          "typeString": "literal_string \"you can't mint that many right now\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8905:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8905:181:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "8905:181:19"
                },
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "transactionCost",
                      "nameLocation": "9147:15:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 659,
                      "src": "9139:23:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9139:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 638,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 635,
                      "name": "CELESTIAL_PRICE_AVAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "9165:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 636,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "9188:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9165:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9139:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 640,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9209:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9209:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 642,
                          "name": "transactionCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "9222:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9209:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682041564158",
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9239:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        },
                        "value": "not enough AVAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a593fc8340a3d54ad4047fa4528eb6e9aa507c406726633d0be73921877f47",
                          "typeString": "literal_string \"not enough AVAX\""
                        }
                      ],
                      "id": 639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9201:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9201:56:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "9201:56:19"
                },
                {
                  "expression": {
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 647,
                      "name": "CelestialsMintedWithAVAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "9268:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 648,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "9296:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9268:31:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "9268:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 652,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "9355:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 653,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "9360:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 654,
                        "name": "celestialTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "9370:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 655,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "9386:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9386:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 651,
                      "name": "_createCelestials",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "9337:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256[] memory,uint256[] memory,address)"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9337:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "9337:62:19"
                }
              ]
            },
            "documentation": {
              "id": 579,
              "nodeType": "StructuredDocumentation",
              "src": "8341:36:19",
              "text": " @dev GEN0 minting"
            },
            "functionSelector": "a7d5ec2d",
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 589,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2085,
                  "src": "8533:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "8533:13:19"
              }
            ],
            "name": "mintCelestialWithAVAX",
            "nameLocation": "8391:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "8430:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "8422:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8422:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "8460:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "8443:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 582,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8443:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 583,
                    "nodeType": "ArrayTypeName",
                    "src": "8443:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "celestialTypes",
                  "nameLocation": "8495:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "8478:31:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 585,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8478:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 586,
                    "nodeType": "ArrayTypeName",
                    "src": "8478:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8412:103:19"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8547:0:19"
            },
            "scope": 937,
            "src": "8382:1024:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "9610:1238:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 675,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "9707:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9714:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9707:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 678,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "9719:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9726:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "9719:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9707:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 682,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "9731:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9738:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "9731:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9707:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e74697479206d7573742062652031206f722035206f72203130",
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9754:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        },
                        "value": "quantity must be 1 or 5 or 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_462d765360081e6684eedf254868efcb42da847153552d864fda8d049788b6f8",
                          "typeString": "literal_string \"quantity must be 1 or 5 or 10\""
                        }
                      ],
                      "id": 674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9686:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9686:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "9686:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 690,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "9826:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 691,
                              "name": "tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "9833:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9833:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9826:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 694,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "9852:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 695,
                              "name": "celestialTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "9859:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9859:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9852:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9826:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206d75737420626520657175616c20746f20717479",
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9894:54:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        },
                        "value": "Length of the amount of the nft must be equal to qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a4c2f9ce88097012f5cab026ecd8f926ab1648474a6635c4955c2cf0b2eea4a",
                          "typeString": "literal_string \"Length of the amount of the nft must be equal to qty\""
                        }
                      ],
                      "id": 689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9805:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9805:153:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "9805:153:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 703,
                                "name": "CelestialsMintedWithAVAX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "9990:24:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 704,
                                "name": "qty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 663,
                                "src": "10017:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9990:30:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 706,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9989:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 707,
                                "name": "NUM_GEN0_CELESTIAL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "10042:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 708,
                                "name": "CelestialsMintedWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "10063:25:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10042:46:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 710,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10041:48:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9989:100:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e2774206d696e742074686174206d616e79207269676874206e6f77",
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10103:36:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19ec9320f1e7ba3c9feca046f8317d8407143de9371f4c78a9700950158cbe1d",
                          "typeString": "literal_string \"you can't mint that many right now\""
                        },
                        "value": "you can't mint that many right now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19ec9320f1e7ba3c9feca046f8317d8407143de9371f4c78a9700950158cbe1d",
                          "typeString": "literal_string \"you can't mint that many right now\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9968:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9968:181:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "9968:181:19"
                },
                {
                  "assignments": [
                    716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 716,
                      "mutability": "mutable",
                      "name": "transactionCostSOUL",
                      "nameLocation": "10207:19:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "10199:27:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 715,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10199:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 720,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 717,
                      "name": "currentSOULMintCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "10229:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 718,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "10251:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10229:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10199:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 724,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3001,
                                "src": "10300:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10300:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 722,
                              "name": "soul",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "10285:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Soul_$2972",
                                "typeString": "contract Soul"
                              }
                            },
                            "id": 723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4333,
                            "src": "10285:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10285:28:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 727,
                          "name": "transactionCostSOUL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "10317:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10285:51:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820534f554c",
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10350:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df5bacba8cec89c37b47088e669ec7ed71c9134fa429775736764cd7ce8aa24e",
                          "typeString": "literal_string \"not enough SOUL\""
                        },
                        "value": "not enough SOUL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df5bacba8cec89c37b47088e669ec7ed71c9134fa429775736764cd7ce8aa24e",
                          "typeString": "literal_string \"not enough SOUL\""
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10264:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10264:113:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "10264:113:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 732,
                        "name": "CelestialsMintedWithSOUL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "10405:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 733,
                        "name": "CELESTIAL_PER_SOUL_MINT_LEVEL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "10433:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10405:57:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 735,
                          "name": "CelestialsMintedWithSOUL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "10478:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 736,
                          "name": "qty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 663,
                          "src": "10505:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10478:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 738,
                        "name": "CELESTIAL_PER_SOUL_MINT_LEVEL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "10511:29:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10478:62:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10405:135:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 748,
                  "nodeType": "IfStatement",
                  "src": "10388:233:19",
                  "trueBody": {
                    "id": 747,
                    "nodeType": "Block",
                    "src": "10551:70:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 741,
                            "name": "currentSOULMintCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "10565:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 742,
                              "name": "currentSOULMintCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "10587:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10609:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "10587:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10565:45:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 746,
                        "nodeType": "ExpressionStatement",
                        "src": "10565:45:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 749,
                      "name": "CelestialsMintedWithSOUL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "10631:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 750,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "10659:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10631:31:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "10631:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 756,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "10708:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10708:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 758,
                        "name": "transactionCostSOUL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "10722:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 753,
                        "name": "soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "10694:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Soul_$2972",
                          "typeString": "contract Soul"
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2943,
                      "src": "10694:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10694:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "10694:48:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 762,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "10797:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 763,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "10802:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 764,
                        "name": "celestialTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "10812:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 765,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "10828:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10828:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 761,
                      "name": "_createCelestials",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "10779:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256[] memory,uint256[] memory,address)"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10779:62:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "10779:62:19"
                }
              ]
            },
            "documentation": {
              "id": 661,
              "nodeType": "StructuredDocumentation",
              "src": "9412:36:19",
              "text": " @dev GEN0 minting"
            },
            "functionSelector": "1dbb64ba",
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 672,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 671,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2085,
                  "src": "9596:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "9596:13:19"
              }
            ],
            "name": "mintCelestialWithSoul",
            "nameLocation": "9462:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "9501:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "9493:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9493:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "9531:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "9514:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 664,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9514:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 665,
                    "nodeType": "ArrayTypeName",
                    "src": "9514:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "celestialTypes",
                  "nameLocation": "9566:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "9549:31:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 667,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9549:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 668,
                    "nodeType": "ArrayTypeName",
                    "src": "9549:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9483:103:19"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9610:0:19"
            },
            "scope": 937,
            "src": "9453:1395:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "10972:472:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 781,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 772,
                              "src": "11000:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 780,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3503,
                            "src": "10990:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10990:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11010:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10990:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265206973206e6f206e667420696e20796f75722062616c616e6365",
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11013:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        },
                        "value": "there is no nft in your balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        }
                      ],
                      "id": 779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10982:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10982:65:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "10982:65:19"
                },
                {
                  "assignments": [
                    789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 789,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "11065:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "11057:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 788,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11057:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 793,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 791,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "11085:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 790,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3503,
                      "src": "11075:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11075:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11057:35:19"
                },
                {
                  "assignments": [
                    798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "11125:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "11102:26:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Celestial.CelestialInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 796,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 795,
                            "name": "CelestialInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "11102:13:19"
                          },
                          "referencedDeclaration": 25,
                          "src": "11102:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                            "typeString": "struct Celestial.CelestialInfo"
                          }
                        },
                        "id": 797,
                        "nodeType": "ArrayTypeName",
                        "src": "11102:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Celestial.CelestialInfo[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 803,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "11151:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11131:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Celestial.CelestialInfo memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 800,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 799,
                            "name": "CelestialInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "11135:13:19"
                          },
                          "referencedDeclaration": 25,
                          "src": "11135:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                            "typeString": "struct Celestial.CelestialInfo"
                          }
                        },
                        "id": 801,
                        "nodeType": "ArrayTypeName",
                        "src": "11135:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Celestial.CelestialInfo[]"
                        }
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11131:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Celestial.CelestialInfo memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11102:57:19"
                },
                {
                  "body": {
                    "id": 834,
                    "nodeType": "Block",
                    "src": "11207:211:19",
                    "statements": [
                      {
                        "assignments": [
                          817
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 817,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "11229:7:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 834,
                            "src": "11221:15:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 816,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11221:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 822,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 819,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 772,
                              "src": "11259:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 820,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "11267:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 818,
                            "name": "tokenOfOwnerByIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2431,
                            "src": "11239:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11239:30:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11221:48:19"
                      },
                      {
                        "expression": {
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 823,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 798,
                              "src": "11283:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Celestial.CelestialInfo memory[] memory"
                              }
                            },
                            "id": 825,
                            "indexExpression": {
                              "id": 824,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "11287:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11283:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                              "typeString": "struct Celestial.CelestialInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 827,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "11333:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 828,
                                  "name": "tokenTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "11373:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 830,
                                "indexExpression": {
                                  "id": 829,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 817,
                                  "src": "11384:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11373:19:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 826,
                              "name": "CelestialInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "11292:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_CelestialInfo_$25_storage_ptr_$",
                                "typeString": "type(struct Celestial.CelestialInfo storage pointer)"
                              }
                            },
                            "id": 831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "tokenId",
                              "celestialType"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11292:115:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                              "typeString": "struct Celestial.CelestialInfo memory"
                            }
                          },
                          "src": "11283:124:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                            "typeString": "struct Celestial.CelestialInfo memory"
                          }
                        },
                        "id": 833,
                        "nodeType": "ExpressionStatement",
                        "src": "11283:124:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 810,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "11189:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 811,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 789,
                      "src": "11193:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11189:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 835,
                  "initializationExpression": {
                    "assignments": [
                      807
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11182:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "11174:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11174:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 809,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11186:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11174:13:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11202:3:19",
                      "subExpression": {
                        "id": 813,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "11202:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 815,
                    "nodeType": "ExpressionStatement",
                    "src": "11202:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "11169:249:19"
                },
                {
                  "expression": {
                    "id": 836,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 798,
                    "src": "11434:3:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Celestial.CelestialInfo memory[] memory"
                    }
                  },
                  "functionReturnParameters": 778,
                  "id": 837,
                  "nodeType": "Return",
                  "src": "11427:10:19"
                }
              ]
            },
            "functionSelector": "9ea6db3d",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CelestialsOfOwner",
            "nameLocation": "10863:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "10889:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10881:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10881:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10880:16:19"
            },
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10944:22:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Celestial.CelestialInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 775,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 774,
                        "name": "CelestialInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25,
                        "src": "10944:13:19"
                      },
                      "referencedDeclaration": 25,
                      "src": "10944:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                        "typeString": "struct Celestial.CelestialInfo"
                      }
                    },
                    "id": 776,
                    "nodeType": "ArrayTypeName",
                    "src": "10944:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Celestial.CelestialInfo[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10943:24:19"
            },
            "scope": 937,
            "src": "10854:590:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "11587:743:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 851,
                          "name": "_page",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "11605:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11614:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11605:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265206973206e6f206e656765746976652070616765",
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11617:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dab7535309f8e96f0a86d1d1b8d3907ad06fc80f1e0f10d52e69a440ee115aa",
                          "typeString": "literal_string \"there is no negetive page\""
                        },
                        "value": "there is no negetive page"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dab7535309f8e96f0a86d1d1b8d3907ad06fc80f1e0f10d52e69a440ee115aa",
                          "typeString": "literal_string \"there is no negetive page\""
                        }
                      ],
                      "id": 850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11597:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11597:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "11597:48:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 859,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "11673:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 858,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3503,
                            "src": "11663:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11663:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11683:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11663:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265206973206e6f206e667420696e20796f75722062616c616e6365",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11686:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        },
                        "value": "there is no nft in your balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04ed1fde57955eb71592914308f5a04f842e091c2d403f96496ce08e63f1386f",
                          "typeString": "literal_string \"there is no nft in your balance\""
                        }
                      ],
                      "id": 857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11655:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11655:65:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "11655:65:19"
                },
                {
                  "assignments": [
                    870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 870,
                      "mutability": "mutable",
                      "name": "celestials",
                      "nameLocation": "11753:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 935,
                      "src": "11730:33:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Celestial.CelestialInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 868,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 867,
                            "name": "CelestialInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "11730:13:19"
                          },
                          "referencedDeclaration": 25,
                          "src": "11730:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                            "typeString": "struct Celestial.CelestialInfo"
                          }
                        },
                        "id": 869,
                        "nodeType": "ArrayTypeName",
                        "src": "11730:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Celestial.CelestialInfo[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 877,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11786:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11766:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Celestial.CelestialInfo memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 872,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 871,
                            "name": "CelestialInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "11770:13:19"
                          },
                          "referencedDeclaration": 25,
                          "src": "11770:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                            "typeString": "struct Celestial.CelestialInfo"
                          }
                        },
                        "id": 873,
                        "nodeType": "ArrayTypeName",
                        "src": "11770:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Celestial.CelestialInfo[]"
                        }
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11766:22:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Celestial.CelestialInfo memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11730:58:19"
                },
                {
                  "assignments": [
                    879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 879,
                      "mutability": "mutable",
                      "name": "StartPoint",
                      "nameLocation": "11806:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 935,
                      "src": "11798:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 878,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11798:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 880,
                      "name": "_page",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "11819:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11827:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "11819:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11798:30:19"
                },
                {
                  "assignments": [
                    885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 885,
                      "mutability": "mutable",
                      "name": "EndPoint",
                      "nameLocation": "11846:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 935,
                      "src": "11838:16:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11838:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 889,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 886,
                      "name": "StartPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 879,
                      "src": "11857:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11870:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "11857:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11838:33:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 890,
                      "name": "EndPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 885,
                      "src": "11886:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 892,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 841,
                          "src": "11907:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 891,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3503,
                        "src": "11897:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11897:17:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11886:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 902,
                  "nodeType": "IfStatement",
                  "src": "11882:87:19",
                  "trueBody": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "11916:53:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 895,
                            "name": "EndPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 885,
                            "src": "11930:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 897,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 841,
                                "src": "11951:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 896,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3503,
                              "src": "11941:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11941:17:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11930:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 900,
                        "nodeType": "ExpressionStatement",
                        "src": "11930:28:19"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "12026:271:19",
                    "statements": [
                      {
                        "assignments": [
                          914
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 914,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "12048:7:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 931,
                            "src": "12040:15:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 913,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12040:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 919,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 916,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "12078:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 917,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "12086:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 915,
                            "name": "tokenOfOwnerByIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2431,
                            "src": "12058:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12058:30:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12040:48:19"
                      },
                      {
                        "expression": {
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 920,
                              "name": "celestials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 870,
                              "src": "12155:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Celestial.CelestialInfo memory[] memory"
                              }
                            },
                            "id": 922,
                            "indexExpression": {
                              "id": 921,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "12166:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12155:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                              "typeString": "struct Celestial.CelestialInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 924,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 914,
                                "src": "12212:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 925,
                                  "name": "tokenTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "12252:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 927,
                                "indexExpression": {
                                  "id": 926,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 914,
                                  "src": "12263:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12252:19:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 923,
                              "name": "CelestialInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "12171:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_CelestialInfo_$25_storage_ptr_$",
                                "typeString": "type(struct Celestial.CelestialInfo storage pointer)"
                              }
                            },
                            "id": 928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "tokenId",
                              "celestialType"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "12171:115:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                              "typeString": "struct Celestial.CelestialInfo memory"
                            }
                          },
                          "src": "12155:131:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CelestialInfo_$25_memory_ptr",
                            "typeString": "struct Celestial.CelestialInfo memory"
                          }
                        },
                        "id": 930,
                        "nodeType": "ExpressionStatement",
                        "src": "12155:131:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 907,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "12007:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 908,
                      "name": "EndPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 885,
                      "src": "12011:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12007:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "initializationExpression": {
                    "assignments": [
                      904
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 904,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11991:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "11983:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 903,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11983:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 906,
                    "initialValue": {
                      "id": 905,
                      "name": "StartPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 879,
                      "src": "11995:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11983:22:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12021:3:19",
                      "subExpression": {
                        "id": 910,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "12021:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 912,
                    "nodeType": "ExpressionStatement",
                    "src": "12021:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "11978:319:19"
                },
                {
                  "expression": {
                    "id": 933,
                    "name": "celestials",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 870,
                    "src": "12313:10:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Celestial.CelestialInfo memory[] memory"
                    }
                  },
                  "functionReturnParameters": 849,
                  "id": 934,
                  "nodeType": "Return",
                  "src": "12306:17:19"
                }
              ]
            },
            "functionSelector": "e7c235b9",
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bachedCelestialsOfOwner",
            "nameLocation": "11459:23:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "11491:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "11483:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11483:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "_page",
                  "nameLocation": "11507:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "11499:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11499:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11482:31:19"
            },
            "returnParameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 848,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "11559:22:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Celestial.CelestialInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 846,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 845,
                        "name": "CelestialInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25,
                        "src": "11559:13:19"
                      },
                      "referencedDeclaration": 25,
                      "src": "11559:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CelestialInfo_$25_storage_ptr",
                        "typeString": "struct Celestial.CelestialInfo"
                      }
                    },
                    "id": 847,
                    "nodeType": "ArrayTypeName",
                    "src": "11559:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CelestialInfo_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Celestial.CelestialInfo[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11558:24:19"
            },
            "scope": 937,
            "src": "11450:880:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 938,
        "src": "408:11924:19",
        "usedErrors": []
      }
    ],
    "src": "37:12296:19"
  },
  "bytecode": "608060405269043c33c1937564800000600b5560006015553480156200002457600080fd5b5060405162003bdd38038062003bdd83398101604081905262000047916200027c565b6040518060400160405280601481526020017f43656c65737469616c2056657273652047616d650000000000000000000000008152506040518060400160405280601481526020017f43454c45535449414c2d56455253452d47414d450000000000000000000000008152508160009080519060200190620000cb929190620001a3565b508051620000e1906001906020840190620001a3565b505050620000fe620000f86200014d60201b60201c565b62000151565b600a805460ff60a01b19169055600060155581516200012590600f906020850190620001a3565b50600c80546001600160a01b0319166001600160a01b039290921691909117905550620003a9565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001b1906200036d565b90600052602060002090601f016020900481019282620001d5576000855562000220565b82601f10620001f057805160ff191683800117855562000220565b8280016001018555821562000220579182015b828111156200022057825182559160200191906001019062000203565b506200022e92915062000232565b5090565b5b808211156200022e576000815560010162000233565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200027757600080fd5b919050565b600080604083850312156200029057600080fd5b82516001600160401b0380821115620002a857600080fd5b818501915085601f830112620002bd57600080fd5b815181811115620002d257620002d262000249565b604051601f8201601f19908116603f01168101908382118183101715620002fd57620002fd62000249565b816040528281526020935088848487010111156200031a57600080fd5b600091505b828210156200033e57848201840151818301850152908301906200031f565b82821115620003505760008484830101525b9550620003629150508582016200025f565b925050509250929050565b600181811c908216806200038257607f821691505b602082108103620003a357634e487b7160e01b600052602260045260246000fd5b50919050565b61382480620003b96000396000f3fe6080604052600436106103765760003560e01c80637cb64759116101d1578063bc7d403411610102578063e7b27af7116100a0578063e9f169f71161006f578063e9f169f7146109c0578063f2fde38b146109d6578063f7be4f11146109f6578063ff2a765614610a0b57600080fd5b8063e7b27af71461092b578063e7c235b914610941578063e7d97e5214610961578063e985e9c51461097757600080fd5b8063dbddb26a116100dc578063dbddb26a146108c1578063dc9f9f96146108d6578063de20bc92146108eb578063e2ea13191461090b57600080fd5b8063bc7d403414610854578063c87b56dd14610874578063db4bec441461089457600080fd5b8063a377d7ef1161016f578063a7d5ec2d11610149578063a7d5ec2d146107f3578063aeb5cd5e14610806578063b4fad9af14610819578063b88d4fde1461083457600080fd5b8063a377d7ef146107b2578063a682f862146107c7578063a756a1df146107dd57600080fd5b806395d89b41116101ab57806395d89b411461073a5780639b76dbca1461074f5780639ea6db3d14610765578063a22cb4651461079257600080fd5b80637cb64759146106dc578063815b7a8c146106fc5780638da5cb5b1461071c57600080fd5b80633c1d4de7116102ab5780636352211e1161024957806370a082311161022357806370a082311461067e578063715018a61461069e57806373033bda146106b35780637b82fda6146106c957600080fd5b80636352211e1461063257806365e940a2146106525780636b9881761461066857600080fd5b806343f37b981161028557806343f37b98146105b35780634f6ccce7146105d357806355f804b3146105f35780635c975abb1461061357600080fd5b80633c1d4de7146105535780634036ab781461057357806342842e0e1461059357600080fd5b8063200ed855116103185780632cfb18b1116102f25780632cfb18b1146104d55780632eb4a7ab146104f05780632f745c591461050657806333f6832a1461052657600080fd5b8063200ed8551461048057806323b872dd146104a05780632b95b732146104c057600080fd5b8063095ea7b311610354578063095ea7b31461040a57806311a2428a1461042c57806318160ddd146104415780631dbb64ba1461046057600080fd5b806301ffc9a71461037b57806306fdde03146103b0578063081812fc146103d2575b600080fd5b34801561038757600080fd5b5061039b610396366004612e70565b610a21565b60405190151581526020015b60405180910390f35b3480156103bc57600080fd5b506103c5610a4c565b6040516103a79190612ee5565b3480156103de57600080fd5b506103f26103ed366004612ef8565b610ade565b6040516001600160a01b0390911681526020016103a7565b34801561041657600080fd5b5061042a610425366004612f26565b610b6b565b005b34801561043857600080fd5b5061039b610c80565b34801561044d57600080fd5b506008545b6040519081526020016103a7565b34801561046c57600080fd5b5061042a61047b36600461300e565b610c9c565b34801561048c57600080fd5b5061042a61049b366004612ef8565b610f0c565b3480156104ac57600080fd5b5061042a6104bb36600461307b565b610f8b565b3480156104cc57600080fd5b50610452600281565b3480156104e157600080fd5b5061045266049e57d635400081565b3480156104fc57600080fd5b5061045260105481565b34801561051257600080fd5b50610452610521366004612f26565b610fbc565b34801561053257600080fd5b50610452610541366004612ef8565b60186020526000908152604090205481565b34801561055f57600080fd5b5061042a61056e366004612ef8565b611052565b34801561057f57600080fd5b5061045261058e366004612ef8565b6110d1565b34801561059f57600080fd5b5061042a6105ae36600461307b565b611132565b3480156105bf57600080fd5b5061042a6105ce3660046130bc565b61114d565b3480156105df57600080fd5b506104526105ee366004612ef8565b61118b565b3480156105ff57600080fd5b5061042a61060e3660046130fe565b61121e565b34801561061f57600080fd5b50600a54600160a01b900460ff1661039b565b34801561063e57600080fd5b506103f261064d366004612ef8565b611254565b34801561065e57600080fd5b5061045260125481565b34801561067457600080fd5b5061045261138881565b34801561068a57600080fd5b50610452610699366004613170565b6112cb565b3480156106aa57600080fd5b5061042a611352565b3480156106bf57600080fd5b5061045261271081565b61042a6106d736600461318d565b611388565b3480156106e857600080fd5b5061042a6106f7366004612ef8565b6115a9565b34801561070857600080fd5b50600c546103f2906001600160a01b031681565b34801561072857600080fd5b50600a546001600160a01b03166103f2565b34801561074657600080fd5b506103c56115d8565b34801561075b57600080fd5b5061045260155481565b34801561077157600080fd5b50610785610780366004613170565b6115e7565b6040516103a79190613253565b34801561079e57600080fd5b5061042a6107ad3660046132b0565b61172b565b3480156107be57600080fd5b5061039b6117ef565b3480156107d357600080fd5b5061045260165481565b3480156107e957600080fd5b50610452613a9881565b61042a61080136600461300e565b611809565b61042a610814366004612ef8565b611929565b34801561082557600080fd5b506104526605543df729c00081565b34801561084057600080fd5b5061042a61084f3660046132e9565b611a03565b34801561086057600080fd5b50600d546103f2906001600160a01b031681565b34801561088057600080fd5b506103c561088f366004612ef8565b611a35565b3480156108a057600080fd5b506104526108af366004613170565b60116020526000908152604090205481565b3480156108cd57600080fd5b506103c5611adc565b3480156108e257600080fd5b50610452600181565b3480156108f757600080fd5b50600e546103f2906001600160a01b031681565b34801561091757600080fd5b5061042a610926366004613170565b611b6a565b34801561093757600080fd5b5061045260175481565b34801561094d57600080fd5b5061078561095c366004612f26565b611bb6565b34801561096d57600080fd5b50610452600b5481565b34801561098357600080fd5b5061039b6109923660046133ad565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109cc57600080fd5b5061045260135481565b3480156109e257600080fd5b5061042a6109f1366004613170565b611d07565b348015610a0257600080fd5b50610452600381565b348015610a1757600080fd5b5061045260145481565b60006001600160e01b0319821663780e9d6360e01b1480610a465750610a4682611da2565b92915050565b606060008054610a5b906133db565b80601f0160208091040260200160405190810160405280929190818152602001828054610a87906133db565b8015610ad45780601f10610aa957610100808354040283529160200191610ad4565b820191906000526020600020905b815481529060010190602001808311610ab757829003601f168201915b5050505050905090565b6000610ae982611df2565b610b4f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610b7682611254565b9050806001600160a01b0316836001600160a01b031603610be35760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b46565b336001600160a01b0382161480610bff5750610bff8133610992565b610c715760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b46565b610c7b8383611e0f565b505050565b6000601754600014158015610c9757506017544210155b905090565b600a54600160a01b900460ff1615610cc65760405162461bcd60e51b8152600401610b4690613415565b8260011480610cd55750826005145b80610ce0575082600a145b610cfc5760405162461bcd60e51b8152600401610b469061343f565b815183148015610d0c5750805183145b610d285760405162461bcd60e51b8152600401610b4690613476565b601454610d37906127106134e0565b83601254610d4591906134f7565b1115610d635760405162461bcd60e51b8152600401610b469061350f565b600083600b54610d739190613551565b600c5490915081906001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df29190613570565b1015610e325760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da0814d3d553608a1b6044820152606401610b46565b61138860135411158015610e54575061138884601354610e5291906134f7565b115b15610e6b57600b54610e67906002613551565b600b555b8360136000828254610e7d91906134f7565b9091555050600c546001600160a01b03166379cc6790336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b158015610edc57600080fd5b505af1158015610ef0573d6000803e3d6000fd5b50505050610f06848484610f013390565b611e7d565b50505050565b600a546001600160a01b03163314610f365760405162461bcd60e51b8152600401610b4690613589565b42811015610f865760405162461bcd60e51b815260206004820152601f60248201527f737461727454696d652063616e6e6f7420626520696e207468652070617374006044820152606401610b46565b601755565b610f953382611ef8565b610fb15760405162461bcd60e51b8152600401610b46906135be565b610c7b838383611fe2565b6000610fc7836112cb565b82106110295760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b46565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b0316331461107c5760405162461bcd60e51b8152600401610b4690613589565b428110156110cc5760405162461bcd60e51b815260206004820152601f60248201527f737461727454696d652063616e6e6f7420626520696e207468652070617374006044820152606401610b46565b601655565b60006110dc82611df2565b61111f5760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610b46565b5060009081526018602052604090205490565b610c7b83838360405180602001604052806000815250611a03565b600a546001600160a01b031633146111775760405162461bcd60e51b8152600401610b4690613589565b610c7b6001600160a01b038416828461218d565b600061119660085490565b82106111f95760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b46565b6008828154811061120c5761120c61360f565b90600052602060002001549050919050565b600a546001600160a01b031633146112485760405162461bcd60e51b8152600401610b4690613589565b610c7b600f8383612dc1565b6000818152600260205260408120546001600160a01b031680610a465760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b46565b60006001600160a01b0382166113365760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b46565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461137c5760405162461bcd60e51b8152600401610b4690613589565b61138660006121df565b565b600a54600160a01b900460ff16156113b25760405162461bcd60e51b8152600401610b4690613415565b6010546000036113f35760405162461bcd60e51b815260206004820152600c60248201526b1b5a5cdcda5b99c81c9bdbdd60a21b6044820152606401610b46565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061146d868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506010549150849050612231565b6114c75760405162461bcd60e51b815260206004820152602560248201527f74686973206164647265737320646f6573206e6f742068617665207065726d6960448201526439b9b4b7b760d91b6064820152608401610b46565b83600114806114d65750836005145b806114e1575083600a145b6114fd5760405162461bcd60e51b8152600401610b469061343f565b82518414801561150d5750815184145b6115295760405162461bcd60e51b8152600401610b4690613476565b61153a8466049e57d6354000613551565b3410156115595760405162461bcd60e51b8152600401610b4690613625565b836014600082825461156b91906134f7565b9091555050336000908152601160205260408120805486929061158f9084906134f7565b909155506115a1905084848433611e7d565b505050505050565b600a546001600160a01b031633146115d35760405162461bcd60e51b8152600401610b4690613589565b601055565b606060018054610a5b906133db565b606060006115f4836112cb565b116116415760405162461bcd60e51b815260206004820152601f60248201527f7468657265206973206e6f206e667420696e20796f75722062616c616e6365006044820152606401610b46565b600061164c836112cb565b905060008167ffffffffffffffff81111561166957611669612f52565b6040519080825280602002602001820160405280156116ae57816020015b60408051808201909152600080825260208201528152602001906001900390816116875790505b50905060005b828110156117235760006116c88683610fbc565b9050604051806040016040528082815260200160186000848152602001908152602001600020548152508383815181106117045761170461360f565b602002602001018190525050808061171b9061364e565b9150506116b4565b509392505050565b336001600160a01b038316036117835760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b46565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000601654600014158015610c9757505060165442101590565b600a54600160a01b900460ff16156118335760405162461bcd60e51b8152600401610b4690613415565b82600114806118425750826005145b8061184d575082600a145b6118695760405162461bcd60e51b8152600401610b469061343f565b8151831480156118795750805183145b6118955760405162461bcd60e51b8152600401610b4690613476565b6014546118a4906127106134e0565b836012546118b291906134f7565b11156118d05760405162461bcd60e51b8152600401610b469061350f565b60006118e3846605543df729c000613551565b9050803410156119055760405162461bcd60e51b8152600401610b4690613625565b836012600082825461191791906134f7565b90915550610f06905084848433611e7d565b600a546001600160a01b031633146119535760405162461bcd60e51b8152600401610b4690613589565b804710156119735760405162461bcd60e51b8152600401610b4690613625565b6040513390600090829084908381818185875af1925050503d80600081146119b7576040519150601f19603f3d011682016040523d82523d6000602084013e6119bc565b606091505b5050905080610c7b5760405162461bcd60e51b815260206004820152601360248201527208cc2d2d8cac840e8de40e6cadcc84082ac82b606b1b6044820152606401610b46565b611a0d3383611ef8565b611a295760405162461bcd60e51b8152600401610b46906135be565b610f06848484846122e2565b6060611a4082611df2565b611aa45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610b46565b611aac612315565b611ab583612324565b604051602001611ac6929190613667565b6040516020818303038152906040529050919050565b600f8054611ae9906133db565b80601f0160208091040260200160405190810160405280929190818152602001828054611b15906133db565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b505050505081565b600a546001600160a01b03163314611b945760405162461bcd60e51b8152600401610b4690613589565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b60606000611bc3846112cb565b11611c105760405162461bcd60e51b815260206004820152601f60248201527f7468657265206973206e6f206e667420696e20796f75722062616c616e6365006044820152606401610b46565b60408051600580825260c08201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611c285790505090506000611c5e846005613551565b90506000611c6d8260056134f7565b9050611c78866112cb565b811115611c8b57611c88866112cb565b90505b815b81811015611cfc576000611ca18883610fbc565b905060405180604001604052808281526020016018600084815260200190815260200160002054815250858381518110611cdd57611cdd61360f565b6020026020010181905250508080611cf49061364e565b915050611c8d565b509195945050505050565b600a546001600160a01b03163314611d315760405162461bcd60e51b8152600401610b4690613589565b6001600160a01b038116611d965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b46565b611d9f816121df565b50565b60006001600160e01b031982166380ac58cd60e01b1480611dd357506001600160e01b03198216635b5e139f60e01b145b80610a4657506301ffc9a760e01b6001600160e01b0319831614610a46565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611e4482611254565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60005b84811015611ef157600160156000828254611e9b91906134f7565b92505081905550611edf82858381518110611eb857611eb861360f565b6020026020010151858481518110611ed257611ed261360f565b6020026020010151612425565b80611ee98161364e565b915050611e80565b5050505050565b6000611f0382611df2565b611f645760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b46565b6000611f6f83611254565b9050806001600160a01b0316846001600160a01b03161480611faa5750836001600160a01b0316611f9f84610ade565b6001600160a01b0316145b80611fda57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611ff582611254565b6001600160a01b03161461205d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610b46565b6001600160a01b0382166120bf5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b46565b6120ca8383836126a6565b6120d5600082611e0f565b6001600160a01b03831660009081526003602052604081208054600192906120fe9084906134e0565b90915550506001600160a01b038216600090815260036020526040812080546001929061212c9084906134f7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c7b90849061275e565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081815b85518110156122d55760008682815181106122535761225361360f565b602002602001015190508083116122955760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506122c2565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806122cd8161364e565b915050612236565b50831490505b9392505050565b6122ed848484611fe2565b6122f984848484612830565b610f065760405162461bcd60e51b8152600401610b46906136b5565b6060600f8054610a5b906133db565b60608160000361234b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612375578061235f8161364e565b915061236e9050600a8361371d565b915061234f565b60008167ffffffffffffffff81111561239057612390612f52565b6040519080825280601f01601f1916602001820160405280156123ba576020820181803683370190505b5090505b8415611fda576123cf6001836134e0565b91506123dc600a86613731565b6123e79060306134f7565b60f81b8183815181106123fc576123fc61360f565b60200101906001600160f81b031916908160001a90535061241e600a8661371d565b94506123be565b612433613a986127106134f7565b60155411156124845760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f74206d696e7420616e796d6f72652063656c65737469616c7300006044820152606401610b46565b61248d82611df2565b156124da5760405162461bcd60e51b815260206004820181905260248201527f746869732027746f6b656e49642720697320616c726561647920746f6f6b656e6044820152606401610b46565b600182101580156124ed57506127108211155b6125395760405162461bcd60e51b815260206004820152601e60248201527f27746f6b656e496427206d75737420626520696e207468652072616e676500006044820152606401610b46565b600082815260186020526040902054156125a45760405162461bcd60e51b815260206004820152602660248201527f7468617420746f6b656e277320747970652068617320616c7265616479206265604482015265195b881cd95d60d21b6064820152608401610b46565b60018114806125b35750600281145b806125be5750600381145b6126035760405162461bcd60e51b8152602060048201526016602482015275696e76616c69642063656c65737469616c207479706560501b6044820152606401610b46565b600082815260186020526040902081905561261e8383612931565b600e54612635906001600160a01b0316600161172b565b60408051838152602081018390527fc3446d569695aa78750f8132ce4941514489a02c8ca9a2078ee392dccd96474e910160405180910390a16040518281527fb0c73316550069520aa3bffd50be8c7989584da8716295793eda73dbcd1c154c9060200160405180910390a1505050565b6001600160a01b038316612701576126fc81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612724565b816001600160a01b0316836001600160a01b03161461272457612724838261294f565b6001600160a01b03821661273b57610c7b816129ec565b826001600160a01b0316826001600160a01b031614610c7b57610c7b8282612a9b565b60006127b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612adf9092919063ffffffff16565b805190915015610c7b57808060200190518101906127d19190613745565b610c7b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b46565b60006001600160a01b0384163b1561292657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612874903390899088908890600401613762565b6020604051808303816000875af19250505080156128af575060408051601f3d908101601f191682019092526128ac9181019061379f565b60015b61290c573d8080156128dd576040519150601f19603f3d011682016040523d82523d6000602084013e6128e2565b606091505b5080516000036129045760405162461bcd60e51b8152600401610b46906136b5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611fda565b506001949350505050565b61294b828260405180602001604052806000815250612aee565b5050565b6000600161295c846112cb565b61296691906134e0565b6000838152600760205260409020549091508082146129b9576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906129fe906001906134e0565b60008381526009602052604081205460088054939450909284908110612a2657612a2661360f565b906000526020600020015490508060088381548110612a4757612a4761360f565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612a7f57612a7f6137bc565b6001900381819060005260206000200160009055905550505050565b6000612aa6836112cb565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6060611fda8484600085612b21565b612af88383612c49565b612b056000848484612830565b610c7b5760405162461bcd60e51b8152600401610b46906136b5565b606082471015612b825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b46565b843b612bd05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b46565b600080866001600160a01b03168587604051612bec91906137d2565b60006040518083038185875af1925050503d8060008114612c29576040519150601f19603f3d011682016040523d82523d6000602084013e612c2e565b606091505b5091509150612c3e828286612d88565b979650505050505050565b6001600160a01b038216612c9f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b46565b612ca881611df2565b15612cf55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b46565b612d01600083836126a6565b6001600160a01b0382166000908152600360205260408120805460019290612d2a9084906134f7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608315612d975750816122db565b825115612da75782518084602001fd5b8160405162461bcd60e51b8152600401610b469190612ee5565b828054612dcd906133db565b90600052602060002090601f016020900481019282612def5760008555612e35565b82601f10612e085782800160ff19823516178555612e35565b82800160010185558215612e35579182015b82811115612e35578235825591602001919060010190612e1a565b50612e41929150612e45565b5090565b5b80821115612e415760008155600101612e46565b6001600160e01b031981168114611d9f57600080fd5b600060208284031215612e8257600080fd5b81356122db81612e5a565b60005b83811015612ea8578181015183820152602001612e90565b83811115610f065750506000910152565b60008151808452612ed1816020860160208601612e8d565b601f01601f19169290920160200192915050565b6020815260006122db6020830184612eb9565b600060208284031215612f0a57600080fd5b5035919050565b6001600160a01b0381168114611d9f57600080fd5b60008060408385031215612f3957600080fd5b8235612f4481612f11565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612f9157612f91612f52565b604052919050565b600082601f830112612faa57600080fd5b8135602067ffffffffffffffff821115612fc657612fc6612f52565b8160051b612fd5828201612f68565b9283528481018201928281019087851115612fef57600080fd5b83870192505b84831015612c3e57823582529183019190830190612ff5565b60008060006060848603121561302357600080fd5b83359250602084013567ffffffffffffffff8082111561304257600080fd5b61304e87838801612f99565b9350604086013591508082111561306457600080fd5b5061307186828701612f99565b9150509250925092565b60008060006060848603121561309057600080fd5b833561309b81612f11565b925060208401356130ab81612f11565b929592945050506040919091013590565b6000806000606084860312156130d157600080fd5b83356130dc81612f11565b92506020840135915060408401356130f381612f11565b809150509250925092565b6000806020838503121561311157600080fd5b823567ffffffffffffffff8082111561312957600080fd5b818501915085601f83011261313d57600080fd5b81358181111561314c57600080fd5b86602082850101111561315e57600080fd5b60209290920196919550909350505050565b60006020828403121561318257600080fd5b81356122db81612f11565b6000806000806000608086880312156131a557600080fd5b853567ffffffffffffffff808211156131bd57600080fd5b818801915088601f8301126131d157600080fd5b8135818111156131e057600080fd5b8960208260051b85010111156131f557600080fd5b6020928301975095509087013593506040870135908082111561321757600080fd5b61322389838a01612f99565b9350606088013591508082111561323957600080fd5b5061324688828901612f99565b9150509295509295909350565b602080825282518282018190526000919060409081850190868401855b8281101561329557815180518552860151868501529284019290850190600101613270565b5091979650505050505050565b8015158114611d9f57600080fd5b600080604083850312156132c357600080fd5b82356132ce81612f11565b915060208301356132de816132a2565b809150509250929050565b600080600080608085870312156132ff57600080fd5b843561330a81612f11565b935060208581013561331b81612f11565b935060408601359250606086013567ffffffffffffffff8082111561333f57600080fd5b818801915088601f83011261335357600080fd5b81358181111561336557613365612f52565b613377601f8201601f19168501612f68565b9150808252898482850101111561338d57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080604083850312156133c057600080fd5b82356133cb81612f11565b915060208301356132de81612f11565b600181811c908216806133ef57607f821691505b60208210810361340f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601d908201527f7175616e74697479206d7573742062652031206f722035206f72203130000000604082015260600190565b60208082526034908201527f4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206040820152736d75737420626520657175616c20746f2071747960601b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156134f2576134f26134ca565b500390565b6000821982111561350a5761350a6134ca565b500190565b60208082526022908201527f796f752063616e2774206d696e742074686174206d616e79207269676874206e6040820152616f7760f01b606082015260800190565b600081600019048311821515161561356b5761356b6134ca565b500290565b60006020828403121561358257600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252600f908201526e0dcdee840cadcdeeaced04082ac82b608b1b604082015260600190565b600060018201613660576136606134ca565b5060010190565b60008351613679818460208801612e8d565b602f60f81b9083019081528351613697816001840160208801612e8d565b64173539b7b760d91b60019290910191820152600601949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261372c5761372c613707565b500490565b60008261374057613740613707565b500690565b60006020828403121561375757600080fd5b81516122db816132a2565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061379590830184612eb9565b9695505050505050565b6000602082840312156137b157600080fd5b81516122db81612e5a565b634e487b7160e01b600052603160045260246000fd5b600082516137e4818460208701612e8d565b919091019291505056fea26469706673582212204b572fba929200321b1ddf9b8737228949905ba9aae096109f5eec696829e9b064736f6c634300080d0033",
  "bytecodeSha1": "f95cec76367a3d496a460170f1d4935ae2af75db",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Celestial",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "226": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "10": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "220": [
            2743,
            2761,
            false
          ],
          "221": [
            2838,
            2848,
            false
          ],
          "222": [
            2935,
            2951,
            false
          ],
          "223": [
            3033,
            3043,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "224": [
            5074,
            5102,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "219": [
            1820,
            1858,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "218": [
            1335,
            1366,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {
        "Address._verifyCallResult": {
          "200": [
            7124,
            7131,
            false
          ],
          "201": [
            7265,
            7286,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "199": [
            4745,
            4775,
            true
          ]
        }
      },
      "14": {},
      "15": {
        "Strings.toString": {
          "229": [
            548,
            558,
            false
          ]
        }
      },
      "16": {
        "MerkleProof.verify": {
          "225": [
            1059,
            1087,
            false
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {
        "Celestial.CelestialsOfOwner": {
          "178": [
            10990,
            11011,
            true
          ]
        },
        "Celestial._createCelestial": {
          "191": [
            4814,
            4873,
            true
          ],
          "192": [
            4947,
            4964,
            true
          ],
          "193": [
            5032,
            5044,
            false
          ],
          "194": [
            5048,
            5077,
            true
          ],
          "195": [
            5164,
            5188,
            true
          ],
          "196": [
            5283,
            5310,
            true
          ],
          "197": [
            5330,
            5357,
            true
          ],
          "198": [
            5377,
            5407,
            true
          ]
        },
        "Celestial.bachedCelestialsOfOwner": {
          "189": [
            11663,
            11684,
            true
          ],
          "190": [
            11886,
            11914,
            false
          ]
        },
        "Celestial.getType": {
          "169": [
            3324,
            3341,
            true
          ]
        },
        "Celestial.mintCelestialWhitelist": {
          "170": [
            6866,
            6881,
            true
          ],
          "171": [
            7189,
            7239,
            true
          ],
          "172": [
            7378,
            7386,
            true
          ],
          "173": [
            7390,
            7398,
            true
          ],
          "174": [
            7402,
            7411,
            true
          ],
          "175": [
            7497,
            7519,
            false
          ],
          "176": [
            7523,
            7551,
            true
          ],
          "177": [
            8053,
            8097,
            true
          ]
        },
        "Celestial.mintCelestialWithAVAX": {
          "179": [
            8644,
            8652,
            true
          ],
          "180": [
            8656,
            8664,
            true
          ],
          "181": [
            8668,
            8677,
            true
          ],
          "182": [
            8763,
            8785,
            false
          ],
          "183": [
            8789,
            8817,
            true
          ],
          "184": [
            8926,
            9026,
            true
          ],
          "185": [
            9209,
            9237,
            true
          ]
        },
        "Celestial.mintCelestialWithSoul": {
          "158": [
            9707,
            9715,
            true
          ],
          "159": [
            9719,
            9727,
            true
          ],
          "160": [
            9731,
            9740,
            true
          ],
          "161": [
            9826,
            9848,
            false
          ],
          "162": [
            9852,
            9880,
            true
          ],
          "163": [
            9989,
            10089,
            true
          ],
          "164": [
            10285,
            10336,
            true
          ],
          "165": [
            10405,
            10462,
            false
          ],
          "166": [
            10478,
            10540,
            false
          ]
        },
        "Celestial.setStartTimeAVAX": {
          "168": [
            2636,
            2665,
            true
          ]
        },
        "Celestial.setStartTimeSOUL": {
          "167": [
            2867,
            2896,
            true
          ]
        },
        "Celestial.tokenURI": {
          "188": [
            6328,
            6344,
            true
          ]
        },
        "Celestial.withdrawAVAX": {
          "186": [
            4269,
            4301,
            true
          ],
          "187": [
            4444,
            4448,
            true
          ]
        }
      },
      "21": {},
      "3": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "227": [
            3668,
            3689,
            false
          ],
          "228": [
            3752,
            3782,
            true
          ]
        }
      },
      "7": {
        "ERC721._checkOnERC721Received": {
          "214": [
            12245,
            12263,
            false
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "210": [
            7622,
            7638,
            true
          ]
        },
        "ERC721._mint": {
          "216": [
            9220,
            9236,
            true
          ],
          "217": [
            9291,
            9308,
            true
          ]
        },
        "ERC721._safeMint": {
          "215": [
            8682,
            8736,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "213": [
            6809,
            6857,
            true
          ]
        },
        "ERC721._transfer": {
          "211": [
            10529,
            10560,
            true
          ],
          "212": [
            10624,
            10640,
            true
          ]
        },
        "ERC721.approve": {
          "203": [
            3600,
            3611,
            true
          ],
          "204": [
            3681,
            3702,
            true
          ],
          "205": [
            3706,
            3743,
            true
          ]
        },
        "ERC721.balanceOf": {
          "207": [
            1954,
            1973,
            true
          ]
        },
        "ERC721.getApproved": {
          "202": [
            4028,
            4044,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "209": [
            5599,
            5640,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "208": [
            4311,
            4335,
            true
          ]
        },
        "ERC721.transferFrom": {
          "206": [
            4978,
            5019,
            true
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "97": [
            2131,
            2148
          ],
          "98": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "2": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "39": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "76": [
            1926,
            1999
          ],
          "77": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Pausable.paused": {
          "1": [
            1104,
            1118
          ]
        }
      },
      "10": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "123": [
            3898,
            3942
          ],
          "124": [
            3952,
            3976
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "142": [
            3541,
            3575
          ],
          "143": [
            3585,
            3620
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "122": [
            2777,
            2817
          ],
          "125": [
            2864,
            2911
          ],
          "126": [
            2967,
            3012
          ],
          "127": [
            3059,
            3099
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "138": [
            6589,
            6625
          ],
          "139": [
            6693,
            6734
          ],
          "140": [
            6855,
            6886
          ],
          "141": [
            6896,
            6912
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "134": [
            5189,
            5233
          ],
          "135": [
            5305,
            5348
          ],
          "136": [
            5479,
            5512
          ],
          "137": [
            5522,
            5563
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1028,
            1125
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "33": [
            1812,
            1907
          ],
          "34": [
            1917,
            1941
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "25": [
            1327,
            1414
          ],
          "26": [
            1424,
            1457
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1615,
            1639
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {
        "Address._verifyCallResult": {
          "156": [
            7147,
            7164
          ],
          "157": [
            7591,
            7611
          ]
        },
        "Address.functionCall": {
          "144": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "147": [
            4737,
            4818
          ],
          "148": [
            4828,
            4888
          ],
          "149": [
            4982,
            5041
          ]
        },
        "Address.isContract": {
          "129": [
            1073,
            1088
          ]
        }
      },
      "14": {
        "Context._msgSender": {
          "9": [
            658,
            675
          ]
        }
      },
      "15": {
        "Strings.toString": {
          "106": [
            574,
            584
          ],
          "107": [
            690,
            698
          ],
          "108": [
            712,
            722
          ],
          "109": [
            824,
            835
          ],
          "110": [
            849,
            905
          ],
          "111": [
            919,
            930
          ]
        }
      },
      "16": {
        "MerkleProof.verify": {
          "99": [
            1185,
            1255
          ],
          "100": [
            1372,
            1442
          ],
          "101": [
            990,
            993
          ],
          "102": [
            1552,
            1579
          ]
        }
      },
      "17": {
        "ERC165.supportsInterface": {
          "79": [
            864,
            911
          ]
        }
      },
      "18": {},
      "19": {
        "Celestial.CelestialsOfOwner": {
          "50": [
            10982,
            11047
          ],
          "51": [
            11283,
            11407
          ],
          "52": [
            11202,
            11205
          ],
          "53": [
            11427,
            11437
          ]
        },
        "Celestial._baseURI": {
          "105": [
            3104,
            3119
          ]
        },
        "Celestial._createCelestial": {
          "112": [
            4793,
            4929
          ],
          "113": [
            4939,
            5001
          ],
          "114": [
            5011,
            5133
          ],
          "115": [
            5143,
            5252
          ],
          "116": [
            5262,
            5455
          ],
          "117": [
            5465,
            5500
          ],
          "118": [
            5510,
            5532
          ],
          "119": [
            5542,
            5571
          ],
          "120": [
            5581,
            5629
          ],
          "121": [
            5639,
            5671
          ]
        },
        "Celestial._createCelestials": {
          "83": [
            5901,
            5922
          ],
          "84": [
            5936,
            5988
          ],
          "85": [
            5882,
            5885
          ]
        },
        "Celestial.bachedCelestialsOfOwner": {
          "71": [
            11655,
            11720
          ],
          "72": [
            11930,
            11958
          ],
          "73": [
            12155,
            12286
          ],
          "74": [
            12021,
            12024
          ],
          "75": [
            12306,
            12323
          ]
        },
        "Celestial.forwardERC20s": {
          "32": [
            4078,
            4114
          ]
        },
        "Celestial.getType": {
          "29": [
            3316,
            3366
          ],
          "30": [
            3376,
            3403
          ]
        },
        "Celestial.mintCelestialWhitelist": {
          "40": [
            6858,
            6898
          ],
          "41": [
            7168,
            7302
          ],
          "42": [
            7357,
            7466
          ],
          "43": [
            7476,
            7629
          ],
          "44": [
            8032,
            8138
          ],
          "45": [
            8149,
            8181
          ],
          "46": [
            8191,
            8228
          ],
          "47": [
            8266,
            8328
          ]
        },
        "Celestial.mintCelestialWithAVAX": {
          "58": [
            8623,
            8732
          ],
          "59": [
            8742,
            8895
          ],
          "60": [
            8905,
            9086
          ],
          "61": [
            9201,
            9257
          ],
          "62": [
            9268,
            9299
          ],
          "63": [
            9337,
            9399
          ]
        },
        "Celestial.mintCelestialWithSoul": {
          "13": [
            9686,
            9795
          ],
          "14": [
            9805,
            9958
          ],
          "15": [
            9968,
            10149
          ],
          "16": [
            10264,
            10377
          ],
          "17": [
            10565,
            10610
          ],
          "18": [
            10631,
            10662
          ],
          "19": [
            10694,
            10742
          ],
          "20": [
            10779,
            10841
          ]
        },
        "Celestial.mintingStartedAVAX": {
          "57": [
            3645,
            3706
          ]
        },
        "Celestial.mintingStartedSOUL": {
          "12": [
            3786,
            3847
          ]
        },
        "Celestial.setBaseURI": {
          "35": [
            3208,
            3228
          ]
        },
        "Celestial.setMerkleRoot": {
          "48": [
            4613,
            4637
          ]
        },
        "Celestial.setStake": {
          "70": [
            2513,
            2527
          ]
        },
        "Celestial.setStartTimeAVAX": {
          "27": [
            2615,
            2722
          ],
          "28": [
            2732,
            2758
          ]
        },
        "Celestial.setStartTimeSOUL": {
          "21": [
            2846,
            2953
          ],
          "22": [
            2963,
            2989
          ]
        },
        "Celestial.tokenURI": {
          "68": [
            6307,
            6417
          ],
          "69": [
            6427,
            6546
          ]
        },
        "Celestial.withdrawAVAX": {
          "64": [
            4261,
            4321
          ],
          "65": [
            4436,
            4472
          ]
        }
      },
      "21": {},
      "3": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "128": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "96": [
            746,
            832
          ]
        }
      },
      "7": {
        "ERC721._approve": {
          "81": [
            11147,
            11176
          ],
          "82": [
            11186,
            11237
          ]
        },
        "ERC721._checkOnERC721Received": {
          "130": [
            12287,
            12347
          ],
          "131": [
            12117,
            12179
          ],
          "132": [
            12551,
            12562
          ]
        },
        "ERC721._exists": {
          "80": [
            7303,
            7340
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "86": [
            7614,
            7687
          ],
          "87": [
            7746,
            7842
          ]
        },
        "ERC721._mint": {
          "150": [
            9212,
            9273
          ],
          "151": [
            9283,
            9341
          ],
          "152": [
            9352,
            9397
          ],
          "153": [
            9408,
            9426
          ],
          "154": [
            9436,
            9457
          ],
          "155": [
            9468,
            9506
          ]
        },
        "ERC721._safeMint": {
          "133": [
            8254,
            8280
          ],
          "145": [
            8633,
            8651
          ],
          "146": [
            8661,
            8812
          ]
        },
        "ERC721._safeTransfer": {
          "103": [
            6763,
            6791
          ],
          "104": [
            6801,
            6912
          ]
        },
        "ERC721._transfer": {
          "88": [
            10521,
            10606
          ],
          "89": [
            10616,
            10681
          ],
          "90": [
            10692,
            10731
          ],
          "91": [
            10793,
            10822
          ],
          "92": [
            10833,
            10853
          ],
          "93": [
            10863,
            10881
          ],
          "94": [
            10891,
            10912
          ],
          "95": [
            10923,
            10955
          ]
        },
        "ERC721.approve": {
          "8": [
            3592,
            3649
          ],
          "10": [
            3660,
            3825
          ],
          "11": [
            3836,
            3857
          ]
        },
        "ERC721.balanceOf": {
          "37": [
            1946,
            2020
          ],
          "38": [
            2030,
            2053
          ]
        },
        "ERC721.getApproved": {
          "6": [
            4020,
            4093
          ],
          "7": [
            4104,
            4135
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4678,
            4720
          ]
        },
        "ERC721.name": {
          "5": [
            2493,
            2505
          ]
        },
        "ERC721.ownerOf": {
          "36": [
            2250,
            2323
          ]
        },
        "ERC721.safeTransferFrom": {
          "31": [
            5318,
            5357
          ],
          "66": [
            5591,
            5694
          ],
          "67": [
            5704,
            5743
          ]
        },
        "ERC721.setApprovalForAll": {
          "54": [
            4303,
            4365
          ],
          "55": [
            4376,
            4429
          ],
          "56": [
            4439,
            4492
          ]
        },
        "ERC721.supportsInterface": {
          "78": [
            1614,
            1789
          ]
        },
        "ERC721.symbol": {
          "49": [
            2657,
            2671
          ]
        },
        "ERC721.transferFrom": {
          "23": [
            4970,
            5073
          ],
          "24": [
            5084,
            5112
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeERC20",
    "Soul",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Strings"
  ],
  "deployedBytecode": "6080604052600436106103765760003560e01c80637cb64759116101d1578063bc7d403411610102578063e7b27af7116100a0578063e9f169f71161006f578063e9f169f7146109c0578063f2fde38b146109d6578063f7be4f11146109f6578063ff2a765614610a0b57600080fd5b8063e7b27af71461092b578063e7c235b914610941578063e7d97e5214610961578063e985e9c51461097757600080fd5b8063dbddb26a116100dc578063dbddb26a146108c1578063dc9f9f96146108d6578063de20bc92146108eb578063e2ea13191461090b57600080fd5b8063bc7d403414610854578063c87b56dd14610874578063db4bec441461089457600080fd5b8063a377d7ef1161016f578063a7d5ec2d11610149578063a7d5ec2d146107f3578063aeb5cd5e14610806578063b4fad9af14610819578063b88d4fde1461083457600080fd5b8063a377d7ef146107b2578063a682f862146107c7578063a756a1df146107dd57600080fd5b806395d89b41116101ab57806395d89b411461073a5780639b76dbca1461074f5780639ea6db3d14610765578063a22cb4651461079257600080fd5b80637cb64759146106dc578063815b7a8c146106fc5780638da5cb5b1461071c57600080fd5b80633c1d4de7116102ab5780636352211e1161024957806370a082311161022357806370a082311461067e578063715018a61461069e57806373033bda146106b35780637b82fda6146106c957600080fd5b80636352211e1461063257806365e940a2146106525780636b9881761461066857600080fd5b806343f37b981161028557806343f37b98146105b35780634f6ccce7146105d357806355f804b3146105f35780635c975abb1461061357600080fd5b80633c1d4de7146105535780634036ab781461057357806342842e0e1461059357600080fd5b8063200ed855116103185780632cfb18b1116102f25780632cfb18b1146104d55780632eb4a7ab146104f05780632f745c591461050657806333f6832a1461052657600080fd5b8063200ed8551461048057806323b872dd146104a05780632b95b732146104c057600080fd5b8063095ea7b311610354578063095ea7b31461040a57806311a2428a1461042c57806318160ddd146104415780631dbb64ba1461046057600080fd5b806301ffc9a71461037b57806306fdde03146103b0578063081812fc146103d2575b600080fd5b34801561038757600080fd5b5061039b610396366004612e70565b610a21565b60405190151581526020015b60405180910390f35b3480156103bc57600080fd5b506103c5610a4c565b6040516103a79190612ee5565b3480156103de57600080fd5b506103f26103ed366004612ef8565b610ade565b6040516001600160a01b0390911681526020016103a7565b34801561041657600080fd5b5061042a610425366004612f26565b610b6b565b005b34801561043857600080fd5b5061039b610c80565b34801561044d57600080fd5b506008545b6040519081526020016103a7565b34801561046c57600080fd5b5061042a61047b36600461300e565b610c9c565b34801561048c57600080fd5b5061042a61049b366004612ef8565b610f0c565b3480156104ac57600080fd5b5061042a6104bb36600461307b565b610f8b565b3480156104cc57600080fd5b50610452600281565b3480156104e157600080fd5b5061045266049e57d635400081565b3480156104fc57600080fd5b5061045260105481565b34801561051257600080fd5b50610452610521366004612f26565b610fbc565b34801561053257600080fd5b50610452610541366004612ef8565b60186020526000908152604090205481565b34801561055f57600080fd5b5061042a61056e366004612ef8565b611052565b34801561057f57600080fd5b5061045261058e366004612ef8565b6110d1565b34801561059f57600080fd5b5061042a6105ae36600461307b565b611132565b3480156105bf57600080fd5b5061042a6105ce3660046130bc565b61114d565b3480156105df57600080fd5b506104526105ee366004612ef8565b61118b565b3480156105ff57600080fd5b5061042a61060e3660046130fe565b61121e565b34801561061f57600080fd5b50600a54600160a01b900460ff1661039b565b34801561063e57600080fd5b506103f261064d366004612ef8565b611254565b34801561065e57600080fd5b5061045260125481565b34801561067457600080fd5b5061045261138881565b34801561068a57600080fd5b50610452610699366004613170565b6112cb565b3480156106aa57600080fd5b5061042a611352565b3480156106bf57600080fd5b5061045261271081565b61042a6106d736600461318d565b611388565b3480156106e857600080fd5b5061042a6106f7366004612ef8565b6115a9565b34801561070857600080fd5b50600c546103f2906001600160a01b031681565b34801561072857600080fd5b50600a546001600160a01b03166103f2565b34801561074657600080fd5b506103c56115d8565b34801561075b57600080fd5b5061045260155481565b34801561077157600080fd5b50610785610780366004613170565b6115e7565b6040516103a79190613253565b34801561079e57600080fd5b5061042a6107ad3660046132b0565b61172b565b3480156107be57600080fd5b5061039b6117ef565b3480156107d357600080fd5b5061045260165481565b3480156107e957600080fd5b50610452613a9881565b61042a61080136600461300e565b611809565b61042a610814366004612ef8565b611929565b34801561082557600080fd5b506104526605543df729c00081565b34801561084057600080fd5b5061042a61084f3660046132e9565b611a03565b34801561086057600080fd5b50600d546103f2906001600160a01b031681565b34801561088057600080fd5b506103c561088f366004612ef8565b611a35565b3480156108a057600080fd5b506104526108af366004613170565b60116020526000908152604090205481565b3480156108cd57600080fd5b506103c5611adc565b3480156108e257600080fd5b50610452600181565b3480156108f757600080fd5b50600e546103f2906001600160a01b031681565b34801561091757600080fd5b5061042a610926366004613170565b611b6a565b34801561093757600080fd5b5061045260175481565b34801561094d57600080fd5b5061078561095c366004612f26565b611bb6565b34801561096d57600080fd5b50610452600b5481565b34801561098357600080fd5b5061039b6109923660046133ad565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109cc57600080fd5b5061045260135481565b3480156109e257600080fd5b5061042a6109f1366004613170565b611d07565b348015610a0257600080fd5b50610452600381565b348015610a1757600080fd5b5061045260145481565b60006001600160e01b0319821663780e9d6360e01b1480610a465750610a4682611da2565b92915050565b606060008054610a5b906133db565b80601f0160208091040260200160405190810160405280929190818152602001828054610a87906133db565b8015610ad45780601f10610aa957610100808354040283529160200191610ad4565b820191906000526020600020905b815481529060010190602001808311610ab757829003601f168201915b5050505050905090565b6000610ae982611df2565b610b4f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610b7682611254565b9050806001600160a01b0316836001600160a01b031603610be35760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b46565b336001600160a01b0382161480610bff5750610bff8133610992565b610c715760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b46565b610c7b8383611e0f565b505050565b6000601754600014158015610c9757506017544210155b905090565b600a54600160a01b900460ff1615610cc65760405162461bcd60e51b8152600401610b4690613415565b8260011480610cd55750826005145b80610ce0575082600a145b610cfc5760405162461bcd60e51b8152600401610b469061343f565b815183148015610d0c5750805183145b610d285760405162461bcd60e51b8152600401610b4690613476565b601454610d37906127106134e0565b83601254610d4591906134f7565b1115610d635760405162461bcd60e51b8152600401610b469061350f565b600083600b54610d739190613551565b600c5490915081906001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df29190613570565b1015610e325760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da0814d3d553608a1b6044820152606401610b46565b61138860135411158015610e54575061138884601354610e5291906134f7565b115b15610e6b57600b54610e67906002613551565b600b555b8360136000828254610e7d91906134f7565b9091555050600c546001600160a01b03166379cc6790336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b158015610edc57600080fd5b505af1158015610ef0573d6000803e3d6000fd5b50505050610f06848484610f013390565b611e7d565b50505050565b600a546001600160a01b03163314610f365760405162461bcd60e51b8152600401610b4690613589565b42811015610f865760405162461bcd60e51b815260206004820152601f60248201527f737461727454696d652063616e6e6f7420626520696e207468652070617374006044820152606401610b46565b601755565b610f953382611ef8565b610fb15760405162461bcd60e51b8152600401610b46906135be565b610c7b838383611fe2565b6000610fc7836112cb565b82106110295760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b46565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b0316331461107c5760405162461bcd60e51b8152600401610b4690613589565b428110156110cc5760405162461bcd60e51b815260206004820152601f60248201527f737461727454696d652063616e6e6f7420626520696e207468652070617374006044820152606401610b46565b601655565b60006110dc82611df2565b61111f5760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610b46565b5060009081526018602052604090205490565b610c7b83838360405180602001604052806000815250611a03565b600a546001600160a01b031633146111775760405162461bcd60e51b8152600401610b4690613589565b610c7b6001600160a01b038416828461218d565b600061119660085490565b82106111f95760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b46565b6008828154811061120c5761120c61360f565b90600052602060002001549050919050565b600a546001600160a01b031633146112485760405162461bcd60e51b8152600401610b4690613589565b610c7b600f8383612dc1565b6000818152600260205260408120546001600160a01b031680610a465760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b46565b60006001600160a01b0382166113365760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b46565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461137c5760405162461bcd60e51b8152600401610b4690613589565b61138660006121df565b565b600a54600160a01b900460ff16156113b25760405162461bcd60e51b8152600401610b4690613415565b6010546000036113f35760405162461bcd60e51b815260206004820152600c60248201526b1b5a5cdcda5b99c81c9bdbdd60a21b6044820152606401610b46565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061146d868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506010549150849050612231565b6114c75760405162461bcd60e51b815260206004820152602560248201527f74686973206164647265737320646f6573206e6f742068617665207065726d6960448201526439b9b4b7b760d91b6064820152608401610b46565b83600114806114d65750836005145b806114e1575083600a145b6114fd5760405162461bcd60e51b8152600401610b469061343f565b82518414801561150d5750815184145b6115295760405162461bcd60e51b8152600401610b4690613476565b61153a8466049e57d6354000613551565b3410156115595760405162461bcd60e51b8152600401610b4690613625565b836014600082825461156b91906134f7565b9091555050336000908152601160205260408120805486929061158f9084906134f7565b909155506115a1905084848433611e7d565b505050505050565b600a546001600160a01b031633146115d35760405162461bcd60e51b8152600401610b4690613589565b601055565b606060018054610a5b906133db565b606060006115f4836112cb565b116116415760405162461bcd60e51b815260206004820152601f60248201527f7468657265206973206e6f206e667420696e20796f75722062616c616e6365006044820152606401610b46565b600061164c836112cb565b905060008167ffffffffffffffff81111561166957611669612f52565b6040519080825280602002602001820160405280156116ae57816020015b60408051808201909152600080825260208201528152602001906001900390816116875790505b50905060005b828110156117235760006116c88683610fbc565b9050604051806040016040528082815260200160186000848152602001908152602001600020548152508383815181106117045761170461360f565b602002602001018190525050808061171b9061364e565b9150506116b4565b509392505050565b336001600160a01b038316036117835760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b46565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000601654600014158015610c9757505060165442101590565b600a54600160a01b900460ff16156118335760405162461bcd60e51b8152600401610b4690613415565b82600114806118425750826005145b8061184d575082600a145b6118695760405162461bcd60e51b8152600401610b469061343f565b8151831480156118795750805183145b6118955760405162461bcd60e51b8152600401610b4690613476565b6014546118a4906127106134e0565b836012546118b291906134f7565b11156118d05760405162461bcd60e51b8152600401610b469061350f565b60006118e3846605543df729c000613551565b9050803410156119055760405162461bcd60e51b8152600401610b4690613625565b836012600082825461191791906134f7565b90915550610f06905084848433611e7d565b600a546001600160a01b031633146119535760405162461bcd60e51b8152600401610b4690613589565b804710156119735760405162461bcd60e51b8152600401610b4690613625565b6040513390600090829084908381818185875af1925050503d80600081146119b7576040519150601f19603f3d011682016040523d82523d6000602084013e6119bc565b606091505b5050905080610c7b5760405162461bcd60e51b815260206004820152601360248201527208cc2d2d8cac840e8de40e6cadcc84082ac82b606b1b6044820152606401610b46565b611a0d3383611ef8565b611a295760405162461bcd60e51b8152600401610b46906135be565b610f06848484846122e2565b6060611a4082611df2565b611aa45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610b46565b611aac612315565b611ab583612324565b604051602001611ac6929190613667565b6040516020818303038152906040529050919050565b600f8054611ae9906133db565b80601f0160208091040260200160405190810160405280929190818152602001828054611b15906133db565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b505050505081565b600a546001600160a01b03163314611b945760405162461bcd60e51b8152600401610b4690613589565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b60606000611bc3846112cb565b11611c105760405162461bcd60e51b815260206004820152601f60248201527f7468657265206973206e6f206e667420696e20796f75722062616c616e6365006044820152606401610b46565b60408051600580825260c08201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611c285790505090506000611c5e846005613551565b90506000611c6d8260056134f7565b9050611c78866112cb565b811115611c8b57611c88866112cb565b90505b815b81811015611cfc576000611ca18883610fbc565b905060405180604001604052808281526020016018600084815260200190815260200160002054815250858381518110611cdd57611cdd61360f565b6020026020010181905250508080611cf49061364e565b915050611c8d565b509195945050505050565b600a546001600160a01b03163314611d315760405162461bcd60e51b8152600401610b4690613589565b6001600160a01b038116611d965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b46565b611d9f816121df565b50565b60006001600160e01b031982166380ac58cd60e01b1480611dd357506001600160e01b03198216635b5e139f60e01b145b80610a4657506301ffc9a760e01b6001600160e01b0319831614610a46565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611e4482611254565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60005b84811015611ef157600160156000828254611e9b91906134f7565b92505081905550611edf82858381518110611eb857611eb861360f565b6020026020010151858481518110611ed257611ed261360f565b6020026020010151612425565b80611ee98161364e565b915050611e80565b5050505050565b6000611f0382611df2565b611f645760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b46565b6000611f6f83611254565b9050806001600160a01b0316846001600160a01b03161480611faa5750836001600160a01b0316611f9f84610ade565b6001600160a01b0316145b80611fda57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611ff582611254565b6001600160a01b03161461205d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610b46565b6001600160a01b0382166120bf5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b46565b6120ca8383836126a6565b6120d5600082611e0f565b6001600160a01b03831660009081526003602052604081208054600192906120fe9084906134e0565b90915550506001600160a01b038216600090815260036020526040812080546001929061212c9084906134f7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c7b90849061275e565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081815b85518110156122d55760008682815181106122535761225361360f565b602002602001015190508083116122955760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506122c2565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806122cd8161364e565b915050612236565b50831490505b9392505050565b6122ed848484611fe2565b6122f984848484612830565b610f065760405162461bcd60e51b8152600401610b46906136b5565b6060600f8054610a5b906133db565b60608160000361234b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612375578061235f8161364e565b915061236e9050600a8361371d565b915061234f565b60008167ffffffffffffffff81111561239057612390612f52565b6040519080825280601f01601f1916602001820160405280156123ba576020820181803683370190505b5090505b8415611fda576123cf6001836134e0565b91506123dc600a86613731565b6123e79060306134f7565b60f81b8183815181106123fc576123fc61360f565b60200101906001600160f81b031916908160001a90535061241e600a8661371d565b94506123be565b612433613a986127106134f7565b60155411156124845760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f74206d696e7420616e796d6f72652063656c65737469616c7300006044820152606401610b46565b61248d82611df2565b156124da5760405162461bcd60e51b815260206004820181905260248201527f746869732027746f6b656e49642720697320616c726561647920746f6f6b656e6044820152606401610b46565b600182101580156124ed57506127108211155b6125395760405162461bcd60e51b815260206004820152601e60248201527f27746f6b656e496427206d75737420626520696e207468652072616e676500006044820152606401610b46565b600082815260186020526040902054156125a45760405162461bcd60e51b815260206004820152602660248201527f7468617420746f6b656e277320747970652068617320616c7265616479206265604482015265195b881cd95d60d21b6064820152608401610b46565b60018114806125b35750600281145b806125be5750600381145b6126035760405162461bcd60e51b8152602060048201526016602482015275696e76616c69642063656c65737469616c207479706560501b6044820152606401610b46565b600082815260186020526040902081905561261e8383612931565b600e54612635906001600160a01b0316600161172b565b60408051838152602081018390527fc3446d569695aa78750f8132ce4941514489a02c8ca9a2078ee392dccd96474e910160405180910390a16040518281527fb0c73316550069520aa3bffd50be8c7989584da8716295793eda73dbcd1c154c9060200160405180910390a1505050565b6001600160a01b038316612701576126fc81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612724565b816001600160a01b0316836001600160a01b03161461272457612724838261294f565b6001600160a01b03821661273b57610c7b816129ec565b826001600160a01b0316826001600160a01b031614610c7b57610c7b8282612a9b565b60006127b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612adf9092919063ffffffff16565b805190915015610c7b57808060200190518101906127d19190613745565b610c7b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b46565b60006001600160a01b0384163b1561292657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612874903390899088908890600401613762565b6020604051808303816000875af19250505080156128af575060408051601f3d908101601f191682019092526128ac9181019061379f565b60015b61290c573d8080156128dd576040519150601f19603f3d011682016040523d82523d6000602084013e6128e2565b606091505b5080516000036129045760405162461bcd60e51b8152600401610b46906136b5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611fda565b506001949350505050565b61294b828260405180602001604052806000815250612aee565b5050565b6000600161295c846112cb565b61296691906134e0565b6000838152600760205260409020549091508082146129b9576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906129fe906001906134e0565b60008381526009602052604081205460088054939450909284908110612a2657612a2661360f565b906000526020600020015490508060088381548110612a4757612a4761360f565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612a7f57612a7f6137bc565b6001900381819060005260206000200160009055905550505050565b6000612aa6836112cb565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6060611fda8484600085612b21565b612af88383612c49565b612b056000848484612830565b610c7b5760405162461bcd60e51b8152600401610b46906136b5565b606082471015612b825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b46565b843b612bd05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b46565b600080866001600160a01b03168587604051612bec91906137d2565b60006040518083038185875af1925050503d8060008114612c29576040519150601f19603f3d011682016040523d82523d6000602084013e612c2e565b606091505b5091509150612c3e828286612d88565b979650505050505050565b6001600160a01b038216612c9f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b46565b612ca881611df2565b15612cf55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b46565b612d01600083836126a6565b6001600160a01b0382166000908152600360205260408120805460019290612d2a9084906134f7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608315612d975750816122db565b825115612da75782518084602001fd5b8160405162461bcd60e51b8152600401610b469190612ee5565b828054612dcd906133db565b90600052602060002090601f016020900481019282612def5760008555612e35565b82601f10612e085782800160ff19823516178555612e35565b82800160010185558215612e35579182015b82811115612e35578235825591602001919060010190612e1a565b50612e41929150612e45565b5090565b5b80821115612e415760008155600101612e46565b6001600160e01b031981168114611d9f57600080fd5b600060208284031215612e8257600080fd5b81356122db81612e5a565b60005b83811015612ea8578181015183820152602001612e90565b83811115610f065750506000910152565b60008151808452612ed1816020860160208601612e8d565b601f01601f19169290920160200192915050565b6020815260006122db6020830184612eb9565b600060208284031215612f0a57600080fd5b5035919050565b6001600160a01b0381168114611d9f57600080fd5b60008060408385031215612f3957600080fd5b8235612f4481612f11565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612f9157612f91612f52565b604052919050565b600082601f830112612faa57600080fd5b8135602067ffffffffffffffff821115612fc657612fc6612f52565b8160051b612fd5828201612f68565b9283528481018201928281019087851115612fef57600080fd5b83870192505b84831015612c3e57823582529183019190830190612ff5565b60008060006060848603121561302357600080fd5b83359250602084013567ffffffffffffffff8082111561304257600080fd5b61304e87838801612f99565b9350604086013591508082111561306457600080fd5b5061307186828701612f99565b9150509250925092565b60008060006060848603121561309057600080fd5b833561309b81612f11565b925060208401356130ab81612f11565b929592945050506040919091013590565b6000806000606084860312156130d157600080fd5b83356130dc81612f11565b92506020840135915060408401356130f381612f11565b809150509250925092565b6000806020838503121561311157600080fd5b823567ffffffffffffffff8082111561312957600080fd5b818501915085601f83011261313d57600080fd5b81358181111561314c57600080fd5b86602082850101111561315e57600080fd5b60209290920196919550909350505050565b60006020828403121561318257600080fd5b81356122db81612f11565b6000806000806000608086880312156131a557600080fd5b853567ffffffffffffffff808211156131bd57600080fd5b818801915088601f8301126131d157600080fd5b8135818111156131e057600080fd5b8960208260051b85010111156131f557600080fd5b6020928301975095509087013593506040870135908082111561321757600080fd5b61322389838a01612f99565b9350606088013591508082111561323957600080fd5b5061324688828901612f99565b9150509295509295909350565b602080825282518282018190526000919060409081850190868401855b8281101561329557815180518552860151868501529284019290850190600101613270565b5091979650505050505050565b8015158114611d9f57600080fd5b600080604083850312156132c357600080fd5b82356132ce81612f11565b915060208301356132de816132a2565b809150509250929050565b600080600080608085870312156132ff57600080fd5b843561330a81612f11565b935060208581013561331b81612f11565b935060408601359250606086013567ffffffffffffffff8082111561333f57600080fd5b818801915088601f83011261335357600080fd5b81358181111561336557613365612f52565b613377601f8201601f19168501612f68565b9150808252898482850101111561338d57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080604083850312156133c057600080fd5b82356133cb81612f11565b915060208301356132de81612f11565b600181811c908216806133ef57607f821691505b60208210810361340f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601d908201527f7175616e74697479206d7573742062652031206f722035206f72203130000000604082015260600190565b60208082526034908201527f4c656e677468206f662074686520616d6f756e74206f6620746865206e6674206040820152736d75737420626520657175616c20746f2071747960601b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156134f2576134f26134ca565b500390565b6000821982111561350a5761350a6134ca565b500190565b60208082526022908201527f796f752063616e2774206d696e742074686174206d616e79207269676874206e6040820152616f7760f01b606082015260800190565b600081600019048311821515161561356b5761356b6134ca565b500290565b60006020828403121561358257600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252600f908201526e0dcdee840cadcdeeaced04082ac82b608b1b604082015260600190565b600060018201613660576136606134ca565b5060010190565b60008351613679818460208801612e8d565b602f60f81b9083019081528351613697816001840160208801612e8d565b64173539b7b760d91b60019290910191820152600601949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261372c5761372c613707565b500490565b60008261374057613740613707565b500690565b60006020828403121561375757600080fd5b81516122db816132a2565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061379590830184612eb9565b9695505050505050565b6000602082840312156137b157600080fd5b81516122db81612e5a565b634e487b7160e01b600052603160045260246000fd5b600082516137e4818460208701612e8d565b919091019291505056fea26469706673582212204b572fba929200321b1ddf9b8737228949905ba9aae096109f5eec696829e9b064736f6c634300080d0033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:22;;558:22;540:41;;528:2;513:18;910:222:10;;;;;;;;2414:98:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;;;;;-1:-1:-1;3925:217:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:22;;;1674:51;;1662:2;1647:18;3925:217:7;1528:203:22;3463:401:7;;;;;;;;;;-1:-1:-1;3463:401:7;;;;;:::i;:::-;;:::i;:::-;;3719:135:19;;;;;;;;;;;;;:::i;1535:111:10:-;;;;;;;;;;-1:-1:-1;1622:10:10;:17;1535:111;;;2338:25:22;;;2326:2;2311:18;1535:111:10;2192:177:22;9453:1395:19;;;;;;;;;;-1:-1:-1;9453:1395:19;;;;;:::i;:::-;;:::i;2771:225::-;;;;;;;;;;-1:-1:-1;2771:225:19;;;;;:::i;:::-;;:::i;4789:330:7:-;;;;;;;;;;-1:-1:-1;4789:330:7;;;;;:::i;:::-;;:::i;1171:38:19:-;;;;;;;;;;;;1208:1;1171:38;;728:64;;;;;;;;;;;;780:12;728:64;;1535:25;;;;;;;;;;;;;;;;1211:253:10;;;;;;;;;;-1:-1:-1;1211:253:10;;;;;:::i;:::-;;:::i;2026:45:19:-;;;;;;;;;;-1:-1:-1;2026:45:19;;;;;:::i;:::-;;;;;;;;;;;;;;2540:225;;;;;;;;;;-1:-1:-1;2540:225:19;;;;;:::i;:::-;;:::i;3241:169::-;;;;;;;;;;-1:-1:-1;3241:169:19;;;;;:::i;:::-;;:::i;5185:179:7:-;;;;;;;;;;-1:-1:-1;5185:179:7;;;;;:::i;:::-;;:::i;3948:173:19:-;;;;;;;;;;-1:-1:-1;3948:173:19;;;;;:::i;:::-;;:::i;1718:230:10:-;;;;;;;;;;-1:-1:-1;1718:230:10;;;;;:::i;:::-;;:::i;3132:103:19:-;;;;;;;;;;-1:-1:-1;3132:103:19;;;;;:::i;:::-;;:::i;1041:84:1:-;;;;;;;;;;-1:-1:-1;1111:7:1;;-1:-1:-1;;;1111:7:1;;;;1041:84;;2117:235:7;;;;;;;;;;-1:-1:-1;2117:235:7;;;;;:::i;:::-;;:::i;1645:39:19:-;;;;;;;;;;;;;;;;876:60;;;;;;;;;;;;932:4;876:60;;1855:205:7;;;;;;;;;;-1:-1:-1;1855:205:7;;;;;:::i;:::-;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;1013:51:19:-;;;;;;;;;;;;1058:6;1013:51;;6600:1735;;;;;;:::i;:::-;;:::i;4540:104::-;;;;;;;;;;-1:-1:-1;4540:104:19;;;;;:::i;:::-;;:::i;1378:16::-;;;;;;;;;;-1:-1:-1;1378:16:19;;;;-1:-1:-1;;;;;1378:16:19;;;973:85:0;;;;;;;;;;-1:-1:-1;1045:6:0;;-1:-1:-1;;;;;1045:6:0;973:85;;2576:102:7;;;;;;;;;;;;;:::i;1781:35:19:-;;;;;;;;;;;;;;;;10854:590;;;;;;;;;;-1:-1:-1;10854:590:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4209:290:7:-;;;;;;;;;;-1:-1:-1;4209:290:7;;;;;:::i;:::-;;:::i;3578:135:19:-;;;;;;;;;;;;;:::i;1894:28::-;;;;;;;;;;;;;;;;1070:51;;;;;;;;;;;;1115:6;1070:51;;8382:1024;;;;;;:::i;:::-;;:::i;4185:294::-;;;;;;:::i;:::-;;:::i;642:59::-;;;;;;;;;;;;689:12;642:59;;5430:320:7;;;;;;;;;;-1:-1:-1;5430:320:7;;;;;:::i;:::-;;:::i;1400:36:19:-;;;;;;;;;;-1:-1:-1;1400:36:19;;;;-1:-1:-1;;;;;1400:36:19;;;6165:388;;;;;;;;;;-1:-1:-1;6165:388:19;;;;;:::i;:::-;;:::i;1566:51::-;;;;;;;;;;-1:-1:-1;1566:51:19;;;;;:::i;:::-;;;;;;;;;;;;;;1489:22;;;;;;;;;;;;;:::i;1127:38::-;;;;;;;;;;;;1164:1;1127:38;;1442:20;;;;;;;;;;-1:-1:-1;1442:20:19;;;;-1:-1:-1;;;;;1442:20:19;;;2451:83;;;;;;;;;;-1:-1:-1;2451:83:19;;;;;:::i;:::-;;:::i;1928:28::-;;;;;;;;;;;;;;;;11450:880;;;;;;;;;;-1:-1:-1;11450:880:19;;;;;:::i;:::-;;:::i;1295:50::-;;;;;;;;;;;;;;;;4565:162:7;;;;;;;;;;-1:-1:-1;4565:162:7;;;;;:::i;:::-;-1:-1:-1;;;;;4685:25:7;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162;1690:39:19;;;;;;;;;;;;;;;;1846:189:0;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;1215:41:19:-;;;;;;;;;;;;1255:1;1215:41;;1735:40;;;;;;;;;;;;;;;;910:222:10;1012:4;-1:-1:-1;;;;;;1035:50:10;;-1:-1:-1;;;1035:50:10;;:90;;;1089:36;1113:11;1089:23;:36::i;:::-;1028:97;910:222;-1:-1:-1;;910:222:10:o;2414:98:7:-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;-1:-1:-1;;;4020:73:7;;11096:2:22;4020:73:7;;;11078:21:22;11135:2;11115:18;;;11108:30;11174:34;11154:18;;;11147:62;-1:-1:-1;;;11225:18:22;;;11218:42;11277:19;;4020:73:7;;;;;;;;;-1:-1:-1;4111:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:7;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:7;:2;-1:-1:-1;;;;;3600:11:7;;3592:57;;;;-1:-1:-1;;;3592:57:7;;11509:2:22;3592:57:7;;;11491:21:22;11548:2;11528:18;;;11521:30;11587:34;11567:18;;;11560:62;-1:-1:-1;;;11638:18:22;;;11631:31;11679:19;;3592:57:7;11307:397:22;3592:57:7;665:10:14;-1:-1:-1;;;;;3681:21:7;;;;:62;;-1:-1:-1;3706:37:7;3723:5;665:10:14;4565:162:7;:::i;3706:37::-;3660:165;;;;-1:-1:-1;;;3660:165:7;;11911:2:22;3660:165:7;;;11893:21:22;11950:2;11930:18;;;11923:30;11989:34;11969:18;;;11962:62;12060:26;12040:18;;;12033:54;12104:19;;3660:165:7;11709:420:22;3660:165:7;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;3719:135:19:-;3770:4;3793:13;;3810:1;3793:18;;:54;;;;;3834:13;;3815:15;:32;;3793:54;3786:61;;3719:135;:::o;9453:1395::-;1111:7:1;;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;9707:3:19::1;9714:1;9707:8;:20;;;;9719:3;9726:1;9719:8;9707:20;:33;;;;9731:3;9738:2;9731:9;9707:33;9686:109;;;;-1:-1:-1::0;;;9686:109:19::1;;;;;;;:::i;:::-;9833:8;:15;9826:3;:22;:54;;;;;9859:14;:21;9852:3;:28;9826:54;9805:153;;;;-1:-1:-1::0;;;9805:153:19::1;;;;;;;:::i;:::-;10063:25;::::0;10042:46:::1;::::0;1058:6:::1;10042:46;:::i;:::-;10017:3;9990:24;;:30;;;;:::i;:::-;9989:100;;9968:181;;;;-1:-1:-1::0;;;9968:181:19::1;;;;;;;:::i;:::-;10199:27;10251:3;10229:19;;:25;;;;:::i;:::-;10285:4;::::0;10199:55;;-1:-1:-1;10199:55:19;;-1:-1:-1;;;;;10285:4:19::1;:14;665:10:14::0;10285:28:19::1;::::0;-1:-1:-1;;;;;;10285:28:19::1;::::0;;;;;;-1:-1:-1;;;;;1692:32:22;;;10285:28:19::1;::::0;::::1;1674:51:22::0;1647:18;;10285:28:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;10264:113;;;::::0;-1:-1:-1;;;10264:113:19;;14620:2:22;10264:113:19::1;::::0;::::1;14602:21:22::0;14659:2;14639:18;;;14632:30;-1:-1:-1;;;14678:18:22;;;14671:45;14733:18;;10264:113:19::1;14418:339:22::0;10264:113:19::1;932:4;10405:24;;:57;;:135;;;;;932:4;10505:3;10478:24;;:30;;;;:::i;:::-;:62;10405:135;10388:233;;;10587:19;::::0;:23:::1;::::0;10609:1:::1;10587:23;:::i;:::-;10565:19;:45:::0;10388:233:::1;10659:3;10631:24;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10694:4:19::1;::::0;-1:-1:-1;;;;;10694:4:19::1;:13;665:10:14::0;10694:48:19::1;::::0;-1:-1:-1;;;;;;10694:48:19::1;::::0;;;;;;-1:-1:-1;;;;;14954:32:22;;;10694:48:19::1;::::0;::::1;14936:51:22::0;15003:18;;;14996:34;;;14909:18;;10694:48:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10779:62;10797:3;10802:8;10812:14;10828:12;665:10:14::0;;586:96;10828:12:19::1;10779:17;:62::i;:::-;9610:1238;9453:1395:::0;;;:::o;2771:225::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2881:15:19::1;2867:10;:29;;2846:107;;;::::0;-1:-1:-1;;;2846:107:19;;15604:2:22;2846:107:19::1;::::0;::::1;15586:21:22::0;15643:2;15623:18;;;15616:30;15682:33;15662:18;;;15655:61;15733:18;;2846:107:19::1;15402:355:22::0;2846:107:19::1;2963:13;:26:::0;2771:225::o;4789:330:7:-;4978:41;665:10:14;5011:7:7;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:7;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;1211:253:10:-;1308:7;1343:23;1360:5;1343:16;:23::i;:::-;1335:5;:31;1327:87;;;;-1:-1:-1;;;1327:87:10;;16382:2:22;1327:87:10;;;16364:21:22;16421:2;16401:18;;;16394:30;16460:34;16440:18;;;16433:62;-1:-1:-1;;;16511:18:22;;;16504:41;16562:19;;1327:87:10;16180:407:22;1327:87:10;-1:-1:-1;;;;;;1431:19:10;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1211:253::o;2540:225:19:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2650:15:19::1;2636:10;:29;;2615:107;;;::::0;-1:-1:-1;;;2615:107:19;;15604:2:22;2615:107:19::1;::::0;::::1;15586:21:22::0;15643:2;15623:18;;;15616:30;15682:33;15662:18;;;15655:61;15733:18;;2615:107:19::1;15402:355:22::0;2615:107:19::1;2732:13;:26:::0;2540:225::o;3241:169::-;3297:7;3324:17;3332:8;3324:7;:17::i;:::-;3316:50;;;;-1:-1:-1;;;3316:50:19;;16794:2:22;3316:50:19;;;16776:21:22;16833:2;16813:18;;;16806:30;-1:-1:-1;;;16852:18:22;;;16845:50;16912:18;;3316:50:19;16592:344:22;3316:50:19;-1:-1:-1;3383:20:19;;;;:10;:20;;;;;;;3241:169::o;5185:179:7:-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;3948:173:19:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4078:36:19::1;-1:-1:-1::0;;;;;4078:19:19;::::1;4098:6:::0;4106:7;4078:19:::1;:36::i;1718:230:10:-:0;1793:7;1828:30;1622:10;:17;;1535:111;1828:30;1820:5;:38;1812:95;;;;-1:-1:-1;;;1812:95:10;;17143:2:22;1812:95:10;;;17125:21:22;17182:2;17162:18;;;17155:30;17221:34;17201:18;;;17194:62;-1:-1:-1;;;17272:18:22;;;17265:42;17324:19;;1812:95:10;16941:408:22;1812:95:10;1924:10;1935:5;1924:17;;;;;;;;:::i;:::-;;;;;;;;;1917:24;;1718:230;;;:::o;3132:103:19:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3208:20:19::1;:8;3219:9:::0;;3208:20:::1;:::i;2117:235:7:-:0;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:7;;2250:73;;;;-1:-1:-1;;;2250:73:7;;17688:2:22;2250:73:7;;;17670:21:22;17727:2;17707:18;;;17700:30;17766:34;17746:18;;;17739:62;-1:-1:-1;;;17817:18:22;;;17810:39;17866:19;;2250:73:7;17486:405:22;1855:205:7;1927:7;-1:-1:-1;;;;;1954:19:7;;1946:74;;;;-1:-1:-1;;;1946:74:7;;18098:2:22;1946:74:7;;;18080:21:22;18137:2;18117:18;;;18110:30;18176:34;18156:18;;;18149:62;-1:-1:-1;;;18227:18:22;;;18220:40;18277:19;;1946:74:7;17896:406:22;1946:74:7;-1:-1:-1;;;;;;2037:16:7;;;;;:9;:16;;;;;;;1855:205::o;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;6600:1735:19:-;1111:7:1;;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;6866:10:19::1;::::0;6880:1:::1;6866:15:::0;6858:40:::1;;;::::0;-1:-1:-1;;;6858:40:19;;18509:2:22;6858:40:19::1;::::0;::::1;18491:21:22::0;18548:2;18528:18;;;18521:30;-1:-1:-1;;;18567:18:22;;;18560:42;18619:18;;6858:40:19::1;18307:336:22::0;6858:40:19::1;7127:30;::::0;-1:-1:-1;;665:10:14;18797:2:22;18793:15;18789:53;7127:30:19::1;::::0;::::1;18777:66:22::0;7102:12:19::1;::::0;18859::22;;7127:30:19::1;;;;;;;;;;;;7117:41;;;;;;7102:56;;7189:50;7208:12;;7189:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;7222:10:19::1;::::0;;-1:-1:-1;7234:4:19;;-1:-1:-1;7189:18:19::1;:50::i;:::-;7168:134;;;::::0;-1:-1:-1;;;7168:134:19;;19084:2:22;7168:134:19::1;::::0;::::1;19066:21:22::0;19123:2;19103:18;;;19096:30;19162:34;19142:18;;;19135:62;-1:-1:-1;;;19213:18:22;;;19206:35;19258:19;;7168:134:19::1;18882:401:22::0;7168:134:19::1;7378:3;7385:1;7378:8;:20;;;;7390:3;7397:1;7390:8;7378:20;:33;;;;7402:3;7409:2;7402:9;7378:33;7357:109;;;;-1:-1:-1::0;;;7357:109:19::1;;;;;;;:::i;:::-;7504:8;:15;7497:3;:22;:54;;;;;7530:14;:21;7523:3;:28;7497:54;7476:153;;;;-1:-1:-1::0;;;7476:153:19::1;;;;;;;:::i;:::-;8066:31;8094:3:::0;780:12:::1;8066:31;:::i;:::-;8053:9;:44;;8032:106;;;;-1:-1:-1::0;;;8032:106:19::1;;;;;;;:::i;:::-;8178:3;8149:25;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;665:10:14;8191:30:19::1;::::0;;;:16:::1;:30;::::0;;;;:37;;8225:3;;8191:30;:37:::1;::::0;8225:3;;8191:37:::1;:::i;:::-;::::0;;;-1:-1:-1;8266:62:19::1;::::0;-1:-1:-1;8284:3:19;8289:8;8299:14;665:10:14;10779:17:19::1;:62::i;8266:::-;6807:1528;6600:1735:::0;;;;;:::o;4540:104::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4613:10:19::1;:24:::0;4540:104::o;2576:102:7:-;2632:13;2664:7;2657:14;;;;;:::i;10854:590:19:-;10944:22;11010:1;10990:17;11000:6;10990:9;:17::i;:::-;:21;10982:65;;;;-1:-1:-1;;;10982:65:19;;19834:2:22;10982:65:19;;;19816:21:22;19873:2;19853:18;;;19846:30;19912:33;19892:18;;;19885:61;19963:18;;10982:65:19;19632:355:22;10982:65:19;11057:15;11075:17;11085:6;11075:9;:17::i;:::-;11057:35;;11102:26;11151:7;11131:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;11131:28:19;;;;;;;;;;;;;;;;11102:57;;11174:9;11169:249;11193:7;11189:1;:11;11169:249;;;11221:15;11239:30;11259:6;11267:1;11239:19;:30::i;:::-;11221:48;;11292:115;;;;;;;;11333:7;11292:115;;;;11373:10;:19;11384:7;11373:19;;;;;;;;;;;;11292:115;;;11283:3;11287:1;11283:6;;;;;;;;:::i;:::-;;;;;;:124;;;;11207:211;11202:3;;;;;:::i;:::-;;;;11169:249;;;-1:-1:-1;11434:3:19;10854:590;-1:-1:-1;;;10854:590:19:o;4209:290:7:-;665:10:14;-1:-1:-1;;;;;4311:24:7;;;4303:62;;;;-1:-1:-1;;;4303:62:7;;20334:2:22;4303:62:7;;;20316:21:22;20373:2;20353:18;;;20346:30;20412:27;20392:18;;;20385:55;20457:18;;4303:62:7;20132:349:22;4303:62:7;665:10:14;4376:32:7;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:7;;;;;;;;;;;;:53;;-1:-1:-1;;4376:53:7;;;;;;;;;;4444:48;;540:41:22;;;4376:42:7;;665:10:14;4444:48:7;;513:18:22;4444:48:7;;;;;;;4209:290;;:::o;3578:135:19:-;3629:4;3652:13;;3669:1;3652:18;;:54;;;;-1:-1:-1;;3693:13:19;;3674:15;:32;;;3578:135::o;8382:1024::-;1111:7:1;;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;8644:3:19::1;8651:1;8644:8;:20;;;;8656:3;8663:1;8656:8;8644:20;:33;;;;8668:3;8675:2;8668:9;8644:33;8623:109;;;;-1:-1:-1::0;;;8623:109:19::1;;;;;;;:::i;:::-;8770:8;:15;8763:3;:22;:54;;;;;8796:14;:21;8789:3;:28;8763:54;8742:153;;;;-1:-1:-1::0;;;8742:153:19::1;;;;;;;:::i;:::-;9000:25;::::0;8979:46:::1;::::0;1058:6:::1;8979:46;:::i;:::-;8954:3;8927:24;;:30;;;;:::i;:::-;8926:100;;8905:181;;;;-1:-1:-1::0;;;8905:181:19::1;;;;;;;:::i;:::-;9139:23;9165:26;9188:3:::0;689:12:::1;9165:26;:::i;:::-;9139:52;;9222:15;9209:9;:28;;9201:56;;;;-1:-1:-1::0;;;9201:56:19::1;;;;;;;:::i;:::-;9296:3;9268:24;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;9337:62:19::1;::::0;-1:-1:-1;9355:3:19;9360:8;9370:14;665:10:14;10779:17:19::1;:62::i;4185:294::-:0;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4294:7:19::1;4269:21;:32;;4261:60;;;;-1:-1:-1::0;;;4261:60:19::1;;;;;;;:::i;:::-;4399:27;::::0;665:10:14;;4331:18:19::1;::::0;665:10:14;;4414:7:19;;4331:18;4399:27;4331:18;4399:27;4414:7;665:10:14;4399:27:19::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4383:43;;;4444:4;4436:36;;;::::0;-1:-1:-1;;;4436:36:19;;20898:2:22;4436:36:19::1;::::0;::::1;20880:21:22::0;20937:2;20917:18;;;20910:30;-1:-1:-1;;;20956:18:22;;;20949:49;21015:18;;4436:36:19::1;20696:343:22::0;5430:320:7;5599:41;665:10:14;5632:7:7;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:7;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;6165:388:19:-;6278:13;6328:16;6336:7;6328;:16::i;:::-;6307:110;;;;-1:-1:-1;;;6307:110:19;;21246:2:22;6307:110:19;;;21228:21:22;21285:2;21265:18;;;21258:30;21324:34;21304:18;;;21297:62;-1:-1:-1;;;21375:18:22;;;21368:45;21430:19;;6307:110:19;21044:411:22;6307:110:19;6487:10;:8;:10::i;:::-;6504:18;:7;:16;:18::i;:::-;6470:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6427:119;;6165:388;;;:::o;1489:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2451:83::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2513:5:19::1;:14:::0;;-1:-1:-1;;;;;;2513:14:19::1;-1:-1:-1::0;;;;;2513:14:19;;;::::1;::::0;;;::::1;::::0;;2451:83::o;11450:880::-;11559:22;11683:1;11663:17;11673:6;11663:9;:17::i;:::-;:21;11655:65;;;;-1:-1:-1;;;11655:65:19;;19834:2:22;11655:65:19;;;19816:21:22;19873:2;19853:18;;;19846:30;19912:33;19892:18;;;19885:61;19963:18;;11655:65:19;19632:355:22;11655:65:19;11766:22;;;11786:1;11766:22;;;;;;;;;11730:33;;11766:22;;;;-1:-1:-1;;;;;;;;;;;;;;;;;11766:22:19;;;;;;;;;;;;;;-1:-1:-1;11730:58:19;-1:-1:-1;11798:18:19;11819:9;:5;11827:1;11819:9;:::i;:::-;11798:30;-1:-1:-1;11838:16:19;11857:14;11798:30;11870:1;11857:14;:::i;:::-;11838:33;;11897:17;11907:6;11897:9;:17::i;:::-;11886:8;:28;11882:87;;;11941:17;11951:6;11941:9;:17::i;:::-;11930:28;;11882:87;11995:10;11978:319;12011:8;12007:1;:12;11978:319;;;12040:15;12058:30;12078:6;12086:1;12058:19;:30::i;:::-;12040:48;;12171:115;;;;;;;;12212:7;12171:115;;;;12252:10;:19;12263:7;12252:19;;;;;;;;;;;;12171:115;;;12155:10;12166:1;12155:13;;;;;;;;:::i;:::-;;;;;;:131;;;;12026:271;12021:3;;;;;:::i;:::-;;;;11978:319;;;-1:-1:-1;12313:10:19;;11450:880;-1:-1:-1;;;;;11450:880:19:o;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:14;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;22793:2:22;1926:73:0::1;::::0;::::1;22775:21:22::0;22832:2;22812:18;;;22805:30;22871:34;22851:18;;;22844:62;-1:-1:-1;;;22922:18:22;;;22915:36;22968:19;;1926:73:0::1;22591:402:22::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;1496:300:7:-;1598:4;-1:-1:-1;;;;;;1633:40:7;;-1:-1:-1;;;1633:40:7;;:104;;-1:-1:-1;;;;;;;1689:48:7;;-1:-1:-1;;;1689:48:7;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:17;;;1753:36:7;763:155:17;7222:125:7;7287:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:7;:30;;;7222:125::o;11073:171::-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:7;-1:-1:-1;;;;;11147:29:7;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:7;;;;;;;;;;;11073:171;;:::o;5684:475:19:-;5858:9;5853:146;5877:3;5873:1;:7;5853:146;;;5921:1;5901:16;;:21;;;;;;;:::i;:::-;;;;;;;;5936:52;5953:2;5957:8;5966:1;5957:11;;;;;;;;:::i;:::-;;;;;;;5970:14;5985:1;5970:17;;;;;;;;:::i;:::-;;;;;;;5936:16;:52::i;:::-;5882:3;;;;:::i;:::-;;;;5853:146;;;;5684:475;;;;:::o;7505:344:7:-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;-1:-1:-1;;;7614:73:7;;23200:2:22;7614:73:7;;;23182:21:22;23239:2;23219:18;;;23212:30;23278:34;23258:18;;;23251:62;-1:-1:-1;;;23329:18:22;;;23322:42;23381:19;;7614:73:7;22998:408:22;7614:73:7;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:7;:7;-1:-1:-1;;;;;7754:16:7;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:7;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:7;;7754:51;:87;;;-1:-1:-1;;;;;;4685:25:7;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7809:32;7746:96;7505:344;-1:-1:-1;;;;7505:344:7:o;10402:560::-;10556:4;-1:-1:-1;;;;;10529:31:7;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:7;;10521:85;;;;-1:-1:-1;;;10521:85:7;;23613:2:22;10521:85:7;;;23595:21:22;23652:2;23632:18;;;23625:30;23691:34;23671:18;;;23664:62;-1:-1:-1;;;23742:18:22;;;23735:39;23791:19;;10521:85:7;23411:405:22;10521:85:7;-1:-1:-1;;;;;10624:16:7;;10616:65;;;;-1:-1:-1;;;10616:65:7;;24023:2:22;10616:65:7;;;24005:21:22;24062:2;24042:18;;;24035:30;24101:34;24081:18;;;24074:62;-1:-1:-1;;;24152:18:22;;;24145:34;24196:19;;10616:65:7;23821:400:22;10616:65:7;10692:39;10713:4;10719:2;10723:7;10692:20;:39::i;:::-;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:7;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:7;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:7;-1:-1:-1;;;;;10891:21:7;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;634:205:6:-;773:58;;;-1:-1:-1;;;;;14954:32:22;;773:58:6;;;14936:51:22;15003:18;;;;14996:34;;;773:58:6;;;;;;;;;;14909:18:22;;;;773:58:6;;;;;;;;-1:-1:-1;;;;;773:58:6;-1:-1:-1;;;773:58:6;;;746:86;;766:5;;746:19;:86::i;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;777:809:16:-;898:4;937;898;952:515;976:5;:12;972:1;:16;952:515;;;1009:20;1032:5;1038:1;1032:8;;;;;;;;:::i;:::-;;;;;;;1009:31;;1075:12;1059;:28;1055:402;;1210:44;;;;;;24383:19:22;;;24418:12;;;24411:28;;;24455:12;;1210:44:16;;;;;;;;;;;;1200:55;;;;;;1185:70;;1055:402;;;1397:44;;;;;;24383:19:22;;;24418:12;;;24411:28;;;24455:12;;1397:44:16;;;;;;;;;;;;1387:55;;;;;;1372:70;;1055:402;-1:-1:-1;990:3:16;;;;:::i;:::-;;;;952:515;;;-1:-1:-1;1559:20:16;;;-1:-1:-1;777:809:16;;;;;;:::o;6612:307:7:-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:7;;;;;;;:::i;3019:107:19:-;3079:13;3111:8;3104:15;;;;;:::i;275:703:15:-;331:13;548:5;557:1;548:10;544:51;;-1:-1:-1;;574:10:15;;;;;;;;;;;;-1:-1:-1;;;574:10:15;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:15;;-1:-1:-1;720:2:15;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:15;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:15;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:15;;;;;;;;-1:-1:-1;919:11:15;928:2;919:11;;:::i;:::-;;;791:150;;4666:1012:19;4834:39;1115:6;1058;4834:39;:::i;:::-;4814:16;;:59;;4793:136;;;;-1:-1:-1;;;4793:136:19;;25473:2:22;4793:136:19;;;25455:21:22;25512:2;25492:18;;;25485:30;25551:32;25531:18;;;25524:60;25601:18;;4793:136:19;25271:354:22;4793:136:19;4948:16;4956:7;4948;:16::i;:::-;4947:17;4939:62;;;;-1:-1:-1;;;4939:62:19;;25832:2:22;4939:62:19;;;25814:21:22;;;25851:18;;;25844:30;25910:34;25890:18;;;25883:62;25962:18;;4939:62:19;25630:356:22;4939:62:19;5043:1;5032:7;:12;;:45;;;;;1058:6;5048:7;:29;;5032:45;5011:122;;;;-1:-1:-1;;;5011:122:19;;26193:2:22;5011:122:19;;;26175:21:22;26232:2;26212:18;;;26205:30;26271:32;26251:18;;;26244:60;26321:18;;5011:122:19;25991:354:22;5011:122:19;5164:19;;;;:10;:19;;;;;;:24;5143:109;;;;-1:-1:-1;;;5143:109:19;;26552:2:22;5143:109:19;;;26534:21:22;26591:2;26571:18;;;26564:30;26630:34;26610:18;;;26603:62;-1:-1:-1;;;26681:18:22;;;26674:36;26727:19;;5143:109:19;26350:402:22;5143:109:19;1164:1;5283:13;:27;:74;;;;1208:1;5330:13;:27;5283:74;:124;;;;1255:1;5377:13;:30;5283:124;5262:193;;;;-1:-1:-1;;;5262:193:19;;26959:2:22;5262:193:19;;;26941:21:22;26998:2;26978:18;;;26971:30;-1:-1:-1;;;27017:18:22;;;27010:52;27079:18;;5262:193:19;26757:346:22;5262:193:19;5465:19;;;;:10;:19;;;;;:35;;;5510:22;5520:2;5476:7;5510:9;:22::i;:::-;5560:5;;5542:29;;-1:-1:-1;;;;;5560:5:19;;5542:17;:29::i;:::-;5586:43;;;27282:25:22;;;27338:2;27323:18;;27316:34;;;5586:43:19;;27255:18:22;5586:43:19;;;;;;;5644:27;;2338:25:22;;;5644:27:19;;2326:2:22;2311:18;5644:27:19;;;;;;;4666:1012;;;:::o;2544:572:10:-;-1:-1:-1;;;;;2743:18:10;;2739:183;;2777:40;2809:7;3925:10;:17;;3898:24;;;;:15;:24;;;;;:44;;;3952:24;;;;;;;;;;;;3822:161;2777:40;2739:183;;;2846:2;-1:-1:-1;;;;;2838:10:10;:4;-1:-1:-1;;;;;2838:10:10;;2834:88;;2864:47;2897:4;2903:7;2864:32;:47::i;:::-;-1:-1:-1;;;;;2935:16:10;;2931:179;;2967:45;3004:7;2967:36;:45::i;2931:179::-;3039:4;-1:-1:-1;;;;;3033:10:10;:2;-1:-1:-1;;;;;3033:10:10;;3029:81;;3059:40;3087:2;3091:7;3059:27;:40::i;3140:706:6:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:6;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:6;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:6;;27813:2:22;3744:85:6;;;27795:21:22;27852:2;27832:18;;;27825:30;27891:34;27871:18;;;27864:62;-1:-1:-1;;;27942:18:22;;;27935:40;27992:19;;3744:85:6;27611:406:22;11797:782:7;11947:4;-1:-1:-1;;;;;11967:13:7;;1034:20:13;1080:8;11963:610:7;;12002:72;;-1:-1:-1;;;12002:72:7;;-1:-1:-1;;;;;12002:36:7;;;;;:72;;665:10:14;;12053:4:7;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:7;;;;;;;;-1:-1:-1;;12002:72:7;;;;;;;;;;;;:::i;:::-;;;11998:523;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12245:6;:13;12262:1;12245:18;12241:266;;12287:60;;-1:-1:-1;;;12287:60:7;;;;;;;:::i;12241:266::-;12459:6;12453:13;12444:6;12440:2;12436:15;12429:38;11998:523;-1:-1:-1;;;;;;12124:55:7;-1:-1:-1;;;12124:55:7;;-1:-1:-1;12117:62:7;;11963:610;-1:-1:-1;12558:4:7;11797:782;;;;;;:::o;8179:108::-;8254:26;8264:2;8268:7;8254:26;;;;;;;;;;;;:9;:26::i;:::-;8179:108;;:::o;4600:970:10:-;4862:22;4912:1;4887:22;4904:4;4887:16;:22::i;:::-;:26;;;;:::i;:::-;4923:18;4944:26;;;:17;:26;;;;;;4862:51;;-1:-1:-1;5074:28:10;;;5070:323;;-1:-1:-1;;;;;5140:18:10;;5118:19;5140:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5189:30;;;;;;:44;;;5305:30;;:17;:30;;;;;:43;;;5070:323;-1:-1:-1;5486:26:10;;;;:17;:26;;;;;;;;5479:33;;;-1:-1:-1;;;;;5529:18:10;;;;;:12;:18;;;;;:34;;;;;;;5522:41;4600:970::o;5858:1061::-;6132:10;:17;6107:22;;6132:21;;6152:1;;6132:21;:::i;:::-;6163:18;6184:24;;;:15;:24;;;;;;6552:10;:26;;6107:46;;-1:-1:-1;6184:24:10;;6107:46;;6552:26;;;;;;:::i;:::-;;;;;;;;;6530:48;;6614:11;6589:10;6600;6589:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6693:28;;;:15;:28;;;;;;;:41;;;6862:24;;;;;6855:31;6896:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5929:990;;;5858:1061;:::o;3410:217::-;3494:14;3511:20;3528:2;3511:16;:20::i;:::-;-1:-1:-1;;;;;3541:16:10;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3585:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3410:217:10:o;3461:223:13:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;8508:311:7:-;8633:18;8639:2;8643:7;8633:5;:18::i;:::-;8682:54;8713:1;8717:2;8721:7;8730:5;8682:22;:54::i;:::-;8661:151;;;;-1:-1:-1;;;8661:151:7;;;;;;;:::i;4548:500:13:-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:13;;29104:2:22;4737:81:13;;;29086:21:22;29143:2;29123:18;;;29116:30;29182:34;29162:18;;;29155:62;-1:-1:-1;;;29233:18:22;;;29226:36;29279:19;;4737:81:13;28902:402:22;4737:81:13;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:13;;29511:2:22;4828:60:13;;;29493:21:22;29550:2;29530:18;;;29523:30;29589:31;29569:18;;;29562:59;29638:18;;4828:60:13;29309:353:22;4828:60:13;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:13;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:13:o;9141:372:7:-;-1:-1:-1;;;;;9220:16:7;;9212:61;;;;-1:-1:-1;;;9212:61:7;;30148:2:22;9212:61:7;;;30130:21:22;;;30167:18;;;30160:30;30226:34;30206:18;;;30199:62;30278:18;;9212:61:7;29946:356:22;9212:61:7;9292:16;9300:7;9292;:16::i;:::-;9291:17;9283:58;;;;-1:-1:-1;;;9283:58:7;;30509:2:22;9283:58:7;;;30491:21:22;30548:2;30528:18;;;30521:30;30587;30567:18;;;30560:58;30635:18;;9283:58:7;30307:352:22;9283:58:7;9352:45;9381:1;9385:2;9389:7;9352:20;:45::i;:::-;-1:-1:-1;;;;;9408:13:7;;;;;;:9;:13;;;;;:18;;9425:1;;9408:13;:18;;9425:1;;9408:18;:::i;:::-;;;;-1:-1:-1;;9436:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9436:21:7;-1:-1:-1;;;;;9436:21:7;;;;;;;;9473:33;;9436:16;;;9473:33;;9436:16;;9473:33;9141:372;;:::o;6950:692:13:-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:13;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:13;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:22;-1:-1:-1;;;;;;88:32:22;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:22;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:22;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:22:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:22;;1343:180;-1:-1:-1;1343:180:22:o;1736:131::-;-1:-1:-1;;;;;1811:31:22;;1801:42;;1791:70;;1857:1;1854;1847:12;1872:315;1940:6;1948;2001:2;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2056:9;2043:23;2075:31;2100:5;2075:31;:::i;:::-;2125:5;2177:2;2162:18;;;;2149:32;;-1:-1:-1;;;1872:315:22:o;2374:127::-;2435:10;2430:3;2426:20;2423:1;2416:31;2466:4;2463:1;2456:15;2490:4;2487:1;2480:15;2506:275;2577:2;2571:9;2642:2;2623:13;;-1:-1:-1;;2619:27:22;2607:40;;2677:18;2662:34;;2698:22;;;2659:62;2656:88;;;2724:18;;:::i;:::-;2760:2;2753:22;2506:275;;-1:-1:-1;2506:275:22:o;2786:712::-;2840:5;2893:3;2886:4;2878:6;2874:17;2870:27;2860:55;;2911:1;2908;2901:12;2860:55;2947:6;2934:20;2973:4;2996:18;2992:2;2989:26;2986:52;;;3018:18;;:::i;:::-;3064:2;3061:1;3057:10;3087:28;3111:2;3107;3103:11;3087:28;:::i;:::-;3149:15;;;3219;;;3215:24;;;3180:12;;;;3251:15;;;3248:35;;;3279:1;3276;3269:12;3248:35;3315:2;3307:6;3303:15;3292:26;;3327:142;3343:6;3338:3;3335:15;3327:142;;;3409:17;;3397:30;;3360:12;;;;3447;;;;3327:142;;3503:663;3630:6;3638;3646;3699:2;3687:9;3678:7;3674:23;3670:32;3667:52;;;3715:1;3712;3705:12;3667:52;3751:9;3738:23;3728:33;;3812:2;3801:9;3797:18;3784:32;3835:18;3876:2;3868:6;3865:14;3862:34;;;3892:1;3889;3882:12;3862:34;3915:61;3968:7;3959:6;3948:9;3944:22;3915:61;:::i;:::-;3905:71;;4029:2;4018:9;4014:18;4001:32;3985:48;;4058:2;4048:8;4045:16;4042:36;;;4074:1;4071;4064:12;4042:36;;4097:63;4152:7;4141:8;4130:9;4126:24;4097:63;:::i;:::-;4087:73;;;3503:663;;;;;:::o;4171:456::-;4248:6;4256;4264;4317:2;4305:9;4296:7;4292:23;4288:32;4285:52;;;4333:1;4330;4323:12;4285:52;4372:9;4359:23;4391:31;4416:5;4391:31;:::i;:::-;4441:5;-1:-1:-1;4498:2:22;4483:18;;4470:32;4511:33;4470:32;4511:33;:::i;:::-;4171:456;;4563:7;;-1:-1:-1;;;4617:2:22;4602:18;;;;4589:32;;4171:456::o;4814:471::-;4906:6;4914;4922;4975:2;4963:9;4954:7;4950:23;4946:32;4943:52;;;4991:1;4988;4981:12;4943:52;5030:9;5017:23;5049:31;5074:5;5049:31;:::i;:::-;5099:5;-1:-1:-1;5151:2:22;5136:18;;5123:32;;-1:-1:-1;5207:2:22;5192:18;;5179:32;5220:33;5179:32;5220:33;:::i;:::-;5272:7;5262:17;;;4814:471;;;;;:::o;5290:592::-;5361:6;5369;5422:2;5410:9;5401:7;5397:23;5393:32;5390:52;;;5438:1;5435;5428:12;5390:52;5478:9;5465:23;5507:18;5548:2;5540:6;5537:14;5534:34;;;5564:1;5561;5554:12;5534:34;5602:6;5591:9;5587:22;5577:32;;5647:7;5640:4;5636:2;5632:13;5628:27;5618:55;;5669:1;5666;5659:12;5618:55;5709:2;5696:16;5735:2;5727:6;5724:14;5721:34;;;5751:1;5748;5741:12;5721:34;5796:7;5791:2;5782:6;5778:2;5774:15;5770:24;5767:37;5764:57;;;5817:1;5814;5807:12;5764:57;5848:2;5840:11;;;;;5870:6;;-1:-1:-1;5290:592:22;;-1:-1:-1;;;;5290:592:22:o;5887:247::-;5946:6;5999:2;5987:9;5978:7;5974:23;5970:32;5967:52;;;6015:1;6012;6005:12;5967:52;6054:9;6041:23;6073:31;6098:5;6073:31;:::i;6139:1142::-;6302:6;6310;6318;6326;6334;6387:3;6375:9;6366:7;6362:23;6358:33;6355:53;;;6404:1;6401;6394:12;6355:53;6444:9;6431:23;6473:18;6514:2;6506:6;6503:14;6500:34;;;6530:1;6527;6520:12;6500:34;6568:6;6557:9;6553:22;6543:32;;6613:7;6606:4;6602:2;6598:13;6594:27;6584:55;;6635:1;6632;6625:12;6584:55;6675:2;6662:16;6701:2;6693:6;6690:14;6687:34;;;6717:1;6714;6707:12;6687:34;6772:7;6765:4;6755:6;6752:1;6748:14;6744:2;6740:23;6736:34;6733:47;6730:67;;;6793:1;6790;6783:12;6730:67;6824:4;6816:13;;;;-1:-1:-1;6848:6:22;-1:-1:-1;6886:20:22;;;6873:34;;-1:-1:-1;6960:2:22;6945:18;;6932:32;;6976:16;;;6973:36;;;7005:1;7002;6995:12;6973:36;7028:63;7083:7;7072:8;7061:9;7057:24;7028:63;:::i;:::-;7018:73;;7144:2;7133:9;7129:18;7116:32;7100:48;;7173:2;7163:8;7160:16;7157:36;;;7189:1;7186;7179:12;7157:36;;7212:63;7267:7;7256:8;7245:9;7241:24;7212:63;:::i;:::-;7202:73;;;6139:1142;;;;;;;;:::o;7692:796::-;7921:2;7973:21;;;8043:13;;7946:18;;;8065:22;;;7892:4;;7921:2;8106;;8124:18;;;;8165:15;;;7892:4;8208:254;8222:6;8219:1;8216:13;8208:254;;;8281:13;;8319:9;;8307:22;;8369:11;;8363:18;8349:12;;;8342:40;8402:12;;;;8437:15;;;;8244:1;8237:9;8208:254;;;-1:-1:-1;8479:3:22;;7692:796;-1:-1:-1;;;;;;;7692:796:22:o;8493:118::-;8579:5;8572:13;8565:21;8558:5;8555:32;8545:60;;8601:1;8598;8591:12;8616:382;8681:6;8689;8742:2;8730:9;8721:7;8717:23;8713:32;8710:52;;;8758:1;8755;8748:12;8710:52;8797:9;8784:23;8816:31;8841:5;8816:31;:::i;:::-;8866:5;-1:-1:-1;8923:2:22;8908:18;;8895:32;8936:30;8895:32;8936:30;:::i;:::-;8985:7;8975:17;;;8616:382;;;;;:::o;9003:1108::-;9098:6;9106;9114;9122;9175:3;9163:9;9154:7;9150:23;9146:33;9143:53;;;9192:1;9189;9182:12;9143:53;9231:9;9218:23;9250:31;9275:5;9250:31;:::i;:::-;9300:5;-1:-1:-1;9324:2:22;9363:18;;;9350:32;9391:33;9350:32;9391:33;:::i;:::-;9443:7;-1:-1:-1;9497:2:22;9482:18;;9469:32;;-1:-1:-1;9552:2:22;9537:18;;9524:32;9575:18;9605:14;;;9602:34;;;9632:1;9629;9622:12;9602:34;9670:6;9659:9;9655:22;9645:32;;9715:7;9708:4;9704:2;9700:13;9696:27;9686:55;;9737:1;9734;9727:12;9686:55;9773:2;9760:16;9795:2;9791;9788:10;9785:36;;;9801:18;;:::i;:::-;9843:53;9886:2;9867:13;;-1:-1:-1;;9863:27:22;9859:36;;9843:53;:::i;:::-;9830:66;;9919:2;9912:5;9905:17;9959:7;9954:2;9949;9945;9941:11;9937:20;9934:33;9931:53;;;9980:1;9977;9970:12;9931:53;10035:2;10030;10026;10022:11;10017:2;10010:5;10006:14;9993:45;10079:1;10074:2;10069;10062:5;10058:14;10054:23;10047:34;;10100:5;10090:15;;;;;9003:1108;;;;;;;:::o;10116:388::-;10184:6;10192;10245:2;10233:9;10224:7;10220:23;10216:32;10213:52;;;10261:1;10258;10251:12;10213:52;10300:9;10287:23;10319:31;10344:5;10319:31;:::i;:::-;10369:5;-1:-1:-1;10426:2:22;10411:18;;10398:32;10439:33;10398:32;10439:33;:::i;10509:380::-;10588:1;10584:12;;;;10631;;;10652:61;;10706:4;10698:6;10694:17;10684:27;;10652:61;10759:2;10751:6;10748:14;10728:18;10725:38;10722:161;;10805:10;10800:3;10796:20;10793:1;10786:31;10840:4;10837:1;10830:15;10868:4;10865:1;10858:15;10722:161;;10509:380;;;:::o;12134:340::-;12336:2;12318:21;;;12375:2;12355:18;;;12348:30;-1:-1:-1;;;12409:2:22;12394:18;;12387:46;12465:2;12450:18;;12134:340::o;12479:353::-;12681:2;12663:21;;;12720:2;12700:18;;;12693:30;12759:31;12754:2;12739:18;;12732:59;12823:2;12808:18;;12479:353::o;12837:416::-;13039:2;13021:21;;;13078:2;13058:18;;;13051:30;13117:34;13112:2;13097:18;;13090:62;-1:-1:-1;;;13183:2:22;13168:18;;13161:50;13243:3;13228:19;;12837:416::o;13258:127::-;13319:10;13314:3;13310:20;13307:1;13300:31;13350:4;13347:1;13340:15;13374:4;13371:1;13364:15;13390:125;13430:4;13458:1;13455;13452:8;13449:34;;;13463:18;;:::i;:::-;-1:-1:-1;13500:9:22;;13390:125::o;13520:128::-;13560:3;13591:1;13587:6;13584:1;13581:13;13578:39;;;13597:18;;:::i;:::-;-1:-1:-1;13633:9:22;;13520:128::o;13653:398::-;13855:2;13837:21;;;13894:2;13874:18;;;13867:30;13933:34;13928:2;13913:18;;13906:62;-1:-1:-1;;;13999:2:22;13984:18;;13977:32;14041:3;14026:19;;13653:398::o;14056:168::-;14096:7;14162:1;14158;14154:6;14150:14;14147:1;14144:21;14139:1;14132:9;14125:17;14121:45;14118:71;;;14169:18;;:::i;:::-;-1:-1:-1;14209:9:22;;14056:168::o;14229:184::-;14299:6;14352:2;14340:9;14331:7;14327:23;14323:32;14320:52;;;14368:1;14365;14358:12;14320:52;-1:-1:-1;14391:16:22;;14229:184;-1:-1:-1;14229:184:22:o;15041:356::-;15243:2;15225:21;;;15262:18;;;15255:30;15321:34;15316:2;15301:18;;15294:62;15388:2;15373:18;;15041:356::o;15762:413::-;15964:2;15946:21;;;16003:2;15983:18;;;15976:30;16042:34;16037:2;16022:18;;16015:62;-1:-1:-1;;;16108:2:22;16093:18;;16086:47;16165:3;16150:19;;15762:413::o;17354:127::-;17415:10;17410:3;17406:20;17403:1;17396:31;17446:4;17443:1;17436:15;17470:4;17467:1;17460:15;19288:339;19490:2;19472:21;;;19529:2;19509:18;;;19502:30;-1:-1:-1;;;19563:2:22;19548:18;;19541:45;19618:2;19603:18;;19288:339::o;19992:135::-;20031:3;20052:17;;;20049:43;;20072:18;;:::i;:::-;-1:-1:-1;20119:1:22;20108:13;;19992:135::o;21460:772::-;21841:3;21879:6;21873:13;21895:53;21941:6;21936:3;21929:4;21921:6;21917:17;21895:53;:::i;:::-;-1:-1:-1;;;21970:16:22;;;21995:18;;;22038:13;;22060:65;22038:13;22112:1;22101:13;;22094:4;22082:17;;22060:65;:::i;:::-;-1:-1:-1;;;22188:1:22;22144:20;;;;22180:10;;;22173:27;22224:1;22216:10;;21460:772;-1:-1:-1;;;;21460:772:22:o;24478:414::-;24680:2;24662:21;;;24719:2;24699:18;;;24692:30;24758:34;24753:2;24738:18;;24731:62;-1:-1:-1;;;24824:2:22;24809:18;;24802:48;24882:3;24867:19;;24478:414::o;24897:127::-;24958:10;24953:3;24949:20;24946:1;24939:31;24989:4;24986:1;24979:15;25013:4;25010:1;25003:15;25029:120;25069:1;25095;25085:35;;25100:18;;:::i;:::-;-1:-1:-1;25134:9:22;;25029:120::o;25154:112::-;25186:1;25212;25202:35;;25217:18;;:::i;:::-;-1:-1:-1;25251:9:22;;25154:112::o;27361:245::-;27428:6;27481:2;27469:9;27460:7;27456:23;27452:32;27449:52;;;27497:1;27494;27487:12;27449:52;27529:9;27523:16;27548:28;27570:5;27548:28;:::i;28022:489::-;-1:-1:-1;;;;;28291:15:22;;;28273:34;;28343:15;;28338:2;28323:18;;28316:43;28390:2;28375:18;;28368:34;;;28438:3;28433:2;28418:18;;28411:31;;;28216:4;;28459:46;;28485:19;;28477:6;28459:46;:::i;:::-;28451:54;28022:489;-1:-1:-1;;;;;;28022:489:22:o;28516:249::-;28585:6;28638:2;28626:9;28617:7;28613:23;28609:32;28606:52;;;28654:1;28651;28644:12;28606:52;28686:9;28680:16;28705:30;28729:5;28705:30;:::i;28770:127::-;28831:10;28826:3;28822:20;28819:1;28812:31;28862:4;28859:1;28852:15;28886:4;28883:1;28876:15;29667:274;29796:3;29834:6;29828:13;29850:53;29896:6;29891:3;29884:4;29876:6;29872:17;29850:53;:::i;:::-;29919:16;;;;;29667:274;-1:-1:-1;;29667:274:22:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "forwardERC20s(address,uint256,address)": {
        "details": "allows owner to send ERC20s held by this contract to target"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mintCelestialWhitelist(bytes32[],uint256,uint256[],uint256[])": {
        "details": "GEN0 minting"
      },
      "mintCelestialWithAVAX(uint256,uint256[],uint256[])": {
        "details": "GEN0 minting"
      },
      "mintCelestialWithSoul(uint256,uint256[],uint256[])": {
        "details": "GEN0 minting"
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "setMerkleRoot(bytes32)": {
        "details": "merkle root for WL wallets"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawAVAX(uint256)": {
        "details": "allows owner to withdraw AVAX"
      }
    },
    "version": 1
  },
  "offset": [
    408,
    12332
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x376 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB64759 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xBC7D4034 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xE7B27AF7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE9F169F7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE9F169F7 EQ PUSH2 0x9C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0xF7BE4F11 EQ PUSH2 0x9F6 JUMPI DUP1 PUSH4 0xFF2A7656 EQ PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE7B27AF7 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0xE7C235B9 EQ PUSH2 0x941 JUMPI DUP1 PUSH4 0xE7D97E52 EQ PUSH2 0x961 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDBDDB26A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xDBDDB26A EQ PUSH2 0x8C1 JUMPI DUP1 PUSH4 0xDC9F9F96 EQ PUSH2 0x8D6 JUMPI DUP1 PUSH4 0xDE20BC92 EQ PUSH2 0x8EB JUMPI DUP1 PUSH4 0xE2EA1319 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC7D4034 EQ PUSH2 0x854 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x874 JUMPI DUP1 PUSH4 0xDB4BEC44 EQ PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA377D7EF GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xA7D5EC2D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xA7D5EC2D EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xAEB5CD5E EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0xB4FAD9AF EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA377D7EF EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0xA682F862 EQ PUSH2 0x7C7 JUMPI DUP1 PUSH4 0xA756A1DF EQ PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73A JUMPI DUP1 PUSH4 0x9B76DBCA EQ PUSH2 0x74F JUMPI DUP1 PUSH4 0x9EA6DB3D EQ PUSH2 0x765 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x815B7A8C EQ PUSH2 0x6FC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C1D4DE7 GT PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6352211E GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0x73033BDA EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0x7B82FDA6 EQ PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x65E940A2 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0x6B988176 EQ PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43F37B98 GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x43F37B98 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x5F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C1D4DE7 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x4036AB78 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200ED855 GT PUSH2 0x318 JUMPI DUP1 PUSH4 0x2CFB18B1 GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x2CFB18B1 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x33F6832A EQ PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200ED855 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x2B95B732 EQ PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x354 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x11A2428A EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x1DBB64BA EQ PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E70 JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x2EE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F26 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0xC80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x300E JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0x307B JUMP JUMPDEST PUSH2 0xF8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH7 0x49E57D6354000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F26 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x58E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x10D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x307B JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x5CE CALLDATASIZE PUSH1 0x4 PUSH2 0x30BC JUMP JUMPDEST PUSH2 0x114D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x5EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x60E CALLDATASIZE PUSH1 0x4 PUSH2 0x30FE JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0x64D CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x1254 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x1388 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x699 CALLDATASIZE PUSH1 0x4 PUSH2 0x3170 JUMP JUMPDEST PUSH2 0x12CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x1352 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x42A PUSH2 0x6D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x318D JUMP JUMPDEST PUSH2 0x1388 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x6F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x15A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x15D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x785 PUSH2 0x780 CALLDATASIZE PUSH1 0x4 PUSH2 0x3170 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x3253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x7AD CALLDATASIZE PUSH1 0x4 PUSH2 0x32B0 JUMP JUMPDEST PUSH2 0x172B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x17EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x3A98 DUP2 JUMP JUMPDEST PUSH2 0x42A PUSH2 0x801 CALLDATASIZE PUSH1 0x4 PUSH2 0x300E JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x42A PUSH2 0x814 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH7 0x5543DF729C000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x84F CALLDATASIZE PUSH1 0x4 PUSH2 0x32E9 JUMP JUMPDEST PUSH2 0x1A03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x88F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x1A35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH2 0x8AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3170 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x1ADC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x3F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x926 CALLDATASIZE PUSH1 0x4 PUSH2 0x3170 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x785 PUSH2 0x95C CALLDATASIZE PUSH1 0x4 PUSH2 0x2F26 JUMP JUMPDEST PUSH2 0x1BB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x992 CALLDATASIZE PUSH1 0x4 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x9F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3170 JUMP JUMPDEST PUSH2 0x1D07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA46 JUMPI POP PUSH2 0xA46 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x33DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA87 SWAP1 PUSH2 0x33DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE9 DUP3 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP3 PUSH2 0x1254 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xBFF JUMPI POP PUSH2 0xBFF DUP2 CALLER PUSH2 0x992 JUMP JUMPDEST PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0xC7B DUP4 DUP4 PUSH2 0x1E0F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x17 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xC97 JUMPI POP PUSH1 0x17 SLOAD TIMESTAMP LT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3415 JUMP JUMPDEST DUP3 PUSH1 0x1 EQ DUP1 PUSH2 0xCD5 JUMPI POP DUP3 PUSH1 0x5 EQ JUMPDEST DUP1 PUSH2 0xCE0 JUMPI POP DUP3 PUSH1 0xA EQ JUMPDEST PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x343F JUMP JUMPDEST DUP2 MLOAD DUP4 EQ DUP1 ISZERO PUSH2 0xD0C JUMPI POP DUP1 MLOAD DUP4 EQ JUMPDEST PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3476 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0xD37 SWAP1 PUSH2 0x2710 PUSH2 0x34E0 JUMP JUMPDEST DUP4 PUSH1 0x12 SLOAD PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST GT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xB SLOAD PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x3570 JUMP JUMPDEST LT ISZERO PUSH2 0xE32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA0814D3D553 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x1388 PUSH1 0x13 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xE54 JUMPI POP PUSH2 0x1388 DUP5 PUSH1 0x13 SLOAD PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xE6B JUMPI PUSH1 0xB SLOAD PUSH2 0xE67 SWAP1 PUSH1 0x2 PUSH2 0x3551 JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST DUP4 PUSH1 0x13 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF06 DUP5 DUP5 DUP5 PUSH2 0xF01 CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1E7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737461727454696D652063616E6E6F7420626520696E20746865207061737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH2 0xF95 CALLER DUP3 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0xC7B DUP4 DUP4 DUP4 PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC7 DUP4 PUSH2 0x12CB JUMP JUMPDEST DUP3 LT PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737461727454696D652063616E6E6F7420626520696E20746865207061737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10DC DUP3 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC7B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH2 0xC7B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1196 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x11F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x120C JUMPI PUSH2 0x120C PUSH2 0x360F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH2 0xC7B PUSH1 0xF DUP4 DUP4 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x137C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH2 0x1386 PUSH1 0x0 PUSH2 0x21DF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SUB PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1B5A5CDCDA5B99C81C9BDBDD PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x146D DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x10 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0x2231 JUMP JUMPDEST PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x39B9B4B7B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST DUP4 PUSH1 0x1 EQ DUP1 PUSH2 0x14D6 JUMPI POP DUP4 PUSH1 0x5 EQ JUMPDEST DUP1 PUSH2 0x14E1 JUMPI POP DUP4 PUSH1 0xA EQ JUMPDEST PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x343F JUMP JUMPDEST DUP3 MLOAD DUP5 EQ DUP1 ISZERO PUSH2 0x150D JUMPI POP DUP2 MLOAD DUP5 EQ JUMPDEST PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3476 JUMP JUMPDEST PUSH2 0x153A DUP5 PUSH7 0x49E57D6354000 PUSH2 0x3551 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1559 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3625 JUMP JUMPDEST DUP4 PUSH1 0x14 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x156B SWAP2 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x158F SWAP1 DUP5 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15A1 SWAP1 POP DUP5 DUP5 DUP5 CALLER PUSH2 0x1E7D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x33DB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x15F4 DUP4 PUSH2 0x12CB JUMP JUMPDEST GT PUSH2 0x1641 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468657265206973206E6F206E667420696E20796F75722062616C616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164C DUP4 PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1669 PUSH2 0x2F52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16AE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1687 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 PUSH2 0x16C8 DUP7 DUP4 PUSH2 0xFBC JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1704 JUMPI PUSH2 0x1704 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x171B SWAP1 PUSH2 0x364E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16B4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x1783 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xC97 JUMPI POP POP PUSH1 0x16 SLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3415 JUMP JUMPDEST DUP3 PUSH1 0x1 EQ DUP1 PUSH2 0x1842 JUMPI POP DUP3 PUSH1 0x5 EQ JUMPDEST DUP1 PUSH2 0x184D JUMPI POP DUP3 PUSH1 0xA EQ JUMPDEST PUSH2 0x1869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x343F JUMP JUMPDEST DUP2 MLOAD DUP4 EQ DUP1 ISZERO PUSH2 0x1879 JUMPI POP DUP1 MLOAD DUP4 EQ JUMPDEST PUSH2 0x1895 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3476 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x18A4 SWAP1 PUSH2 0x2710 PUSH2 0x34E0 JUMP JUMPDEST DUP4 PUSH1 0x12 SLOAD PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST GT ISZERO PUSH2 0x18D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E3 DUP5 PUSH7 0x5543DF729C000 PUSH2 0x3551 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x1905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3625 JUMP JUMPDEST DUP4 PUSH1 0x12 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1917 SWAP2 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF06 SWAP1 POP DUP5 DUP5 DUP5 CALLER PUSH2 0x1E7D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x1973 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19B7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x8CC2D2D8CAC840E8DE40E6CADCC84082AC82B PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x1A0D CALLER DUP4 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x1A29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0xF06 DUP5 DUP5 DUP5 DUP5 PUSH2 0x22E2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A40 DUP3 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x1AA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x1AAC PUSH2 0x2315 JUMP JUMPDEST PUSH2 0x1AB5 DUP4 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AC6 SWAP3 SWAP2 SWAP1 PUSH2 0x3667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x1AE9 SWAP1 PUSH2 0x33DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B15 SWAP1 PUSH2 0x33DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1BC3 DUP5 PUSH2 0x12CB JUMP JUMPDEST GT PUSH2 0x1C10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468657265206973206E6F206E667420696E20796F75722062616C616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x5 DUP1 DUP3 MSTORE PUSH1 0xC0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1C28 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1C5E DUP5 PUSH1 0x5 PUSH2 0x3551 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C6D DUP3 PUSH1 0x5 PUSH2 0x34F7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C78 DUP7 PUSH2 0x12CB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C88 DUP7 PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CFC JUMPI PUSH1 0x0 PUSH2 0x1CA1 DUP9 DUP4 PUSH2 0xFBC JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE POP DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CDD JUMPI PUSH2 0x1CDD PUSH2 0x360F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x1CF4 SWAP1 PUSH2 0x364E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C8D JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1D96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x21DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1DD3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA46 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1E44 DUP3 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1EF1 JUMPI PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E9B SWAP2 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EDF DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EB8 JUMPI PUSH2 0x1EB8 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1ED2 JUMPI PUSH2 0x1ED2 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH2 0x1EE9 DUP2 PUSH2 0x364E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E80 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F03 DUP3 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x1F64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6F DUP4 PUSH2 0x1254 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1FAA JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F9F DUP5 PUSH2 0xADE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1FDA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FF5 DUP3 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x205D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x20CA DUP4 DUP4 DUP4 PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0x20D5 PUSH1 0x0 DUP3 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x20FE SWAP1 DUP5 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x212C SWAP1 DUP5 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xC7B SWAP1 DUP5 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x22D5 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2253 JUMPI PUSH2 0x2253 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2295 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x22CD DUP2 PUSH2 0x364E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2236 JUMP JUMPDEST POP DUP4 EQ SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x22ED DUP5 DUP5 DUP5 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x22F9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2830 JUMP JUMPDEST PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x36B5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x33DB JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x234B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2375 JUMPI DUP1 PUSH2 0x235F DUP2 PUSH2 0x364E JUMP JUMPDEST SWAP2 POP PUSH2 0x236E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x371D JUMP JUMPDEST SWAP2 POP PUSH2 0x234F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2390 JUMPI PUSH2 0x2390 PUSH2 0x2F52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x23BA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1FDA JUMPI PUSH2 0x23CF PUSH1 0x1 DUP4 PUSH2 0x34E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DC PUSH1 0xA DUP7 PUSH2 0x3731 JUMP JUMPDEST PUSH2 0x23E7 SWAP1 PUSH1 0x30 PUSH2 0x34F7 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x23FC JUMPI PUSH2 0x23FC PUSH2 0x360F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x241E PUSH1 0xA DUP7 PUSH2 0x371D JUMP JUMPDEST SWAP5 POP PUSH2 0x23BE JUMP JUMPDEST PUSH2 0x2433 PUSH2 0x3A98 PUSH2 0x2710 PUSH2 0x34F7 JUMP JUMPDEST PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x2484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74206D696E7420616E796D6F72652063656C65737469616C730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x248D DUP3 PUSH2 0x1DF2 JUMP JUMPDEST ISZERO PUSH2 0x24DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746869732027746F6B656E49642720697320616C726561647920746F6F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x24ED JUMPI POP PUSH2 0x2710 DUP3 GT ISZERO JUMPDEST PUSH2 0x2539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x27746F6B656E496427206D75737420626520696E207468652072616E67650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468617420746F6B656E277320747970652068617320616C7265616479206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x195B881CD95D PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x25B3 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST DUP1 PUSH2 0x25BE JUMPI POP PUSH1 0x3 DUP2 EQ JUMPDEST PUSH2 0x2603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642063656C65737469616C2074797065 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x261E DUP4 DUP4 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x2635 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xC3446D569695AA78750F8132CE4941514489A02C8CA9A2078EE392DCCD96474E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xB0C73316550069520AA3BFFD50BE8C7989584DA8716295793EDA73DBCD1C154C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2701 JUMPI PUSH2 0x26FC DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2724 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2724 JUMPI PUSH2 0x2724 DUP4 DUP3 PUSH2 0x294F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x273B JUMPI PUSH2 0xC7B DUP2 PUSH2 0x29EC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC7B JUMPI PUSH2 0xC7B DUP3 DUP3 PUSH2 0x2A9B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2ADF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC7B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x27D1 SWAP2 SWAP1 PUSH2 0x3745 JUMP JUMPDEST PUSH2 0xC7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2926 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2874 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3762 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x28AF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x28AC SWAP2 DUP2 ADD SWAP1 PUSH2 0x379F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x290C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x28DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x36B5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1FDA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x294B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2AEE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x295C DUP5 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x29B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x29FE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2A26 JUMPI PUSH2 0x2A26 PUSH2 0x360F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2A47 JUMPI PUSH2 0x2A47 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2A7F JUMPI PUSH2 0x2A7F PUSH2 0x37BC JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA6 DUP4 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FDA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2B21 JUMP JUMPDEST PUSH2 0x2AF8 DUP4 DUP4 PUSH2 0x2C49 JUMP JUMPDEST PUSH2 0x2B05 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2830 JUMP JUMPDEST PUSH2 0xC7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x36B5 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2B82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB46 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x2BD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2BEC SWAP2 SWAP1 PUSH2 0x37D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C29 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2C3E DUP3 DUP3 DUP7 PUSH2 0x2D88 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x2CA8 DUP2 PUSH2 0x1DF2 JUMP JUMPDEST ISZERO PUSH2 0x2CF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x2D01 PUSH1 0x0 DUP4 DUP4 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2D2A SWAP1 DUP5 SWAP1 PUSH2 0x34F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2D97 JUMPI POP DUP2 PUSH2 0x22DB JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2DA7 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x2EE5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2DCD SWAP1 PUSH2 0x33DB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2DEF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2E35 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2E08 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x2E35 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2E35 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2E35 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E1A JUMP JUMPDEST POP PUSH2 0x2E41 SWAP3 SWAP2 POP PUSH2 0x2E45 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E41 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22DB DUP2 PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EA8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E90 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF06 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2ED1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22DB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2F44 DUP2 PUSH2 0x2F11 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2F91 JUMPI PUSH2 0x2F91 PUSH2 0x2F52 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FC6 JUMPI PUSH2 0x2FC6 PUSH2 0x2F52 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x2FD5 DUP3 DUP3 ADD PUSH2 0x2F68 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x2FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x2C3E JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x2FF5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x304E DUP8 DUP4 DUP9 ADD PUSH2 0x2F99 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3064 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3071 DUP7 DUP3 DUP8 ADD PUSH2 0x2F99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x309B DUP2 PUSH2 0x2F11 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x30AB DUP2 PUSH2 0x2F11 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x30DC DUP2 PUSH2 0x2F11 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x30F3 DUP2 PUSH2 0x2F11 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x313D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x314C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x315E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22DB DUP2 PUSH2 0x2F11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x31A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x31BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x31E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x31F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP8 POP SWAP6 POP SWAP1 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x3217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3223 DUP10 DUP4 DUP11 ADD PUSH2 0x2F99 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3246 DUP9 DUP3 DUP10 ADD PUSH2 0x2F99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3295 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3270 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x32CE DUP2 PUSH2 0x2F11 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x32DE DUP2 PUSH2 0x32A2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x32FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x330A DUP2 PUSH2 0x2F11 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 DUP2 ADD CALLDATALOAD PUSH2 0x331B DUP2 PUSH2 0x2F11 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x333F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3365 JUMPI PUSH2 0x3365 PUSH2 0x2F52 JUMP JUMPDEST PUSH2 0x3377 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x2F68 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x338D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x33CB DUP2 PUSH2 0x2F11 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x32DE DUP2 PUSH2 0x2F11 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x33EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x340F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x7175616E74697479206D7573742062652031206F722035206F72203130000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C656E677468206F662074686520616D6F756E74206F6620746865206E667420 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x6D75737420626520657175616C20746F20717479 PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x34F2 JUMPI PUSH2 0x34F2 PUSH2 0x34CA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x350A JUMPI PUSH2 0x350A PUSH2 0x34CA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x796F752063616E2774206D696E742074686174206D616E79207269676874206E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6F77 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x356B JUMPI PUSH2 0x356B PUSH2 0x34CA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0xDCDEE840CADCDEEACED04082AC82B PUSH1 0x8B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3660 JUMPI PUSH2 0x3660 PUSH2 0x34CA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3679 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x2F PUSH1 0xF8 SHL SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x3697 DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2E8D JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL PUSH1 0x1 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x6 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x372C JUMPI PUSH2 0x372C PUSH2 0x3707 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3740 JUMPI PUSH2 0x3740 PUSH2 0x3707 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22DB DUP2 PUSH2 0x32A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3795 SWAP1 DUP4 ADD DUP5 PUSH2 0x2EB9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22DB DUP2 PUSH2 0x2E5A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x37E4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2E8D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B JUMPI 0x2F 0xBA SWAP3 SWAP3 STOP ORIGIN SHL SAR 0xDF SWAP12 DUP8 CALLDATACOPY 0x22 DUP10 0x49 SWAP1 JUMPDEST 0xA9 0xAA 0xE0 SWAP7 LT SWAP16 0x5E 0xEC PUSH10 0x6829E9B064736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "LT",
      "path": "19"
    },
    "9": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x376"
    },
    "12": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "SHR",
      "path": "19"
    },
    "19": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "20": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7CB64759"
    },
    "25": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D1"
    },
    "29": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "30": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "31": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBC7D4034"
    },
    "36": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "37": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102"
    },
    "40": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "41": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "42": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7B27AF7"
    },
    "47": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "48": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "52": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "53": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE9F169F7"
    },
    "58": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "59": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "63": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "64": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE9F169F7"
    },
    "69": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "70": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9C0"
    },
    "73": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "74": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "75": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "81": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9D6"
    },
    "84": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "85": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "86": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF7BE4F11"
    },
    "91": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "92": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9F6"
    },
    "95": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "96": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "97": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFF2A7656"
    },
    "102": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "103": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA0B"
    },
    "106": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "107": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "110": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "111": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "112": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "113": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7B27AF7"
    },
    "118": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "119": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x92B"
    },
    "122": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "123": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "124": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7C235B9"
    },
    "129": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "130": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x941"
    },
    "133": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "134": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "135": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE7D97E52"
    },
    "140": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "141": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x961"
    },
    "144": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "145": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "146": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE985E9C5"
    },
    "151": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "152": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x977"
    },
    "155": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "156": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "159": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "160": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "161": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "162": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDBDDB26A"
    },
    "167": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "168": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "172": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "173": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDBDDB26A"
    },
    "178": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "179": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8C1"
    },
    "182": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "183": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "184": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDC9F9F96"
    },
    "189": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "190": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8D6"
    },
    "193": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "194": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "195": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDE20BC92"
    },
    "200": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "201": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8EB"
    },
    "204": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "205": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "206": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE2EA1319"
    },
    "211": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "212": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x90B"
    },
    "215": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "216": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "219": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "220": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "221": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "222": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBC7D4034"
    },
    "227": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "228": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x854"
    },
    "231": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "232": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "233": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC87B56DD"
    },
    "238": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "239": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x874"
    },
    "242": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "243": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "244": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xDB4BEC44"
    },
    "249": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "250": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x894"
    },
    "253": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "254": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "257": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "258": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "259": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "260": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA377D7EF"
    },
    "265": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "266": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16F"
    },
    "269": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "270": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "271": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA7D5EC2D"
    },
    "276": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "277": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "281": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "282": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA7D5EC2D"
    },
    "287": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "288": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7F3"
    },
    "291": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "292": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "293": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAEB5CD5E"
    },
    "298": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "299": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x806"
    },
    "302": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "303": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "304": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB4FAD9AF"
    },
    "309": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "310": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x819"
    },
    "313": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "314": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "315": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xB88D4FDE"
    },
    "320": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "321": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x834"
    },
    "324": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "325": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "328": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "329": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "330": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "331": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA377D7EF"
    },
    "336": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "337": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B2"
    },
    "340": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "341": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "342": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA682F862"
    },
    "347": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "348": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7C7"
    },
    "351": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "352": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "353": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA756A1DF"
    },
    "358": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "359": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7DD"
    },
    "362": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "363": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "365": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "366": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "367": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "368": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "369": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95D89B41"
    },
    "374": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "375": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AB"
    },
    "378": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "379": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "380": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95D89B41"
    },
    "385": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "386": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x73A"
    },
    "389": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "390": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "391": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9B76DBCA"
    },
    "396": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "397": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x74F"
    },
    "400": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "401": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "402": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9EA6DB3D"
    },
    "407": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "408": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x765"
    },
    "411": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "412": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "413": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA22CB465"
    },
    "418": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "419": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x792"
    },
    "422": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "423": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "425": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "426": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "427": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "428": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "429": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7CB64759"
    },
    "434": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "435": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6DC"
    },
    "438": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "439": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "440": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x815B7A8C"
    },
    "445": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "446": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6FC"
    },
    "449": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "450": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "451": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "456": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "457": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x71C"
    },
    "460": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "461": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "463": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "464": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "465": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "466": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "467": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3C1D4DE7"
    },
    "472": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "473": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2AB"
    },
    "476": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "477": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "478": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6352211E"
    },
    "483": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "484": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x249"
    },
    "487": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "488": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "489": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "494": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "495": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x223"
    },
    "498": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "499": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "500": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "505": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "506": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x67E"
    },
    "509": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "510": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "511": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "516": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "517": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x69E"
    },
    "520": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "521": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "522": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x73033BDA"
    },
    "527": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "528": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B3"
    },
    "531": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "532": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "533": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7B82FDA6"
    },
    "538": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "539": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6C9"
    },
    "542": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "543": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "545": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "546": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "547": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "548": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "549": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6352211E"
    },
    "554": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "555": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x632"
    },
    "558": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "559": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "560": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x65E940A2"
    },
    "565": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "566": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x652"
    },
    "569": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "570": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "571": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6B988176"
    },
    "576": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "577": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x668"
    },
    "580": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "581": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "583": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "584": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "585": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "586": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "587": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x43F37B98"
    },
    "592": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "593": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x285"
    },
    "596": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "597": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "598": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x43F37B98"
    },
    "603": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "604": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5B3"
    },
    "607": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "608": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "609": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4F6CCCE7"
    },
    "614": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "615": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5D3"
    },
    "618": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "619": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "620": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x55F804B3"
    },
    "625": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "626": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5F3"
    },
    "629": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "630": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "631": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5C975ABB"
    },
    "636": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "637": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x613"
    },
    "640": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "641": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "643": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "644": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "645": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "646": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "647": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3C1D4DE7"
    },
    "652": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "653": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x553"
    },
    "656": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "657": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "658": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4036AB78"
    },
    "663": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "664": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x573"
    },
    "667": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "668": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "669": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x42842E0E"
    },
    "674": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "675": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x593"
    },
    "678": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "679": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "681": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "682": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "683": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "684": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "685": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x200ED855"
    },
    "690": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "691": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x318"
    },
    "694": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "695": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "696": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2CFB18B1"
    },
    "701": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "702": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F2"
    },
    "705": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "706": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "707": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2CFB18B1"
    },
    "712": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "713": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4D5"
    },
    "716": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "717": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "718": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2EB4A7AB"
    },
    "723": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "724": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4F0"
    },
    "727": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "728": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "729": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2F745C59"
    },
    "734": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "735": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x506"
    },
    "738": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "739": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "740": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x33F6832A"
    },
    "745": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "746": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x526"
    },
    "749": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "750": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "752": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "753": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "754": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "755": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "756": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x200ED855"
    },
    "761": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "762": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x480"
    },
    "765": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "766": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "767": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x23B872DD"
    },
    "772": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "773": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A0"
    },
    "776": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "777": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "778": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2B95B732"
    },
    "783": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "784": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4C0"
    },
    "787": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "788": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "790": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "791": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "792": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "793": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "794": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95EA7B3"
    },
    "799": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "GT",
      "path": "19"
    },
    "800": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x354"
    },
    "803": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "804": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "805": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x95EA7B3"
    },
    "810": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "811": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x40A"
    },
    "814": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "815": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "816": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x11A2428A"
    },
    "821": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "822": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42C"
    },
    "825": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "826": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "827": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x18160DDD"
    },
    "832": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "833": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x441"
    },
    "836": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "837": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "838": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1DBB64BA"
    },
    "843": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "844": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x460"
    },
    "847": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "848": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "850": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "851": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "852": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "853": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "854": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1FFC9A7"
    },
    "859": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "860": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37B"
    },
    "863": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "864": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "865": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6FDDE03"
    },
    "870": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "871": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3B0"
    },
    "874": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "875": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "876": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x81812FC"
    },
    "881": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "EQ",
      "path": "19"
    },
    "882": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3D2"
    },
    "885": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "886": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "887": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "889": {
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "DUP1",
      "path": "19"
    },
    "890": {
      "first_revert": true,
      "fn": null,
      "offset": [
        408,
        12332
      ],
      "op": "REVERT",
      "path": "19"
    },
    "891": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "892": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "893": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "DUP1",
      "path": "10"
    },
    "894": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "895": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x387"
    },
    "898": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "899": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "901": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "DUP1",
      "path": "10"
    },
    "902": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "REVERT",
      "path": "10"
    },
    "903": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "904": {
      "op": "POP"
    },
    "905": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39B"
    },
    "908": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x396"
    },
    "911": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "912": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "914": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E70"
    },
    "917": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        910,
        1132
      ],
      "op": "JUMP",
      "path": "10"
    },
    "918": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "919": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA21"
    },
    "922": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        910,
        1132
      ],
      "op": "JUMP",
      "path": "10"
    },
    "923": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "924": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "926": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "927": {
      "op": "SWAP1"
    },
    "928": {
      "op": "ISZERO"
    },
    "929": {
      "op": "ISZERO"
    },
    "930": {
      "op": "DUP2"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "936": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "939": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "DUP1",
      "path": "10"
    },
    "940": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "941": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "SUB",
      "path": "10"
    },
    "942": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "943": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "RETURN",
      "path": "10"
    },
    "944": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "945": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "946": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "DUP1",
      "path": "7"
    },
    "947": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "948": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3BC"
    },
    "951": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "952": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "954": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "DUP1",
      "path": "7"
    },
    "955": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "REVERT",
      "path": "7"
    },
    "956": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "957": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "POP",
      "path": "7"
    },
    "958": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C5"
    },
    "961": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA4C"
    },
    "964": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "7"
    },
    "965": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "966": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "968": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "969": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A7"
    },
    "972": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "973": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "974": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EE5"
    },
    "977": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "7"
    },
    "978": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "979": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "980": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "DUP1",
      "path": "7"
    },
    "981": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "982": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DE"
    },
    "985": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "986": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "988": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "DUP1",
      "path": "7"
    },
    "989": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "REVERT",
      "path": "7"
    },
    "990": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "991": {
      "op": "POP"
    },
    "992": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F2"
    },
    "995": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3ED"
    },
    "998": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "999": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1001": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EF8"
    },
    "1004": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1005": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1006": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xADE"
    },
    "1009": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1010": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1011": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1013": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "op": "SUB"
    },
    "1022": {
      "op": "SWAP1"
    },
    "1023": {
      "op": "SWAP2"
    },
    "1024": {
      "op": "AND"
    },
    "1025": {
      "op": "DUP2"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A7"
    },
    "1033": {
      "op": "JUMP"
    },
    "1034": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1035": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1036": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1037": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1038": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x416"
    },
    "1041": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1042": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1044": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1045": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1046": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1047": {
      "op": "POP"
    },
    "1048": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x42A"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x425"
    },
    "1054": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1057": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F26"
    },
    "1060": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1061": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1062": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB6B"
    },
    "1065": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "STOP",
      "path": "7"
    },
    "1068": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1069": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1070": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1071": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1072": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x438"
    },
    "1075": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1076": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1078": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1079": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1080": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1081": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "POP",
      "path": "19"
    },
    "1082": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x39B"
    },
    "1085": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC80"
    },
    "1088": {
      "fn": "Celestial.mintingStartedSOUL",
      "jump": "i",
      "offset": [
        3719,
        3854
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1089": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1090": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1091": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1092": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1093": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44D"
    },
    "1096": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1097": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1099": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1100": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1101": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1632
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x8"
    },
    "1105": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1639
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1106": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1107": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1109": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1110": {
      "op": "SWAP1"
    },
    "1111": {
      "op": "DUP2"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1115": {
      "op": "ADD"
    },
    "1116": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A7"
    },
    "1119": {
      "op": "JUMP"
    },
    "1120": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1121": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1122": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1123": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1124": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "1127": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1128": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1130": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1131": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1132": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "1137": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x47B"
    },
    "1140": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1141": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1143": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x300E"
    },
    "1146": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        9453,
        10848
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1147": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1148": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC9C"
    },
    "1151": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        9453,
        10848
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1152": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1153": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1154": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1155": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1156": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x48C"
    },
    "1159": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1160": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1162": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1163": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1164": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1165": {
      "op": "POP"
    },
    "1166": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "1169": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x49B"
    },
    "1172": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1173": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1175": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EF8"
    },
    "1178": {
      "fn": "Celestial.setStartTimeSOUL",
      "jump": "i",
      "offset": [
        2771,
        2996
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1179": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1180": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF0C"
    },
    "1183": {
      "fn": "Celestial.setStartTimeSOUL",
      "jump": "i",
      "offset": [
        2771,
        2996
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1184": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1185": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1186": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1187": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1188": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AC"
    },
    "1191": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1192": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1194": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1195": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1196": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x42A"
    },
    "1201": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4BB"
    },
    "1204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1205": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1207": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x307B"
    },
    "1210": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF8B"
    },
    "1215": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1216": {
      "offset": [
        1171,
        1209
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1219": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4CC"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1224": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "POP",
      "path": "19"
    },
    "1230": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1233": {
      "offset": [
        1208,
        1209
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "1235": {
      "offset": [
        1171,
        1209
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1171,
        1209
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1237": {
      "offset": [
        728,
        792
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E1"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1247": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "POP",
      "path": "19"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1254": {
      "offset": [
        780,
        792
      ],
      "op": "PUSH7",
      "path": "19",
      "value": "0x49E57D6354000"
    },
    "1262": {
      "offset": [
        728,
        792
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1263": {
      "fn": "ERC721.transferFrom",
      "offset": [
        728,
        792
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1264": {
      "offset": [
        1535,
        1560
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1265": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1266": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1267": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1268": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4FC"
    },
    "1271": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1272": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1274": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1275": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1276": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1277": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "POP",
      "path": "19"
    },
    "1278": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1281": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "1283": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1284": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1285": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1535,
        1560
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1286": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1287": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1288": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1289": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1290": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x512"
    },
    "1293": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1294": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1296": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1297": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1298": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x452"
    },
    "1303": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x521"
    },
    "1306": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1307": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1309": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F26"
    },
    "1312": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1313": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1314": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFBC"
    },
    "1317": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1318": {
      "offset": [
        2026,
        2071
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1319": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1320": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1321": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1322": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x532"
    },
    "1325": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1326": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1328": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1329": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1330": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1335": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x541"
    },
    "1338": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1339": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1341": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EF8"
    },
    "1344": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        2026,
        2071
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1345": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1346": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "1348": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1350": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1351": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1353": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1354": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1355": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1356": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1358": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1359": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1360": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1361": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1362": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        2026,
        2071
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1363": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1364": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1365": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1366": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1367": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x55F"
    },
    "1370": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1371": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1373": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1374": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1375": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1376": {
      "op": "POP"
    },
    "1377": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "1380": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x56E"
    },
    "1383": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1384": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1386": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EF8"
    },
    "1389": {
      "fn": "Celestial.setStartTimeAVAX",
      "jump": "i",
      "offset": [
        2540,
        2765
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1390": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1391": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1052"
    },
    "1394": {
      "fn": "Celestial.setStartTimeAVAX",
      "jump": "i",
      "offset": [
        2540,
        2765
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1395": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1396": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1397": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1398": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1399": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x57F"
    },
    "1402": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1403": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1405": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1406": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1407": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1408": {
      "op": "POP"
    },
    "1409": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1412": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x58E"
    },
    "1415": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1416": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1418": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EF8"
    },
    "1421": {
      "fn": "Celestial.getType",
      "jump": "i",
      "offset": [
        3241,
        3410
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1422": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1423": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10D1"
    },
    "1426": {
      "fn": "Celestial.getType",
      "jump": "i",
      "offset": [
        3241,
        3410
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1427": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1428": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1430": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1431": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x59F"
    },
    "1434": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1435": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1437": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1438": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1439": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x42A"
    },
    "1444": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5AE"
    },
    "1447": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1450": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x307B"
    },
    "1453": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1132"
    },
    "1458": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1459": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1460": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1461": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1462": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1463": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5BF"
    },
    "1466": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1467": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1469": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1470": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1471": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1472": {
      "op": "POP"
    },
    "1473": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "1476": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5CE"
    },
    "1479": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1480": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1482": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x30BC"
    },
    "1485": {
      "fn": "Celestial.forwardERC20s",
      "jump": "i",
      "offset": [
        3948,
        4121
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1486": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1487": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x114D"
    },
    "1490": {
      "fn": "Celestial.forwardERC20s",
      "jump": "i",
      "offset": [
        3948,
        4121
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1491": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1492": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1493": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1494": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1495": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5DF"
    },
    "1498": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1499": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1501": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1502": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1503": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x452"
    },
    "1508": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5EE"
    },
    "1511": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1512": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1514": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2EF8"
    },
    "1517": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1518": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1519": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x118B"
    },
    "1522": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1523": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1524": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1525": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1526": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1527": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5FF"
    },
    "1530": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1531": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1533": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1534": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1535": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "1540": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x60E"
    },
    "1543": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1544": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1546": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x30FE"
    },
    "1549": {
      "fn": "Celestial.setBaseURI",
      "jump": "i",
      "offset": [
        3132,
        3235
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1550": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1551": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x121E"
    },
    "1554": {
      "fn": "Celestial.setBaseURI",
      "jump": "i",
      "offset": [
        3132,
        3235
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1555": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1556": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1557": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1558": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1559": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61F"
    },
    "1562": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1563": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1565": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1566": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1567": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0xA"
    },
    "1571": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1578": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "1579": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1581": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "1582": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39B"
    },
    "1585": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1586": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1588": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1589": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1590": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x63E"
    },
    "1593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1594": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1597": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1598": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F2"
    },
    "1603": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x64D"
    },
    "1606": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1607": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1609": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EF8"
    },
    "1612": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1613": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1614": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1254"
    },
    "1617": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1618": {
      "offset": [
        1645,
        1684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1620": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1621": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1622": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x65E"
    },
    "1625": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1626": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1628": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1629": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1630": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1631": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "POP",
      "path": "19"
    },
    "1632": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1635": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "1637": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1638": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1639": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1645,
        1684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1640": {
      "offset": [
        876,
        936
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1641": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1642": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1643": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1644": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x674"
    },
    "1647": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1648": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1651": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1652": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1653": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "POP",
      "path": "19"
    },
    "1654": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1657": {
      "offset": [
        932,
        936
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1388"
    },
    "1660": {
      "offset": [
        876,
        936
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1661": {
      "fn": "ERC721.ownerOf",
      "offset": [
        876,
        936
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1662": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1663": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1664": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1665": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1666": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x68A"
    },
    "1669": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1670": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1672": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1673": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1674": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1675": {
      "op": "POP"
    },
    "1676": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x452"
    },
    "1679": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x699"
    },
    "1682": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1683": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1685": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3170"
    },
    "1688": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1689": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1690": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12CB"
    },
    "1693": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1694": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1696": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1697": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1698": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AA"
    },
    "1701": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1702": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1705": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1706": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1707": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "1708": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42A"
    },
    "1711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1352"
    },
    "1714": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1715": {
      "offset": [
        1013,
        1064
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1717": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1719": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6BF"
    },
    "1722": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1723": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1726": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1727": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1728": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "POP",
      "path": "19"
    },
    "1729": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1732": {
      "offset": [
        1058,
        1064
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "1735": {
      "offset": [
        1013,
        1064
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1736": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1013,
        1064
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1737": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1738": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "1741": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6D7"
    },
    "1744": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1745": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1747": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x318D"
    },
    "1750": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        6600,
        8335
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1751": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1752": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1388"
    },
    "1755": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        6600,
        8335
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1756": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1757": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1758": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1759": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1760": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6E8"
    },
    "1763": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1764": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1766": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1767": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1768": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "1773": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F7"
    },
    "1776": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1777": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1779": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EF8"
    },
    "1782": {
      "fn": "Celestial.setMerkleRoot",
      "jump": "i",
      "offset": [
        4540,
        4644
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1783": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1784": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15A9"
    },
    "1787": {
      "fn": "Celestial.setMerkleRoot",
      "jump": "i",
      "offset": [
        4540,
        4644
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1788": {
      "offset": [
        1378,
        1394
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1789": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1790": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1791": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1792": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x708"
    },
    "1795": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1796": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1798": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1799": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1800": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "offset": [
        1378,
        1394
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "1804": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1805": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3F2"
    },
    "1808": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1815": {
      "op": "SHL"
    },
    "1816": {
      "op": "SUB"
    },
    "1817": {
      "offset": [
        1378,
        1394
      ],
      "op": "AND",
      "path": "19"
    },
    "1818": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1819": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        1378,
        1394
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1820": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1821": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1822": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1823": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1824": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x728"
    },
    "1827": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1828": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1830": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1831": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1832": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1833": {
      "op": "POP"
    },
    "1834": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "1836": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1843": {
      "op": "SHL"
    },
    "1844": {
      "op": "SUB"
    },
    "1845": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1846": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F2"
    },
    "1849": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1850": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1851": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1852": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1853": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1854": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x746"
    },
    "1857": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1858": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1860": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1861": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1862": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1863": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "POP",
      "path": "7"
    },
    "1864": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C5"
    },
    "1867": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15D8"
    },
    "1870": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1871": {
      "offset": [
        1781,
        1816
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1872": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1873": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1874": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1875": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x75B"
    },
    "1878": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1879": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1881": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1882": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1883": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1884": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "POP",
      "path": "19"
    },
    "1885": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "1888": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "1890": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1891": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1892": {
      "fn": "ERC721.symbol",
      "offset": [
        1781,
        1816
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1893": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1894": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1895": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1896": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1897": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x771"
    },
    "1900": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1901": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1903": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1904": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1905": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1906": {
      "op": "POP"
    },
    "1907": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x785"
    },
    "1910": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x780"
    },
    "1913": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1914": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1916": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3170"
    },
    "1919": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1920": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1921": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15E7"
    },
    "1924": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1925": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1926": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1928": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1929": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A7"
    },
    "1932": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1933": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1934": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3253"
    },
    "1937": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1938": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1939": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1940": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1941": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1942": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x79E"
    },
    "1945": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1946": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1948": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1949": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1950": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1951": {
      "op": "POP"
    },
    "1952": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x42A"
    },
    "1955": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7AD"
    },
    "1958": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1959": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1961": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32B0"
    },
    "1964": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1965": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1966": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x172B"
    },
    "1969": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1970": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1971": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1972": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1973": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1974": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7BE"
    },
    "1977": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1978": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1980": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1981": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1982": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1983": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "POP",
      "path": "19"
    },
    "1984": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x39B"
    },
    "1987": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17EF"
    },
    "1990": {
      "fn": "Celestial.mintingStartedAVAX",
      "jump": "i",
      "offset": [
        3578,
        3713
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1991": {
      "offset": [
        1894,
        1922
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1992": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "1993": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1994": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1995": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7D3"
    },
    "1998": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1999": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2001": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2002": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2003": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2004": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "POP",
      "path": "19"
    },
    "2005": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2008": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x16"
    },
    "2010": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2011": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2012": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1894,
        1922
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2013": {
      "offset": [
        1070,
        1121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2014": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2015": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2016": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2017": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7E9"
    },
    "2020": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2021": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2023": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2024": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2025": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2026": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "POP",
      "path": "19"
    },
    "2027": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2030": {
      "offset": [
        1115,
        1121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A98"
    },
    "2033": {
      "offset": [
        1070,
        1121
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2034": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        1070,
        1121
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2035": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2036": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "2039": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x801"
    },
    "2042": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2043": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2045": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x300E"
    },
    "2048": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8382,
        9406
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2049": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2050": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1809"
    },
    "2053": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8382,
        9406
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2054": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2055": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "2058": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x814"
    },
    "2061": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2062": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2064": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EF8"
    },
    "2067": {
      "fn": "Celestial.withdrawAVAX",
      "jump": "i",
      "offset": [
        4185,
        4479
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2068": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2069": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1929"
    },
    "2072": {
      "fn": "Celestial.withdrawAVAX",
      "jump": "i",
      "offset": [
        4185,
        4479
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2073": {
      "offset": [
        642,
        701
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2074": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2075": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2076": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2077": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x825"
    },
    "2080": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2081": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2083": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2084": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2085": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2086": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "POP",
      "path": "19"
    },
    "2087": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2090": {
      "offset": [
        689,
        701
      ],
      "op": "PUSH7",
      "path": "19",
      "value": "0x5543DF729C000"
    },
    "2098": {
      "offset": [
        642,
        701
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2099": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        642,
        701
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2100": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2101": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2102": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2103": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2104": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x840"
    },
    "2107": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2108": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2110": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2111": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2112": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2113": {
      "op": "POP"
    },
    "2114": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x42A"
    },
    "2117": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x84F"
    },
    "2120": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2121": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2123": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32E9"
    },
    "2126": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2127": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2128": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A03"
    },
    "2131": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2132": {
      "offset": [
        1400,
        1436
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2133": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2134": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2135": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2136": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x860"
    },
    "2139": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2140": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2142": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2143": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2144": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2145": {
      "op": "POP"
    },
    "2146": {
      "offset": [
        1400,
        1436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "2148": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2149": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3F2"
    },
    "2152": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "op": "SUB"
    },
    "2161": {
      "offset": [
        1400,
        1436
      ],
      "op": "AND",
      "path": "19"
    },
    "2162": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2163": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        1400,
        1436
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2164": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2165": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2166": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2167": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2168": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x880"
    },
    "2171": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2172": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2174": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2175": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2176": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C5"
    },
    "2181": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x88F"
    },
    "2184": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2185": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2187": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EF8"
    },
    "2190": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6165,
        6553
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2191": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2192": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A35"
    },
    "2195": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6165,
        6553
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2196": {
      "offset": [
        1566,
        1617
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2197": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2198": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2199": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2200": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8A0"
    },
    "2203": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2204": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2206": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2207": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2208": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2209": {
      "op": "POP"
    },
    "2210": {
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2213": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8AF"
    },
    "2216": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2217": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2219": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3170"
    },
    "2222": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        1566,
        1617
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2223": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2224": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "2226": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2228": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2229": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2231": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2232": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2233": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2234": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2236": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2237": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2238": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2239": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2240": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1566,
        1617
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2241": {
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2242": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2243": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2244": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2245": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8CD"
    },
    "2248": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2249": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2251": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2252": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2253": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2254": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "POP",
      "path": "19"
    },
    "2255": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C5"
    },
    "2258": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1ADC"
    },
    "2261": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2262": {
      "offset": [
        1127,
        1165
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2263": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2264": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2265": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2266": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8E2"
    },
    "2269": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2270": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2272": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2273": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2274": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2275": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "POP",
      "path": "19"
    },
    "2276": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2279": {
      "offset": [
        1164,
        1165
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2281": {
      "offset": [
        1127,
        1165
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2282": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1127,
        1165
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2283": {
      "offset": [
        1442,
        1462
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2284": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2285": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2286": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2287": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8F7"
    },
    "2290": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2291": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2293": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2294": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2295": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "offset": [
        1442,
        1462
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "2299": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2300": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3F2"
    },
    "2303": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2310": {
      "op": "SHL"
    },
    "2311": {
      "op": "SUB"
    },
    "2312": {
      "offset": [
        1442,
        1462
      ],
      "op": "AND",
      "path": "19"
    },
    "2313": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2314": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1442,
        1462
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2315": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2316": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2317": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2318": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2319": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x917"
    },
    "2322": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2323": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2325": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2326": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2327": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2328": {
      "op": "POP"
    },
    "2329": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42A"
    },
    "2332": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x926"
    },
    "2335": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2336": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2338": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3170"
    },
    "2341": {
      "fn": "Celestial.setStake",
      "jump": "i",
      "offset": [
        2451,
        2534
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2342": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2343": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B6A"
    },
    "2346": {
      "fn": "Celestial.setStake",
      "jump": "i",
      "offset": [
        2451,
        2534
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2347": {
      "offset": [
        1928,
        1956
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2348": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2349": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2350": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2351": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x937"
    },
    "2354": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2355": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2357": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2358": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2359": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2360": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "POP",
      "path": "19"
    },
    "2361": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2364": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "2366": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2367": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2368": {
      "fn": "Celestial.setStake",
      "offset": [
        1928,
        1956
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2369": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2370": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2371": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2372": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2373": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x94D"
    },
    "2376": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2377": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2379": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2380": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2381": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x785"
    },
    "2386": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x95C"
    },
    "2389": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2390": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2392": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F26"
    },
    "2395": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        11450,
        12330
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2396": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2397": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BB6"
    },
    "2400": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        11450,
        12330
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2401": {
      "offset": [
        1295,
        1345
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2402": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2403": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2404": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2405": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x96D"
    },
    "2408": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2409": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2411": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2412": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2413": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2414": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "POP",
      "path": "19"
    },
    "2415": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2418": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "2420": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2421": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2422": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        1295,
        1345
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2423": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2424": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2425": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2426": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2427": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x983"
    },
    "2430": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2431": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2433": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2434": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2435": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2436": {
      "op": "POP"
    },
    "2437": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x39B"
    },
    "2440": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x992"
    },
    "2443": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2444": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33AD"
    },
    "2449": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2450": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "op": "SUB"
    },
    "2459": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 3
    },
    "2460": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "7"
    },
    "2462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2464": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2465": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2466": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2467": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2469": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2471": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2472": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2473": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2474": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2476": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2477": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2478": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2479": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2480": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2481": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2482": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "7"
    },
    "2483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2484": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2485": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2486": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2487": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2488": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2489": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2490": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2491": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "7"
    },
    "2494": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2495": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2496": {
      "offset": [
        1690,
        1729
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2497": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2498": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9CC"
    },
    "2503": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2504": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2507": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2508": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2509": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "POP",
      "path": "19"
    },
    "2510": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2513": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "2515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        1690,
        1729
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2518": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2521": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2522": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "2525": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2526": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2528": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2530": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2531": {
      "op": "POP"
    },
    "2532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42A"
    },
    "2535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F1"
    },
    "2538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3170"
    },
    "2544": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D07"
    },
    "2549": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2550": {
      "offset": [
        1215,
        1256
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA02"
    },
    "2557": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2563": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "POP",
      "path": "19"
    },
    "2564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2567": {
      "offset": [
        1255,
        1256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "2569": {
      "offset": [
        1215,
        1256
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1215,
        1256
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2571": {
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "2573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA17"
    },
    "2578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2581": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2582": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "POP",
      "path": "19"
    },
    "2585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "2588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "2590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2593": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2594": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1012,
        1016
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2602": {
      "op": "SHL"
    },
    "2603": {
      "op": "SUB"
    },
    "2604": {
      "op": "NOT"
    },
    "2605": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1085
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 4
    },
    "2606": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1085
      ],
      "op": "AND",
      "path": "10"
    },
    "2607": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2614": {
      "op": "SHL"
    },
    "2615": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1085
      ],
      "op": "EQ",
      "path": "10"
    },
    "2616": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2617": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1125
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA46"
    },
    "2620": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1125
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2621": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1035,
        1125
      ],
      "op": "POP",
      "path": "10"
    },
    "2622": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1089,
        1125
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA46"
    },
    "2625": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1113,
        1124
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2626": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1089,
        1112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DA2"
    },
    "2629": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1089,
        1125
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2630": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1089,
        1125
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2631": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1028,
        1125
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2632": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        910,
        1132
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2633": {
      "op": "POP"
    },
    "2634": {
      "op": "POP"
    },
    "2635": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        910,
        1132
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2636": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2637": {
      "fn": "ERC721.name",
      "offset": [
        2468,
        2481
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2639": {
      "fn": "ERC721.name",
      "offset": [
        2500,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x0"
    },
    "2641": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2642": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2643": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA5B"
    },
    "2646": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2647": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33DB"
    },
    "2650": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2651": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2652": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2653": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2655": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2656": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2658": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2659": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2660": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "7"
    },
    "2661": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "7"
    },
    "2662": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2664": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2665": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2667": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2668": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2669": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2670": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2671": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2673": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2674": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2675": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2676": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2677": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2678": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2679": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2680": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2681": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2683": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2684": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2685": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2686": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2687": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA87"
    },
    "2690": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2691": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33DB"
    },
    "2694": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2695": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2696": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2697": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2698": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAD4"
    },
    "2701": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2702": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2703": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2705": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "LT",
      "path": "7"
    },
    "2706": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAA9"
    },
    "2709": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2710": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "2713": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2714": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2715": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2716": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "7"
    },
    "2717": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "7"
    },
    "2718": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2719": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2720": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2721": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2723": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2724": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2725": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAD4"
    },
    "2728": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2729": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2730": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2731": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2732": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2733": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2734": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2736": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2737": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2739": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2741": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2742": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2743": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2744": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2745": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2746": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2747": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2748": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2749": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2751": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2752": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2753": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2755": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2756": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2757": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2758": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "GT",
      "path": "7"
    },
    "2759": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAB7"
    },
    "2762": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2763": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2764": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2765": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SUB",
      "path": "7"
    },
    "2766": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2768": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "AND",
      "path": "7"
    },
    "2769": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2770": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "7"
    },
    "2771": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2772": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2773": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2774": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2775": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2776": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2777": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2778": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2779": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "7"
    },
    "2780": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2781": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2782": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2783": {
      "fn": "ERC721.getApproved",
      "offset": [
        4001,
        4008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2785": {
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4044
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 6,
      "value": "0xAE9"
    },
    "2788": {
      "fn": "ERC721.getApproved",
      "offset": [
        4036,
        4043
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2789": {
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4035
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DF2"
    },
    "2792": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4028,
        4044
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2793": {
      "branch": 202,
      "fn": "ERC721.getApproved",
      "offset": [
        4028,
        4044
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2794": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB4F"
    },
    "2797": {
      "branch": 202,
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2798": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2800": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2812": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2814": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2815": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "ADD",
      "path": "7"
    },
    "2816": {
      "op": "MSTORE"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2821": {
      "op": "DUP3"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2859": {
      "op": "DUP3"
    },
    "2860": {
      "op": "ADD"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2880": {
      "op": "DUP3"
    },
    "2881": {
      "op": "ADD"
    },
    "2882": {
      "op": "MSTORE"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2885": {
      "op": "ADD"
    },
    "2886": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2887": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2889": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2890": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2891": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2892": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SUB",
      "path": "7"
    },
    "2893": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2894": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "2895": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x0"
    },
    "2899": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4126
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2906": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2907": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2909": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2918": {
      "op": "SHL"
    },
    "2919": {
      "op": "SUB"
    },
    "2920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "AND",
      "path": "7"
    },
    "2921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2922": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2923": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2924": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3556
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2926": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB76"
    },
    "2929": {
      "fn": "ERC721.approve",
      "offset": [
        3574,
        3581
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2930": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3573
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1254"
    },
    "2933": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2934": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2935": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2936": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "POP",
      "path": "7"
    },
    "2937": {
      "fn": "ERC721.approve",
      "offset": [
        3606,
        3611
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 8
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "op": "SUB"
    },
    "2946": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "7"
    },
    "2947": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3602
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2954": {
      "op": "SHL"
    },
    "2955": {
      "op": "SUB"
    },
    "2956": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "7"
    },
    "2957": {
      "branch": 203,
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "SUB",
      "path": "7"
    },
    "2958": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBE3"
    },
    "2961": {
      "branch": 203,
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2962": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2964": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2971": {
      "op": "SHL"
    },
    "2972": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2973": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2976": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2978": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2979": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "ADD",
      "path": "7"
    },
    "2980": {
      "op": "MSTORE"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2985": {
      "op": "DUP3"
    },
    "2986": {
      "op": "ADD"
    },
    "2987": {
      "op": "MSTORE"
    },
    "2988": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "MSTORE"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3033": {
      "op": "DUP3"
    },
    "3034": {
      "op": "ADD"
    },
    "3035": {
      "op": "MSTORE"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3038": {
      "op": "ADD"
    },
    "3039": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "3042": {
      "op": "JUMP"
    },
    "3043": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3044": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 9
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3051": {
      "op": "SHL"
    },
    "3052": {
      "op": "SUB"
    },
    "3053": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 10
    },
    "3054": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "AND",
      "path": "7"
    },
    "3055": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "EQ",
      "path": "7"
    },
    "3056": {
      "branch": 204,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3057": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBFF"
    },
    "3060": {
      "branch": 204,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBFF"
    },
    "3065": {
      "fn": "ERC721.approve",
      "offset": [
        3723,
        3728
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3066": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3067": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x992"
    },
    "3070": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3071": {
      "branch": 205,
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3072": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC71"
    },
    "3075": {
      "branch": 205,
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3076": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3078": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3085": {
      "op": "SHL"
    },
    "3086": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3087": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3090": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3092": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3093": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "ADD",
      "path": "7"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3137": {
      "op": "DUP3"
    },
    "3138": {
      "op": "ADD"
    },
    "3139": {
      "op": "MSTORE"
    },
    "3140": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3175": {
      "op": "DUP3"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "MSTORE"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3180": {
      "op": "ADD"
    },
    "3181": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "3184": {
      "op": "JUMP"
    },
    "3185": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3186": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 11,
      "value": "0xC7B"
    },
    "3189": {
      "fn": "ERC721.approve",
      "offset": [
        3845,
        3847
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3190": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3856
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3191": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3844
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E0F"
    },
    "3194": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3195": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3196": {
      "fn": "ERC721.approve",
      "offset": [
        3533,
        3864
      ],
      "op": "POP",
      "path": "7"
    },
    "3197": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "7"
    },
    "3198": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "7"
    },
    "3199": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3200": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3201": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3770,
        3774
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3203": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3806
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 12,
      "value": "0x17"
    },
    "3205": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3806
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3206": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3810,
        3811
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3208": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3811
      ],
      "op": "EQ",
      "path": "19"
    },
    "3209": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3811
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3210": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3847
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3211": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3847
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3212": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3847
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC97"
    },
    "3215": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3847
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3216": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3847
      ],
      "op": "POP",
      "path": "19"
    },
    "3217": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3834,
        3847
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x17"
    },
    "3219": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3834,
        3847
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3220": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3815,
        3830
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "3221": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3815,
        3847
      ],
      "op": "LT",
      "path": "19"
    },
    "3222": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3815,
        3847
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3223": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3793,
        3847
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3224": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3786,
        3847
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3225": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3786,
        3847
      ],
      "op": "POP",
      "path": "19"
    },
    "3226": {
      "fn": "Celestial.mintingStartedSOUL",
      "offset": [
        3719,
        3854
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3227": {
      "fn": "Celestial.mintingStartedSOUL",
      "jump": "o",
      "offset": [
        3719,
        3854
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3228": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3229": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3231": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3236": {
      "op": "SHL"
    },
    "3237": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3238": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "3239": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3241": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "3242": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3243": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC6"
    },
    "3246": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3247": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3249": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3258": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3259": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3261": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "3262": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB46"
    },
    "3265": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3266": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3415"
    },
    "3269": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3270": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3271": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9710
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 13
    },
    "3272": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9714,
        9715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3274": {
      "branch": 158,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9715
      ],
      "op": "EQ",
      "path": "19"
    },
    "3275": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9727
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3276": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9727
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCD5"
    },
    "3279": {
      "branch": 158,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9727
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3280": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9727
      ],
      "op": "POP",
      "path": "19"
    },
    "3281": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9719,
        9722
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3282": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9726,
        9727
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "3284": {
      "branch": 159,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9719,
        9727
      ],
      "op": "EQ",
      "path": "19"
    },
    "3285": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9727
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3286": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9740
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3287": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9740
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCE0"
    },
    "3290": {
      "branch": 159,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9740
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3291": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9740
      ],
      "op": "POP",
      "path": "19"
    },
    "3292": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9731,
        9734
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3293": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9738,
        9740
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "3295": {
      "branch": 160,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9731,
        9740
      ],
      "op": "EQ",
      "path": "19"
    },
    "3296": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9707,
        9740
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3297": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCFC"
    },
    "3300": {
      "branch": 160,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3301": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3303": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3304": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3310": {
      "op": "SHL"
    },
    "3311": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3312": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3313": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3315": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "ADD",
      "path": "19"
    },
    "3316": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "3319": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3320": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x343F"
    },
    "3323": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        9686,
        9795
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3324": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9686,
        9795
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3325": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9833,
        9841
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 14
    },
    "3326": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9833,
        9848
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3327": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9826,
        9829
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3328": {
      "branch": 161,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9826,
        9848
      ],
      "op": "EQ",
      "path": "19"
    },
    "3329": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9826,
        9880
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3330": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9826,
        9880
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3331": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9826,
        9880
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD0C"
    },
    "3334": {
      "branch": 161,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9826,
        9880
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3335": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9826,
        9880
      ],
      "op": "POP",
      "path": "19"
    },
    "3336": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9859,
        9873
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3337": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9859,
        9880
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3338": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9852,
        9855
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3339": {
      "branch": 162,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9852,
        9880
      ],
      "op": "EQ",
      "path": "19"
    },
    "3340": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9826,
        9880
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3341": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD28"
    },
    "3344": {
      "branch": 162,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3345": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3347": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3354": {
      "op": "SHL"
    },
    "3355": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3356": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3357": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3359": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "ADD",
      "path": "19"
    },
    "3360": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "3363": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3364": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3476"
    },
    "3367": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        9805,
        9958
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3368": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9805,
        9958
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3369": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10063,
        10088
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 15,
      "value": "0x14"
    },
    "3371": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10063,
        10088
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3372": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10042,
        10088
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD37"
    },
    "3375": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10042,
        10088
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3376": {
      "offset": [
        1058,
        1064
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "3379": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10042,
        10088
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34E0"
    },
    "3382": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10042,
        10088
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3383": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10042,
        10088
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3384": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10017,
        10020
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3385": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9990,
        10014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "3387": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9990,
        10014
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3388": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9990,
        10020
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD45"
    },
    "3391": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9990,
        10020
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3392": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9990,
        10020
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3393": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9990,
        10020
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "3396": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        9990,
        10020
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3397": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9990,
        10020
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3398": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9989,
        10089
      ],
      "op": "GT",
      "path": "19"
    },
    "3399": {
      "branch": 163,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9989,
        10089
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3400": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD63"
    },
    "3403": {
      "branch": 163,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3404": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3406": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3413": {
      "op": "SHL"
    },
    "3414": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3415": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3416": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3418": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "ADD",
      "path": "19"
    },
    "3419": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "3422": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3423": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x350F"
    },
    "3426": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        9968,
        10149
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3427": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9968,
        10149
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3428": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10199,
        10226
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3430": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10251,
        10254
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3431": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10229,
        10248
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3433": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10229,
        10248
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3434": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10229,
        10254
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD73"
    },
    "3437": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10229,
        10254
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3438": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10229,
        10254
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3439": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10229,
        10254
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3551"
    },
    "3442": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10229,
        10254
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3443": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10229,
        10254
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3444": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10289
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 16,
      "value": "0xC"
    },
    "3446": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10289
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3447": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10199,
        10254
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3448": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10199,
        10254
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3449": {
      "op": "POP"
    },
    "3450": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10199,
        10254
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3451": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10199,
        10254
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3458": {
      "op": "SHL"
    },
    "3459": {
      "op": "SUB"
    },
    "3460": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10289
      ],
      "op": "AND",
      "path": "19"
    },
    "3461": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10299
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "3466": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3467": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3469": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3476": {
      "op": "SHL"
    },
    "3477": {
      "op": "SUB"
    },
    "3478": {
      "op": "NOT"
    },
    "3479": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3481": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3482": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3483": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "SHL",
      "path": "19"
    },
    "3484": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "AND",
      "path": "19"
    },
    "3485": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3486": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3493": {
      "op": "SHL"
    },
    "3494": {
      "op": "SUB"
    },
    "3495": {
      "op": "SWAP1"
    },
    "3496": {
      "op": "SWAP2"
    },
    "3497": {
      "op": "AND"
    },
    "3498": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3500": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3501": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "ADD",
      "path": "19"
    },
    "3502": {
      "op": "MSTORE"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3505": {
      "op": "ADD"
    },
    "3506": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3508": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3510": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3511": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3512": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3513": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "SUB",
      "path": "19"
    },
    "3514": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3515": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3516": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "GAS",
      "path": "19"
    },
    "3517": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3518": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3519": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3520": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3521": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDCE"
    },
    "3524": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3525": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3526": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3528": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3529": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3530": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3531": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3533": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3534": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3535": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "POP",
      "path": "19"
    },
    "3536": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "POP",
      "path": "19"
    },
    "3537": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "POP",
      "path": "19"
    },
    "3538": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "POP",
      "path": "19"
    },
    "3539": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3541": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3542": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3543": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3545": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "NOT",
      "path": "19"
    },
    "3546": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "3548": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3549": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "ADD",
      "path": "19"
    },
    "3550": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "AND",
      "path": "19"
    },
    "3551": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3552": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "ADD",
      "path": "19"
    },
    "3553": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3554": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3556": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3557": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "POP",
      "path": "19"
    },
    "3558": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3559": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "ADD",
      "path": "19"
    },
    "3560": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3561": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDF2"
    },
    "3564": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3565": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3566": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3570"
    },
    "3569": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10285,
        10313
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3570": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10313
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3571": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10336
      ],
      "op": "LT",
      "path": "19"
    },
    "3572": {
      "branch": 164,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10285,
        10336
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3573": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE32"
    },
    "3576": {
      "branch": 164,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3577": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3579": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3580": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3586": {
      "op": "SHL"
    },
    "3587": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3588": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3591": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3593": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3594": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "ADD",
      "path": "19"
    },
    "3595": {
      "op": "MSTORE"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3600": {
      "op": "DUP3"
    },
    "3601": {
      "op": "ADD"
    },
    "3602": {
      "op": "MSTORE"
    },
    "3603": {
      "op": "PUSH15",
      "value": "0x1B9BDD08195B9BDD59DA0814D3D553"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3624": {
      "op": "DUP3"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "MSTORE"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3629": {
      "op": "ADD"
    },
    "3630": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "3633": {
      "op": "JUMP"
    },
    "3634": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10264,
        10377
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3635": {
      "offset": [
        932,
        936
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1388"
    },
    "3638": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10429
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3640": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10429
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3641": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10462
      ],
      "op": "GT",
      "path": "19"
    },
    "3642": {
      "branch": 165,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10462
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3643": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10540
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3644": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10540
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3645": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10540
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE54"
    },
    "3648": {
      "branch": 165,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10540
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3649": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10540
      ],
      "op": "POP",
      "path": "19"
    },
    "3650": {
      "offset": [
        932,
        936
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1388"
    },
    "3653": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10505,
        10508
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3654": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10478,
        10502
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3656": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10478,
        10502
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3657": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10478,
        10508
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE52"
    },
    "3660": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10478,
        10508
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3661": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10478,
        10508
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3662": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10478,
        10508
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "3665": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10478,
        10508
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3666": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10478,
        10508
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3667": {
      "branch": 166,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10478,
        10540
      ],
      "op": "GT",
      "path": "19"
    },
    "3668": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10405,
        10540
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3669": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10621
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3670": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10621
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE6B"
    },
    "3673": {
      "branch": 166,
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10621
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3674": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10587,
        10606
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 17,
      "value": "0xB"
    },
    "3676": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10587,
        10606
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3677": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10587,
        10610
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE67"
    },
    "3680": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10587,
        10610
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3681": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10609,
        10610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3683": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10587,
        10610
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3551"
    },
    "3686": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10587,
        10610
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3687": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10587,
        10610
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3688": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10565,
        10584
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3690": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10565,
        10610
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3691": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10388,
        10621
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3692": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10659,
        10662
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 18
    },
    "3693": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10655
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x13"
    },
    "3695": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10655
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3697": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3698": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3699": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3700": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE7D"
    },
    "3703": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3704": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3705": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "3708": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10631,
        10662
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3709": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3710": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3711": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3712": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10631,
        10662
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3713": {
      "op": "POP"
    },
    "3714": {
      "op": "POP"
    },
    "3715": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10698
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 19,
      "value": "0xC"
    },
    "3717": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10698
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3724": {
      "op": "SHL"
    },
    "3725": {
      "op": "SUB"
    },
    "3726": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10698
      ],
      "op": "AND",
      "path": "19"
    },
    "3727": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10707
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x79CC6790"
    },
    "3732": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3733": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3735": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3742": {
      "op": "SHL"
    },
    "3743": {
      "op": "SUB"
    },
    "3744": {
      "op": "NOT"
    },
    "3745": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3747": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3748": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3749": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "SHL",
      "path": "19"
    },
    "3750": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "AND",
      "path": "19"
    },
    "3751": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3752": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3759": {
      "op": "SHL"
    },
    "3760": {
      "op": "SUB"
    },
    "3761": {
      "op": "SWAP1"
    },
    "3762": {
      "op": "SWAP2"
    },
    "3763": {
      "op": "AND"
    },
    "3764": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3766": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3767": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "ADD",
      "path": "19"
    },
    "3768": {
      "op": "MSTORE"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3771": {
      "op": "DUP2"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "DUP5"
    },
    "3774": {
      "op": "SWAP1"
    },
    "3775": {
      "op": "MSTORE"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3778": {
      "op": "ADD"
    },
    "3779": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3781": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3783": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3784": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3785": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3786": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "SUB",
      "path": "19"
    },
    "3787": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3788": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3790": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3791": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3792": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3793": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3794": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3795": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3796": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEDC"
    },
    "3799": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3800": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3802": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3803": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3804": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3805": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "POP",
      "path": "19"
    },
    "3806": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "GAS",
      "path": "19"
    },
    "3807": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "CALL",
      "path": "19"
    },
    "3808": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3809": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3810": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3811": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEF0"
    },
    "3814": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3815": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3816": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3818": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3819": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3820": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3821": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3823": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3824": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3825": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "POP",
      "path": "19"
    },
    "3826": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "POP",
      "path": "19"
    },
    "3827": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "POP",
      "path": "19"
    },
    "3828": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10694,
        10742
      ],
      "op": "POP",
      "path": "19"
    },
    "3829": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10779,
        10841
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 20,
      "value": "0xF06"
    },
    "3832": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10797,
        10800
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3833": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10802,
        10810
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3834": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10812,
        10826
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3835": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10828,
        10840
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF01"
    },
    "3838": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3839": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3840": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3841": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10828,
        10840
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3842": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10779,
        10796
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E7D"
    },
    "3845": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10779,
        10841
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3846": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10779,
        10841
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3847": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9610,
        10848
      ],
      "op": "POP",
      "path": "19"
    },
    "3848": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "POP",
      "path": "19"
    },
    "3849": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "POP",
      "path": "19"
    },
    "3850": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        9453,
        10848
      ],
      "op": "POP",
      "path": "19"
    },
    "3851": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "o",
      "offset": [
        9453,
        10848
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3852": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2771,
        2996
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3853": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3855": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3862": {
      "op": "SHL"
    },
    "3863": {
      "op": "SUB"
    },
    "3864": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3865": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3866": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3867": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF36"
    },
    "3870": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3871": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3873": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3880": {
      "op": "SHL"
    },
    "3881": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3882": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3883": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3885": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3886": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "3889": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3890": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "3893": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3894": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3895": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2881,
        2896
      ],
      "op": "TIMESTAMP",
      "path": "19",
      "statement": 21
    },
    "3896": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2867,
        2877
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3897": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2867,
        2896
      ],
      "op": "LT",
      "path": "19"
    },
    "3898": {
      "branch": 167,
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2867,
        2896
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3899": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF86"
    },
    "3902": {
      "branch": 167,
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3903": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3905": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3912": {
      "op": "SHL"
    },
    "3913": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3914": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3917": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3919": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3920": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "ADD",
      "path": "19"
    },
    "3921": {
      "op": "MSTORE"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3926": {
      "op": "DUP3"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "MSTORE"
    },
    "3929": {
      "op": "PUSH32",
      "value": "0x737461727454696D652063616E6E6F7420626520696E20746865207061737400"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3964": {
      "op": "DUP3"
    },
    "3965": {
      "op": "ADD"
    },
    "3966": {
      "op": "MSTORE"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3969": {
      "op": "ADD"
    },
    "3970": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "3973": {
      "op": "JUMP"
    },
    "3974": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2846,
        2953
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3975": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2963,
        2976
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 22,
      "value": "0x17"
    },
    "3977": {
      "fn": "Celestial.setStartTimeSOUL",
      "offset": [
        2963,
        2989
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3978": {
      "fn": "Celestial.setStartTimeSOUL",
      "jump": "o",
      "offset": [
        2771,
        2996
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3979": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3980": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 23,
      "value": "0xF95"
    },
    "3983": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3984": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5011,
        5018
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3985": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        4996
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EF8"
    },
    "3988": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3989": {
      "branch": 206,
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3990": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFB1"
    },
    "3993": {
      "branch": 206,
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3994": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3996": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4003": {
      "op": "SHL"
    },
    "4004": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4005": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4006": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4008": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "ADD",
      "path": "7"
    },
    "4009": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "4012": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4013": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35BE"
    },
    "4016": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4017": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4018": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5112
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 24,
      "value": "0xC7B"
    },
    "4021": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5094,
        5098
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4022": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5100,
        5102
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4023": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5104,
        5111
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4024": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FE2"
    },
    "4027": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5084,
        5112
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4028": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4029": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1308,
        1315
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4031": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1343,
        1366
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 25,
      "value": "0xFC7"
    },
    "4034": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1360,
        1365
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4035": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1343,
        1359
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12CB"
    },
    "4038": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1343,
        1366
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4039": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1343,
        1366
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4040": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1335,
        1340
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4041": {
      "branch": 218,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1335,
        1366
      ],
      "op": "LT",
      "path": "10"
    },
    "4042": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1029"
    },
    "4045": {
      "branch": 218,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4046": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4048": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4055": {
      "op": "SHL"
    },
    "4056": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4057": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4060": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4062": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4063": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "ADD",
      "path": "10"
    },
    "4064": {
      "op": "MSTORE"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4069": {
      "op": "DUP3"
    },
    "4070": {
      "op": "ADD"
    },
    "4071": {
      "op": "MSTORE"
    },
    "4072": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4107": {
      "op": "DUP3"
    },
    "4108": {
      "op": "ADD"
    },
    "4109": {
      "op": "MSTORE"
    },
    "4110": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4124": {
      "op": "SHL"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "MSTORE"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4132": {
      "op": "ADD"
    },
    "4133": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB46"
    },
    "4136": {
      "op": "JUMP"
    },
    "4137": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1327,
        1414
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4138": {
      "op": "POP"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4145": {
      "op": "SHL"
    },
    "4146": {
      "op": "SUB"
    },
    "4147": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 26
    },
    "4148": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4149": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4150": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "AND",
      "path": "10"
    },
    "4151": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4153": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4154": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4155": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4156": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1443
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4158": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4160": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4161": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4162": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4163": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4165": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4166": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4167": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1450
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4168": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4169": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4170": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4171": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4172": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4173": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4174": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4175": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4176": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1431,
        1457
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4177": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1211,
        1464
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4178": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2540,
        2765
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4179": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4181": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4188": {
      "op": "SHL"
    },
    "4189": {
      "op": "SUB"
    },
    "4190": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4191": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4192": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4193": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107C"
    },
    "4196": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4197": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4199": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4206": {
      "op": "SHL"
    },
    "4207": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4208": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4209": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4211": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4212": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "4215": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4216": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "4219": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4220": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4221": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2650,
        2665
      ],
      "op": "TIMESTAMP",
      "path": "19",
      "statement": 27
    },
    "4222": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2636,
        2646
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4223": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2636,
        2665
      ],
      "op": "LT",
      "path": "19"
    },
    "4224": {
      "branch": 168,
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2636,
        2665
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4225": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10CC"
    },
    "4228": {
      "branch": 168,
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4229": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4231": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4238": {
      "op": "SHL"
    },
    "4239": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4240": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4243": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4245": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4246": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "ADD",
      "path": "19"
    },
    "4247": {
      "op": "MSTORE"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4252": {
      "op": "DUP3"
    },
    "4253": {
      "op": "ADD"
    },
    "4254": {
      "op": "MSTORE"
    },
    "4255": {
      "op": "PUSH32",
      "value": "0x737461727454696D652063616E6E6F7420626520696E20746865207061737400"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4290": {
      "op": "DUP3"
    },
    "4291": {
      "op": "ADD"
    },
    "4292": {
      "op": "MSTORE"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4295": {
      "op": "ADD"
    },
    "4296": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "4299": {
      "op": "JUMP"
    },
    "4300": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2615,
        2722
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4301": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2732,
        2745
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 28,
      "value": "0x16"
    },
    "4303": {
      "fn": "Celestial.setStartTimeAVAX",
      "offset": [
        2732,
        2758
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4304": {
      "fn": "Celestial.setStartTimeAVAX",
      "jump": "o",
      "offset": [
        2540,
        2765
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4305": {
      "fn": "Celestial.getType",
      "offset": [
        3241,
        3410
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4306": {
      "fn": "Celestial.getType",
      "offset": [
        3297,
        3304
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4308": {
      "fn": "Celestial.getType",
      "offset": [
        3324,
        3341
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 29,
      "value": "0x10DC"
    },
    "4311": {
      "fn": "Celestial.getType",
      "offset": [
        3332,
        3340
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4312": {
      "fn": "Celestial.getType",
      "offset": [
        3324,
        3331
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF2"
    },
    "4315": {
      "fn": "Celestial.getType",
      "jump": "i",
      "offset": [
        3324,
        3341
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4316": {
      "branch": 169,
      "fn": "Celestial.getType",
      "offset": [
        3324,
        3341
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4317": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x111F"
    },
    "4320": {
      "branch": 169,
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4321": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4323": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4330": {
      "op": "SHL"
    },
    "4331": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4332": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4335": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4337": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4338": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "ADD",
      "path": "19"
    },
    "4339": {
      "op": "MSTORE"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4344": {
      "op": "DUP3"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "MSTORE"
    },
    "4347": {
      "op": "PUSH20",
      "value": "0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "4370": {
      "op": "SHL"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4373": {
      "op": "DUP3"
    },
    "4374": {
      "op": "ADD"
    },
    "4375": {
      "op": "MSTORE"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4378": {
      "op": "ADD"
    },
    "4379": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "4382": {
      "op": "JUMP"
    },
    "4383": {
      "fn": "Celestial.getType",
      "offset": [
        3316,
        3366
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4384": {
      "op": "POP"
    },
    "4385": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 30,
      "value": "0x0"
    },
    "4387": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4388": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4389": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4390": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3393
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "4392": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4394": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4395": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4397": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4398": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4399": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4400": {
      "fn": "Celestial.getType",
      "offset": [
        3383,
        3403
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4401": {
      "fn": "Celestial.getType",
      "jump": "o",
      "offset": [
        3241,
        3410
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4402": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 31,
      "value": "0xC7B"
    },
    "4406": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5335,
        5339
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4407": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5341,
        5343
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4408": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5345,
        5352
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4409": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4411": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4412": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4413": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4415": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "ADD",
      "path": "7"
    },
    "4416": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4418": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4419": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4420": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4422": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4423": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4424": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "POP",
      "path": "7"
    },
    "4425": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5334
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A03"
    },
    "4428": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5318,
        5357
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4429": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        3948,
        4121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4430": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4432": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4439": {
      "op": "SHL"
    },
    "4440": {
      "op": "SUB"
    },
    "4441": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4442": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4443": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4444": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1177"
    },
    "4447": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4448": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4450": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4457": {
      "op": "SHL"
    },
    "4458": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4459": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4460": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4462": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4463": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "4466": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4467": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "4470": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4471": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4472": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4078,
        4114
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 32,
      "value": "0xC7B"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4481": {
      "op": "SHL"
    },
    "4482": {
      "op": "SUB"
    },
    "4483": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4078,
        4097
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4484": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4078,
        4097
      ],
      "op": "AND",
      "path": "19"
    },
    "4485": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4098,
        4104
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4486": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4106,
        4113
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4487": {
      "fn": "Celestial.forwardERC20s",
      "offset": [
        4078,
        4097
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x218D"
    },
    "4490": {
      "fn": "Celestial.forwardERC20s",
      "jump": "i",
      "offset": [
        4078,
        4114
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4491": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4492": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1793,
        1800
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4494": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1828,
        1858
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 33,
      "value": "0x1196"
    },
    "4497": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "4499": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1639
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4500": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1622,
        1639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4501": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1535,
        1646
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4502": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1828,
        1858
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4503": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1820,
        1825
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4504": {
      "branch": 219,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1820,
        1858
      ],
      "op": "LT",
      "path": "10"
    },
    "4505": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F9"
    },
    "4508": {
      "branch": 219,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4509": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4511": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4518": {
      "op": "SHL"
    },
    "4519": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4520": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4523": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4525": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4526": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "ADD",
      "path": "10"
    },
    "4527": {
      "op": "MSTORE"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4532": {
      "op": "DUP3"
    },
    "4533": {
      "op": "ADD"
    },
    "4534": {
      "op": "MSTORE"
    },
    "4535": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4570": {
      "op": "DUP3"
    },
    "4571": {
      "op": "ADD"
    },
    "4572": {
      "op": "MSTORE"
    },
    "4573": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4588": {
      "op": "SHL"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4591": {
      "op": "DUP3"
    },
    "4592": {
      "op": "ADD"
    },
    "4593": {
      "op": "MSTORE"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4596": {
      "op": "ADD"
    },
    "4597": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB46"
    },
    "4600": {
      "op": "JUMP"
    },
    "4601": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1812,
        1907
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4602": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1934
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 34,
      "value": "0x8"
    },
    "4604": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1935,
        1940
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4605": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4606": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4607": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4608": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "LT",
      "path": "10"
    },
    "4609": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x120C"
    },
    "4612": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4613": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x120C"
    },
    "4616": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x360F"
    },
    "4619": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4620": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4621": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4622": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4624": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4625": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4627": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4629": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4630": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "10"
    },
    "4631": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4632": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1917,
        1941
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4633": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1917,
        1941
      ],
      "op": "POP",
      "path": "10"
    },
    "4634": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4635": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4636": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1718,
        1948
      ],
      "op": "POP",
      "path": "10"
    },
    "4637": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1718,
        1948
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4638": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3132,
        3235
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4639": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4641": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4648": {
      "op": "SHL"
    },
    "4649": {
      "op": "SUB"
    },
    "4650": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4651": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4652": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4653": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1248"
    },
    "4656": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4657": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4659": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4666": {
      "op": "SHL"
    },
    "4667": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4668": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4669": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4671": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4672": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "4675": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4676": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "4679": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4680": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4681": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3208,
        3228
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 35,
      "value": "0xC7B"
    },
    "4684": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3208,
        3216
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "4686": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3219,
        3228
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4687": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3219,
        3228
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4688": {
      "fn": "Celestial.setBaseURI",
      "offset": [
        3208,
        3228
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2DC1"
    },
    "4691": {
      "fn": "Celestial.setBaseURI",
      "jump": "i",
      "offset": [
        3208,
        3228
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4692": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4693": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2189,
        2196
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4695": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4696": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4697": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4698": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2231
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4700": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4702": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4703": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4705": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4706": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4707": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4714": {
      "op": "SHL"
    },
    "4715": {
      "op": "SUB"
    },
    "4716": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "AND",
      "path": "7"
    },
    "4717": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4718": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 36,
      "value": "0xA46"
    },
    "4721": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4722": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4724": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4725": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4731": {
      "op": "SHL"
    },
    "4732": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4733": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4736": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4738": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4739": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "ADD",
      "path": "7"
    },
    "4740": {
      "op": "MSTORE"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4745": {
      "op": "DUP3"
    },
    "4746": {
      "op": "ADD"
    },
    "4747": {
      "op": "MSTORE"
    },
    "4748": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4783": {
      "op": "DUP3"
    },
    "4784": {
      "op": "ADD"
    },
    "4785": {
      "op": "MSTORE"
    },
    "4786": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4798": {
      "op": "SHL"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4801": {
      "op": "DUP3"
    },
    "4802": {
      "op": "ADD"
    },
    "4803": {
      "op": "MSTORE"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4806": {
      "op": "ADD"
    },
    "4807": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "4810": {
      "op": "JUMP"
    },
    "4811": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4812": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1927,
        1934
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4820": {
      "op": "SHL"
    },
    "4821": {
      "op": "SUB"
    },
    "4822": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 37
    },
    "4823": {
      "branch": 207,
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "AND",
      "path": "7"
    },
    "4824": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1336"
    },
    "4827": {
      "branch": 207,
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4828": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4830": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4837": {
      "op": "SHL"
    },
    "4838": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4839": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4842": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4844": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4845": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "ADD",
      "path": "7"
    },
    "4846": {
      "op": "MSTORE"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4851": {
      "op": "DUP3"
    },
    "4852": {
      "op": "ADD"
    },
    "4853": {
      "op": "MSTORE"
    },
    "4854": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4889": {
      "op": "DUP3"
    },
    "4890": {
      "op": "ADD"
    },
    "4891": {
      "op": "MSTORE"
    },
    "4892": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4905": {
      "op": "SHL"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4908": {
      "op": "DUP3"
    },
    "4909": {
      "op": "ADD"
    },
    "4910": {
      "op": "MSTORE"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4913": {
      "op": "ADD"
    },
    "4914": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "4917": {
      "op": "JUMP"
    },
    "4918": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4926": {
      "op": "SHL"
    },
    "4927": {
      "op": "SUB"
    },
    "4928": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "AND",
      "path": "7",
      "statement": 38
    },
    "4929": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4931": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4932": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4933": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4934": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2046
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "4936": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4938": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4939": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4941": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4942": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4943": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4944": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4945": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4946": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4947": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4949": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4956": {
      "op": "SHL"
    },
    "4957": {
      "op": "SUB"
    },
    "4958": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4959": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4960": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4961": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x137C"
    },
    "4964": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4965": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4967": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4968": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4974": {
      "op": "SHL"
    },
    "4975": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4976": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4977": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4979": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4980": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "4983": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4984": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "4987": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4988": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4989": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 39,
      "value": "0x1386"
    },
    "4992": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4994": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21DF"
    },
    "4997": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4998": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4999": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5000": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5001": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "5003": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5008": {
      "op": "SHL"
    },
    "5009": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5010": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "5011": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5013": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "5014": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5015": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13B2"
    },
    "5018": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5019": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5021": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5022": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5028": {
      "op": "SHL"
    },
    "5029": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5030": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5031": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5033": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "5034": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB46"
    },
    "5037": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5038": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3415"
    },
    "5041": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5042": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5043": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6866,
        6876
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 40,
      "value": "0x10"
    },
    "5045": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6866,
        6876
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5046": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6880,
        6881
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5048": {
      "branch": 170,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6866,
        6881
      ],
      "op": "SUB",
      "path": "19"
    },
    "5049": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13F3"
    },
    "5052": {
      "branch": 170,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5053": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5055": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5062": {
      "op": "SHL"
    },
    "5063": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5064": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5067": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5069": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5070": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "ADD",
      "path": "19"
    },
    "5071": {
      "op": "MSTORE"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5076": {
      "op": "DUP3"
    },
    "5077": {
      "op": "ADD"
    },
    "5078": {
      "op": "MSTORE"
    },
    "5079": {
      "op": "PUSH12",
      "value": "0x1B5A5CDCDA5B99C81C9BDBDD"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "5094": {
      "op": "SHL"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5097": {
      "op": "DUP3"
    },
    "5098": {
      "op": "ADD"
    },
    "5099": {
      "op": "MSTORE"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5102": {
      "op": "ADD"
    },
    "5103": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "5106": {
      "op": "JUMP"
    },
    "5107": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6858,
        6898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5108": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5110": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5111": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5124": {
      "op": "NOT"
    },
    "5125": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5128": {
      "op": "SHL"
    },
    "5129": {
      "op": "AND"
    },
    "5130": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5132": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5133": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "ADD",
      "path": "19"
    },
    "5134": {
      "op": "MSTORE"
    },
    "5135": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7102,
        7114
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5137": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7102,
        7114
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "5140": {
      "op": "ADD"
    },
    "5141": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5143": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5144": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5146": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5147": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5148": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "SUB",
      "path": "19"
    },
    "5149": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "SUB",
      "path": "19"
    },
    "5150": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5151": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5152": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5153": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5155": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7127,
        7157
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5156": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7117,
        7158
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5157": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7117,
        7158
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5158": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7117,
        7158
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5159": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7117,
        7158
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5161": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7117,
        7158
      ],
      "op": "ADD",
      "path": "19"
    },
    "5162": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7117,
        7158
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5163": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7102,
        7158
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5164": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7102,
        7158
      ],
      "op": "POP",
      "path": "19"
    },
    "5165": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 41,
      "value": "0x146D"
    },
    "5168": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7208,
        7220
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5169": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7208,
        7220
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5170": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5171": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5172": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5174": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "MUL",
      "path": "19"
    },
    "5175": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5177": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "ADD",
      "path": "19"
    },
    "5178": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5180": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5181": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5182": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5183": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "ADD",
      "path": "19"
    },
    "5184": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5186": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5187": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5188": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5189": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5190": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5191": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5192": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5193": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5194": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5195": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5197": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "ADD",
      "path": "19"
    },
    "5198": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5199": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5200": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5202": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "MUL",
      "path": "19"
    },
    "5203": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5204": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5205": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5206": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "CALLDATACOPY",
      "path": "19"
    },
    "5207": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5209": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5210": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "ADD",
      "path": "19"
    },
    "5211": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5212": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5213": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5214": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5215": {
      "op": "POP"
    },
    "5216": {
      "op": "POP"
    },
    "5217": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7222,
        7232
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "5219": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7222,
        7232
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5220": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7222,
        7232
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5221": {
      "op": "POP"
    },
    "5222": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7234,
        7238
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5223": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7234,
        7238
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5224": {
      "op": "POP"
    },
    "5225": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7207
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2231"
    },
    "5228": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        7189,
        7239
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5229": {
      "branch": 171,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7189,
        7239
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5230": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14C7"
    },
    "5233": {
      "branch": 171,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5234": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5236": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5237": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5243": {
      "op": "SHL"
    },
    "5244": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5245": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5248": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5250": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5251": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "ADD",
      "path": "19"
    },
    "5252": {
      "op": "MSTORE"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5257": {
      "op": "DUP3"
    },
    "5258": {
      "op": "ADD"
    },
    "5259": {
      "op": "MSTORE"
    },
    "5260": {
      "op": "PUSH32",
      "value": "0x74686973206164647265737320646F6573206E6F742068617665207065726D69"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5295": {
      "op": "DUP3"
    },
    "5296": {
      "op": "ADD"
    },
    "5297": {
      "op": "MSTORE"
    },
    "5298": {
      "op": "PUSH5",
      "value": "0x39B9B4B7B7"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "5306": {
      "op": "SHL"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5309": {
      "op": "DUP3"
    },
    "5310": {
      "op": "ADD"
    },
    "5311": {
      "op": "MSTORE"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5314": {
      "op": "ADD"
    },
    "5315": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "5318": {
      "op": "JUMP"
    },
    "5319": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7168,
        7302
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5320": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7381
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 42
    },
    "5321": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7385,
        7386
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5323": {
      "branch": 172,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7386
      ],
      "op": "EQ",
      "path": "19"
    },
    "5324": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7398
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5325": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7398
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14D6"
    },
    "5328": {
      "branch": 172,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7398
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5329": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7398
      ],
      "op": "POP",
      "path": "19"
    },
    "5330": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7390,
        7393
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5331": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7397,
        7398
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "5333": {
      "branch": 173,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7390,
        7398
      ],
      "op": "EQ",
      "path": "19"
    },
    "5334": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7398
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5335": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7411
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5336": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7411
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14E1"
    },
    "5339": {
      "branch": 173,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7411
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5340": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7411
      ],
      "op": "POP",
      "path": "19"
    },
    "5341": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7402,
        7405
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5342": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7409,
        7411
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5344": {
      "branch": 174,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7402,
        7411
      ],
      "op": "EQ",
      "path": "19"
    },
    "5345": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7378,
        7411
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5346": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14FD"
    },
    "5349": {
      "branch": 174,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5350": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5352": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5359": {
      "op": "SHL"
    },
    "5360": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5361": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5362": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5364": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "ADD",
      "path": "19"
    },
    "5365": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "5368": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5369": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x343F"
    },
    "5372": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        7357,
        7466
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5373": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7357,
        7466
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5374": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7504,
        7512
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 43
    },
    "5375": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7504,
        7519
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5376": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7497,
        7500
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5377": {
      "branch": 175,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7497,
        7519
      ],
      "op": "EQ",
      "path": "19"
    },
    "5378": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7497,
        7551
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5379": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7497,
        7551
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5380": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7497,
        7551
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x150D"
    },
    "5383": {
      "branch": 175,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7497,
        7551
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5384": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7497,
        7551
      ],
      "op": "POP",
      "path": "19"
    },
    "5385": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7530,
        7544
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5386": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7530,
        7551
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5387": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7523,
        7526
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5388": {
      "branch": 176,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7523,
        7551
      ],
      "op": "EQ",
      "path": "19"
    },
    "5389": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7497,
        7551
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5390": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1529"
    },
    "5393": {
      "branch": 176,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5394": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5396": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5403": {
      "op": "SHL"
    },
    "5404": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5405": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5406": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5408": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "ADD",
      "path": "19"
    },
    "5409": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "5412": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5413": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3476"
    },
    "5416": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        7476,
        7629
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5417": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        7476,
        7629
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5418": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8066,
        8097
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 44,
      "value": "0x153A"
    },
    "5421": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8094,
        8097
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5422": {
      "offset": [
        780,
        792
      ],
      "op": "PUSH7",
      "path": "19",
      "value": "0x49E57D6354000"
    },
    "5430": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8066,
        8097
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3551"
    },
    "5433": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        8066,
        8097
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5434": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8066,
        8097
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5435": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8053,
        8062
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "5436": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8053,
        8097
      ],
      "op": "LT",
      "path": "19"
    },
    "5437": {
      "branch": 177,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8053,
        8097
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5438": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1559"
    },
    "5441": {
      "branch": 177,
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5442": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5444": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5451": {
      "op": "SHL"
    },
    "5452": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5453": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5454": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5456": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "ADD",
      "path": "19"
    },
    "5457": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "5460": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5461": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3625"
    },
    "5464": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        8032,
        8138
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5465": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8032,
        8138
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5466": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8178,
        8181
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 45
    },
    "5467": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8174
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x14"
    },
    "5469": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8174
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5471": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5472": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5473": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5474": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x156B"
    },
    "5477": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5478": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5479": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "5482": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        8149,
        8181
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5483": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5484": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5485": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5486": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8149,
        8181
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5487": {
      "op": "POP"
    },
    "5488": {
      "op": "POP"
    },
    "5489": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5490": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 46,
      "value": "0x0"
    },
    "5492": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5493": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5494": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5495": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8207
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x11"
    },
    "5497": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5499": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5500": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5502": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5503": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5504": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5505": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5506": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8225,
        8228
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5507": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8225,
        8228
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5508": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8221
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5509": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x158F"
    },
    "5512": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5513": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8225,
        8228
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5514": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8225,
        8228
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5515": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "5518": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "i",
      "offset": [
        8191,
        8228
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5519": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5520": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5521": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5522": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8191,
        8228
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5523": {
      "op": "POP"
    },
    "5524": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8266,
        8328
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 47,
      "value": "0x15A1"
    },
    "5527": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8266,
        8328
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5528": {
      "op": "POP"
    },
    "5529": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8284,
        8287
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5530": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8289,
        8297
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5531": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8299,
        8313
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5532": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5533": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10779,
        10796
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E7D"
    },
    "5536": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10779,
        10841
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5537": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        8266,
        8328
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5538": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6807,
        8335
      ],
      "op": "POP",
      "path": "19"
    },
    "5539": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "POP",
      "path": "19"
    },
    "5540": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "POP",
      "path": "19"
    },
    "5541": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "POP",
      "path": "19"
    },
    "5542": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "POP",
      "path": "19"
    },
    "5543": {
      "fn": "Celestial.mintCelestialWhitelist",
      "offset": [
        6600,
        8335
      ],
      "op": "POP",
      "path": "19"
    },
    "5544": {
      "fn": "Celestial.mintCelestialWhitelist",
      "jump": "o",
      "offset": [
        6600,
        8335
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5545": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4540,
        4644
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5546": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5548": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5555": {
      "op": "SHL"
    },
    "5556": {
      "op": "SUB"
    },
    "5557": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "5558": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5559": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "5560": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D3"
    },
    "5563": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5564": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5566": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5573": {
      "op": "SHL"
    },
    "5574": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5575": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5576": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5578": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "5579": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "5582": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5583": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "5586": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5587": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5588": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4613,
        4623
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 48,
      "value": "0x10"
    },
    "5590": {
      "fn": "Celestial.setMerkleRoot",
      "offset": [
        4613,
        4637
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5591": {
      "fn": "Celestial.setMerkleRoot",
      "jump": "o",
      "offset": [
        4540,
        4644
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5592": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5593": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2645
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "5595": {
      "fn": "ERC721.symbol",
      "offset": [
        2664,
        2671
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 49,
      "value": "0x1"
    },
    "5597": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5598": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5599": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA5B"
    },
    "5602": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5603": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33DB"
    },
    "5606": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2657,
        2671
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5607": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5608": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10944,
        10966
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "5610": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11010,
        11011
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 50,
      "value": "0x0"
    },
    "5612": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10990,
        11007
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15F4"
    },
    "5615": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11000,
        11006
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5616": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10990,
        10999
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12CB"
    },
    "5619": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        10990,
        11007
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5620": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10990,
        11007
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5621": {
      "branch": 178,
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10990,
        11011
      ],
      "op": "GT",
      "path": "19"
    },
    "5622": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1641"
    },
    "5625": {
      "branch": 178,
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5626": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5628": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5629": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5635": {
      "op": "SHL"
    },
    "5636": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5637": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5640": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5642": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5643": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "ADD",
      "path": "19"
    },
    "5644": {
      "op": "MSTORE"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5649": {
      "op": "DUP3"
    },
    "5650": {
      "op": "ADD"
    },
    "5651": {
      "op": "MSTORE"
    },
    "5652": {
      "op": "PUSH32",
      "value": "0x7468657265206973206E6F206E667420696E20796F75722062616C616E636500"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5687": {
      "op": "DUP3"
    },
    "5688": {
      "op": "ADD"
    },
    "5689": {
      "op": "MSTORE"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5692": {
      "op": "ADD"
    },
    "5693": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "5696": {
      "op": "JUMP"
    },
    "5697": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10982,
        11047
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5698": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11057,
        11072
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5700": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11075,
        11092
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x164C"
    },
    "5703": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11085,
        11091
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5704": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11075,
        11084
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12CB"
    },
    "5707": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11075,
        11092
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5708": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11075,
        11092
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5709": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11057,
        11092
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5710": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11057,
        11092
      ],
      "op": "POP",
      "path": "19"
    },
    "5711": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11102,
        11128
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5713": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11151,
        11158
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5714": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5723": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5724": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "GT",
      "path": "19"
    },
    "5725": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5726": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1669"
    },
    "5729": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5730": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1669"
    },
    "5733": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F52"
    },
    "5736": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11131,
        11159
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5737": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5738": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5740": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5741": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5742": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5743": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5744": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5745": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5746": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5748": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "MUL",
      "path": "19"
    },
    "5749": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5751": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "ADD",
      "path": "19"
    },
    "5752": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5753": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "ADD",
      "path": "19"
    },
    "5754": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5756": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5757": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5758": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5759": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16AE"
    },
    "5762": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5763": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5764": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5766": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "ADD",
      "path": "19"
    },
    "5767": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5770": {
      "op": "DUP1"
    },
    "5771": {
      "op": "MLOAD"
    },
    "5772": {
      "op": "DUP1"
    },
    "5773": {
      "op": "DUP3"
    },
    "5774": {
      "op": "ADD"
    },
    "5775": {
      "op": "SWAP1"
    },
    "5776": {
      "op": "SWAP2"
    },
    "5777": {
      "op": "MSTORE"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5780": {
      "op": "DUP1"
    },
    "5781": {
      "op": "DUP3"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5785": {
      "op": "DUP3"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "op": "MSTORE"
    },
    "5788": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5789": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5790": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5792": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "ADD",
      "path": "19"
    },
    "5793": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5794": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5796": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5797": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "SUB",
      "path": "19"
    },
    "5798": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5799": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5800": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1687"
    },
    "5803": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5804": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5805": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "POP",
      "path": "19"
    },
    "5806": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5807": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11131,
        11159
      ],
      "op": "POP",
      "path": "19"
    },
    "5808": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11102,
        11159
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5809": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11102,
        11159
      ],
      "op": "POP",
      "path": "19"
    },
    "5810": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11174,
        11183
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5812": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11169,
        11418
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5813": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11193,
        11200
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5814": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11189,
        11190
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5815": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11189,
        11200
      ],
      "op": "LT",
      "path": "19"
    },
    "5816": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11169,
        11418
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5817": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11169,
        11418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1723"
    },
    "5820": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11169,
        11418
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5821": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11221,
        11236
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5823": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11239,
        11269
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16C8"
    },
    "5826": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11259,
        11265
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5827": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11267,
        11268
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5828": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11239,
        11258
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFBC"
    },
    "5831": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11239,
        11269
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5832": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11239,
        11269
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5833": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11221,
        11269
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5834": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11221,
        11269
      ],
      "op": "POP",
      "path": "19"
    },
    "5835": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 51,
      "value": "0x40"
    },
    "5837": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5838": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5839": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5841": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "ADD",
      "path": "19"
    },
    "5842": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5844": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5845": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5846": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11333,
        11340
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5847": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5848": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5849": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5851": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "ADD",
      "path": "19"
    },
    "5852": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11383
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "5854": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5856": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11384,
        11391
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5857": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5858": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5859": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5861": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "ADD",
      "path": "19"
    },
    "5862": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5863": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5864": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5865": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5867": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "ADD",
      "path": "19"
    },
    "5868": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5870": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5871": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11373,
        11392
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5872": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5873": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5874": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11292,
        11407
      ],
      "op": "POP",
      "path": "19"
    },
    "5875": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11286
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5876": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11287,
        11288
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5877": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5878": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5879": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5880": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "LT",
      "path": "19"
    },
    "5881": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1704"
    },
    "5884": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5885": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1704"
    },
    "5888": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x360F"
    },
    "5891": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11283,
        11289
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5892": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5893": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5895": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "MUL",
      "path": "19"
    },
    "5896": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5898": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "ADD",
      "path": "19"
    },
    "5899": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11289
      ],
      "op": "ADD",
      "path": "19"
    },
    "5900": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11407
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5901": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11407
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5902": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11407
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5903": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11283,
        11407
      ],
      "op": "POP",
      "path": "19"
    },
    "5904": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11207,
        11418
      ],
      "op": "POP",
      "path": "19"
    },
    "5905": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 52
    },
    "5906": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5907": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x171B"
    },
    "5910": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5911": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x364E"
    },
    "5914": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "i",
      "offset": [
        11202,
        11205
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5915": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5916": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5917": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "POP",
      "path": "19"
    },
    "5918": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11202,
        11205
      ],
      "op": "POP",
      "path": "19"
    },
    "5919": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11169,
        11418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16B4"
    },
    "5922": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11169,
        11418
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5923": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11169,
        11418
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        11434,
        11437
      ],
      "op": "SWAP4",
      "path": "19",
      "statement": 53
    },
    "5926": {
      "fn": "Celestial.CelestialsOfOwner",
      "offset": [
        10854,
        11444
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5927": {
      "op": "POP"
    },
    "5928": {
      "op": "POP"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "fn": "Celestial.CelestialsOfOwner",
      "jump": "o",
      "offset": [
        10854,
        11444
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5931": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5932": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5939": {
      "op": "SHL"
    },
    "5940": {
      "op": "SUB"
    },
    "5941": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 54
    },
    "5942": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "AND",
      "path": "7"
    },
    "5943": {
      "branch": 208,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "SUB",
      "path": "7"
    },
    "5944": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1783"
    },
    "5947": {
      "branch": 208,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5948": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5950": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5957": {
      "op": "SHL"
    },
    "5958": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5959": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5962": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5964": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5965": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "ADD",
      "path": "7"
    },
    "5966": {
      "op": "MSTORE"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5971": {
      "op": "DUP3"
    },
    "5972": {
      "op": "ADD"
    },
    "5973": {
      "op": "MSTORE"
    },
    "5974": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6009": {
      "op": "DUP3"
    },
    "6010": {
      "op": "ADD"
    },
    "6011": {
      "op": "MSTORE"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6014": {
      "op": "ADD"
    },
    "6015": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "6018": {
      "op": "JUMP"
    },
    "6019": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6020": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6021": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 55,
      "value": "0x0"
    },
    "6023": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6024": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6025": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6026": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4394
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "6028": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6030": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6031": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6032": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6033": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6035": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6036": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6037": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6044": {
      "op": "SHL"
    },
    "6045": {
      "op": "SUB"
    },
    "6046": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP8",
      "path": "7"
    },
    "6047": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "AND",
      "path": "7"
    },
    "6048": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6049": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6050": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6051": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6052": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6053": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6054": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6055": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6056": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6057": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6058": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6059": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6062": {
      "op": "NOT"
    },
    "6063": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "AND",
      "path": "7"
    },
    "6064": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP7",
      "path": "7"
    },
    "6065": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6066": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6067": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6068": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6069": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "OR",
      "path": "7"
    },
    "6070": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6071": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6072": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6073": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 56
    },
    "6074": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6075": {
      "op": "SWAP1"
    },
    "6076": {
      "op": "DUP2"
    },
    "6077": {
      "op": "MSTORE"
    },
    "6078": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6079": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6080": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6081": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "6114": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6115": {
      "op": "ADD"
    },
    "6116": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6118": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6119": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6120": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6121": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SUB",
      "path": "7"
    },
    "6122": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6123": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "LOG3",
      "path": "7"
    },
    "6124": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "7"
    },
    "6125": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "7"
    },
    "6126": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6127": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3578,
        3713
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6128": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3629,
        3633
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6130": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3652,
        3665
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 57,
      "value": "0x16"
    },
    "6132": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3652,
        3665
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6133": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3669,
        3670
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6135": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3652,
        3670
      ],
      "op": "EQ",
      "path": "19"
    },
    "6136": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3652,
        3670
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6137": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3652,
        3706
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6138": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3652,
        3706
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6139": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3652,
        3706
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC97"
    },
    "6142": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3652,
        3706
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6143": {
      "op": "POP"
    },
    "6144": {
      "op": "POP"
    },
    "6145": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3693,
        3706
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x16"
    },
    "6147": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3693,
        3706
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6148": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3674,
        3689
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "6149": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3674,
        3706
      ],
      "op": "LT",
      "path": "19"
    },
    "6150": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3674,
        3706
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6151": {
      "fn": "Celestial.mintingStartedAVAX",
      "offset": [
        3674,
        3706
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6152": {
      "fn": "Celestial.mintingStartedAVAX",
      "jump": "o",
      "offset": [
        3578,
        3713
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6153": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8382,
        9406
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6154": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "6156": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6161": {
      "op": "SHL"
    },
    "6162": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6163": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "6164": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6166": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "6167": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6168": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1833"
    },
    "6171": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6172": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6174": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6181": {
      "op": "SHL"
    },
    "6182": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6183": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6184": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6186": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "6187": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB46"
    },
    "6190": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6191": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3415"
    },
    "6194": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6195": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6196": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8647
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 58
    },
    "6197": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8651,
        8652
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6199": {
      "branch": 179,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8652
      ],
      "op": "EQ",
      "path": "19"
    },
    "6200": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6201": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8664
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1842"
    },
    "6204": {
      "branch": 179,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8664
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6205": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8664
      ],
      "op": "POP",
      "path": "19"
    },
    "6206": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8656,
        8659
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6207": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8663,
        8664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "6209": {
      "branch": 180,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8656,
        8664
      ],
      "op": "EQ",
      "path": "19"
    },
    "6210": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8664
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6211": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8677
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6212": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8677
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x184D"
    },
    "6215": {
      "branch": 180,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8677
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6216": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8677
      ],
      "op": "POP",
      "path": "19"
    },
    "6217": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8668,
        8671
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6218": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8675,
        8677
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "6220": {
      "branch": 181,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8668,
        8677
      ],
      "op": "EQ",
      "path": "19"
    },
    "6221": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8644,
        8677
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6222": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1869"
    },
    "6225": {
      "branch": 181,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6226": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6228": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6235": {
      "op": "SHL"
    },
    "6236": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6237": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6238": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6240": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "ADD",
      "path": "19"
    },
    "6241": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "6244": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6245": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x343F"
    },
    "6248": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8623,
        8732
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6249": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8623,
        8732
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6250": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8770,
        8778
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 59
    },
    "6251": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8770,
        8785
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6252": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8763,
        8766
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6253": {
      "branch": 182,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8763,
        8785
      ],
      "op": "EQ",
      "path": "19"
    },
    "6254": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8763,
        8817
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6255": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8763,
        8817
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6256": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8763,
        8817
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1879"
    },
    "6259": {
      "branch": 182,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8763,
        8817
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6260": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8763,
        8817
      ],
      "op": "POP",
      "path": "19"
    },
    "6261": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8796,
        8810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6262": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8796,
        8817
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6263": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8789,
        8792
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6264": {
      "branch": 183,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8789,
        8817
      ],
      "op": "EQ",
      "path": "19"
    },
    "6265": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8763,
        8817
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6266": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1895"
    },
    "6269": {
      "branch": 183,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6270": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6272": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6273": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6279": {
      "op": "SHL"
    },
    "6280": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6281": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6282": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6284": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "ADD",
      "path": "19"
    },
    "6285": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "6288": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6289": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3476"
    },
    "6292": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8742,
        8895
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6293": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8742,
        8895
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6294": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9000,
        9025
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 60,
      "value": "0x14"
    },
    "6296": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9000,
        9025
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6297": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8979,
        9025
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18A4"
    },
    "6300": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8979,
        9025
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6301": {
      "offset": [
        1058,
        1064
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "6304": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8979,
        9025
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34E0"
    },
    "6307": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8979,
        9025
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6308": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8979,
        9025
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6309": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8954,
        8957
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6310": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8927,
        8951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "6312": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8927,
        8951
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6313": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8927,
        8957
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18B2"
    },
    "6316": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8927,
        8957
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6317": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8927,
        8957
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6318": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8927,
        8957
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "6321": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8927,
        8957
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6322": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8927,
        8957
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6323": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8926,
        9026
      ],
      "op": "GT",
      "path": "19"
    },
    "6324": {
      "branch": 184,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8926,
        9026
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6325": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18D0"
    },
    "6328": {
      "branch": 184,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6329": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6331": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6338": {
      "op": "SHL"
    },
    "6339": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6340": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6341": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6343": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "ADD",
      "path": "19"
    },
    "6344": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "6347": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6348": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x350F"
    },
    "6351": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        8905,
        9086
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6352": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        8905,
        9086
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6353": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9139,
        9162
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6355": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9165,
        9191
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18E3"
    },
    "6358": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9188,
        9191
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6359": {
      "offset": [
        689,
        701
      ],
      "op": "PUSH7",
      "path": "19",
      "value": "0x5543DF729C000"
    },
    "6367": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9165,
        9191
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3551"
    },
    "6370": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9165,
        9191
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6371": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9165,
        9191
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6372": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9139,
        9191
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6373": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9139,
        9191
      ],
      "op": "POP",
      "path": "19"
    },
    "6374": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9222,
        9237
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 61
    },
    "6375": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9209,
        9218
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6376": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9209,
        9237
      ],
      "op": "LT",
      "path": "19"
    },
    "6377": {
      "branch": 185,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9209,
        9237
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6378": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1905"
    },
    "6381": {
      "branch": 185,
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6382": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6384": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6391": {
      "op": "SHL"
    },
    "6392": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6393": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6394": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6396": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "ADD",
      "path": "19"
    },
    "6397": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "6400": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6401": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3625"
    },
    "6404": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9201,
        9257
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6405": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9201,
        9257
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6406": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9296,
        9299
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 62
    },
    "6407": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9292
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "6409": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9292
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6411": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6412": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6413": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6414": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1917"
    },
    "6417": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6418": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6419": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "6422": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "jump": "i",
      "offset": [
        9268,
        9299
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6423": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6424": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6425": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6426": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9268,
        9299
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6427": {
      "op": "POP"
    },
    "6428": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9337,
        9399
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 63,
      "value": "0xF06"
    },
    "6431": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9337,
        9399
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6432": {
      "op": "POP"
    },
    "6433": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9355,
        9358
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6434": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9360,
        9368
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6435": {
      "fn": "Celestial.mintCelestialWithAVAX",
      "offset": [
        9370,
        9384
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6436": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6437": {
      "fn": "Celestial.mintCelestialWithSoul",
      "offset": [
        10779,
        10796
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E7D"
    },
    "6440": {
      "fn": "Celestial.mintCelestialWithSoul",
      "jump": "i",
      "offset": [
        10779,
        10841
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6441": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4185,
        4479
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6442": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6444": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6451": {
      "op": "SHL"
    },
    "6452": {
      "op": "SUB"
    },
    "6453": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "6454": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6455": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "6456": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1953"
    },
    "6459": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6460": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6462": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6469": {
      "op": "SHL"
    },
    "6470": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6471": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6472": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6474": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "6475": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "6478": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6479": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "6482": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6483": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6484": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4294,
        4301
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 64
    },
    "6485": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4269,
        4290
      ],
      "op": "SELFBALANCE",
      "path": "19"
    },
    "6486": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4269,
        4301
      ],
      "op": "LT",
      "path": "19"
    },
    "6487": {
      "branch": 186,
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4269,
        4301
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6488": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1973"
    },
    "6491": {
      "branch": 186,
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6492": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6494": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6501": {
      "op": "SHL"
    },
    "6502": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6503": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6504": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6506": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "ADD",
      "path": "19"
    },
    "6507": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "6510": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6511": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3625"
    },
    "6514": {
      "fn": "Celestial.withdrawAVAX",
      "jump": "i",
      "offset": [
        4261,
        4321
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6515": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4261,
        4321
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6516": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6518": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6519": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6520": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6521": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4331,
        4349
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6523": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4331,
        4349
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6524": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6525": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6526": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4414,
        4421
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6527": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4414,
        4421
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6528": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4331,
        4349
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6529": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6530": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4331,
        4349
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6531": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6532": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4414,
        4421
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6533": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6534": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "GAS",
      "path": "19"
    },
    "6535": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "CALL",
      "path": "19"
    },
    "6536": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6537": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "POP",
      "path": "19"
    },
    "6538": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "POP",
      "path": "19"
    },
    "6539": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "POP",
      "path": "19"
    },
    "6540": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6541": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6542": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6544": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6545": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "EQ",
      "path": "19"
    },
    "6546": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19B7"
    },
    "6549": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6550": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6552": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6553": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6554": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "POP",
      "path": "19"
    },
    "6555": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6557": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "NOT",
      "path": "19"
    },
    "6558": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3F"
    },
    "6560": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6561": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "ADD",
      "path": "19"
    },
    "6562": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "AND",
      "path": "19"
    },
    "6563": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6564": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "ADD",
      "path": "19"
    },
    "6565": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6567": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6568": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6569": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6570": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6571": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6572": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6574": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6576": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6577": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "ADD",
      "path": "19"
    },
    "6578": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "6579": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19BC"
    },
    "6582": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6583": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6584": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6586": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6587": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "POP",
      "path": "19"
    },
    "6588": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6589": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4399,
        4426
      ],
      "op": "POP",
      "path": "19"
    },
    "6590": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4383,
        4426
      ],
      "op": "POP",
      "path": "19"
    },
    "6591": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4383,
        4426
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6592": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4383,
        4426
      ],
      "op": "POP",
      "path": "19"
    },
    "6593": {
      "branch": 187,
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4444,
        4448
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 65
    },
    "6594": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC7B"
    },
    "6597": {
      "branch": 187,
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6598": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6600": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6607": {
      "op": "SHL"
    },
    "6608": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6609": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6612": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6614": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6615": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "ADD",
      "path": "19"
    },
    "6616": {
      "op": "MSTORE"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6621": {
      "op": "DUP3"
    },
    "6622": {
      "op": "ADD"
    },
    "6623": {
      "op": "MSTORE"
    },
    "6624": {
      "op": "PUSH19",
      "value": "0x8CC2D2D8CAC840E8DE40E6CADCC84082AC82B"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x6B"
    },
    "6646": {
      "op": "SHL"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6649": {
      "op": "DUP3"
    },
    "6650": {
      "op": "ADD"
    },
    "6651": {
      "op": "MSTORE"
    },
    "6652": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6654": {
      "op": "ADD"
    },
    "6655": {
      "fn": "Celestial.withdrawAVAX",
      "offset": [
        4436,
        4472
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "6658": {
      "op": "JUMP"
    },
    "6659": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6660": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 66,
      "value": "0x1A0D"
    },
    "6663": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6664": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5632,
        5639
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6665": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5617
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EF8"
    },
    "6668": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6669": {
      "branch": 209,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6670": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A29"
    },
    "6673": {
      "branch": 209,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6674": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6676": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6683": {
      "op": "SHL"
    },
    "6684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6685": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6686": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6688": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "ADD",
      "path": "7"
    },
    "6689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "6692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6693": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35BE"
    },
    "6696": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6698": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5743
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 67,
      "value": "0xF06"
    },
    "6701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5718,
        5722
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6702": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5724,
        5726
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5728,
        5735
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5737,
        5742
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5717
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22E2"
    },
    "6708": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5704,
        5743
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6709": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6710": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6278,
        6291
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6712": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6328,
        6344
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 68,
      "value": "0x1A40"
    },
    "6715": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6336,
        6343
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6716": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6328,
        6335
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF2"
    },
    "6719": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6328,
        6344
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6720": {
      "branch": 188,
      "fn": "Celestial.tokenURI",
      "offset": [
        6328,
        6344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6721": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AA4"
    },
    "6724": {
      "branch": 188,
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6725": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6727": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6734": {
      "op": "SHL"
    },
    "6735": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6736": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6739": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6741": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6742": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "ADD",
      "path": "19"
    },
    "6743": {
      "op": "MSTORE"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6748": {
      "op": "DUP3"
    },
    "6749": {
      "op": "ADD"
    },
    "6750": {
      "op": "MSTORE"
    },
    "6751": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6786": {
      "op": "DUP3"
    },
    "6787": {
      "op": "ADD"
    },
    "6788": {
      "op": "MSTORE"
    },
    "6789": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "6807": {
      "op": "SHL"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6810": {
      "op": "DUP3"
    },
    "6811": {
      "op": "ADD"
    },
    "6812": {
      "op": "MSTORE"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6815": {
      "op": "ADD"
    },
    "6816": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "6819": {
      "op": "JUMP"
    },
    "6820": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6307,
        6417
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6821": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6487,
        6497
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 69,
      "value": "0x1AAC"
    },
    "6824": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6487,
        6495
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2315"
    },
    "6827": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6487,
        6497
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6828": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6487,
        6497
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6829": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6504,
        6522
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AB5"
    },
    "6832": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6504,
        6511
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6833": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6504,
        6520
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2324"
    },
    "6836": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6504,
        6522
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6837": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6504,
        6522
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6838": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6840": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6841": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6843": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "ADD",
      "path": "19"
    },
    "6844": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AC6"
    },
    "6847": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6848": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6849": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6850": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3667"
    },
    "6853": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        6470,
        6532
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6854": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6855": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6857": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6858": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6860": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6861": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6862": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "SUB",
      "path": "19"
    },
    "6863": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "SUB",
      "path": "19"
    },
    "6864": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6865": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6866": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6867": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6869": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6470,
        6532
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6870": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6427,
        6546
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6871": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6427,
        6546
      ],
      "op": "POP",
      "path": "19"
    },
    "6872": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6873": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6874": {
      "fn": "Celestial.tokenURI",
      "offset": [
        6165,
        6553
      ],
      "op": "POP",
      "path": "19"
    },
    "6875": {
      "fn": "Celestial.tokenURI",
      "jump": "o",
      "offset": [
        6165,
        6553
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6876": {
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6877": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "6879": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6880": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6881": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AE9"
    },
    "6884": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6885": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33DB"
    },
    "6888": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6889": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6890": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6891": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6893": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "6894": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6896": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6897": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6898": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DIV",
      "path": "19"
    },
    "6899": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "MUL",
      "path": "19"
    },
    "6900": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6902": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "6903": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6905": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6906": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6907": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6908": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "6909": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6911": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6912": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6913": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6914": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6915": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6916": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6917": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6918": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6919": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6921": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "6922": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6923": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6924": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6925": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B15"
    },
    "6928": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6929": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33DB"
    },
    "6932": {
      "fn": "Celestial.tokenURI",
      "jump": "i",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6933": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6934": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6935": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6936": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B62"
    },
    "6939": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6940": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6941": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6943": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "LT",
      "path": "19"
    },
    "6944": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B37"
    },
    "6947": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6948": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "6951": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6952": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6953": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6954": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DIV",
      "path": "19"
    },
    "6955": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "MUL",
      "path": "19"
    },
    "6956": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6957": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6958": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6959": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6961": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "6962": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6963": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B62"
    },
    "6966": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6967": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6968": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6969": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "6970": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6971": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6972": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6974": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6975": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6977": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6979": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6980": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6981": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6982": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6983": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6984": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6985": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6986": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6987": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6989": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "6990": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6991": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6993": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "6994": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6995": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6996": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "GT",
      "path": "19"
    },
    "6997": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B45"
    },
    "7000": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7001": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7002": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7003": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SUB",
      "path": "19"
    },
    "7004": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "7006": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "AND",
      "path": "19"
    },
    "7007": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7008": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "ADD",
      "path": "19"
    },
    "7009": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7010": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7011": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "POP",
      "path": "19"
    },
    "7012": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "POP",
      "path": "19"
    },
    "7013": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "POP",
      "path": "19"
    },
    "7014": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "POP",
      "path": "19"
    },
    "7015": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "POP",
      "path": "19"
    },
    "7016": {
      "fn": "Celestial.tokenURI",
      "offset": [
        1489,
        1511
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7017": {
      "fn": "Celestial.tokenURI",
      "jump": "o",
      "offset": [
        1489,
        1511
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7018": {
      "fn": "Celestial.setStake",
      "offset": [
        2451,
        2534
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7019": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7021": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7028": {
      "op": "SHL"
    },
    "7029": {
      "op": "SUB"
    },
    "7030": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "7031": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7032": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "7033": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B94"
    },
    "7036": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7037": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7039": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7040": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7044": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7046": {
      "op": "SHL"
    },
    "7047": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7048": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7049": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7051": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "7052": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "7055": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7056": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "7059": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7060": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7061": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2518
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 70,
      "value": "0xE"
    },
    "7063": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7064": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7071": {
      "op": "SHL"
    },
    "7072": {
      "op": "SUB"
    },
    "7073": {
      "op": "NOT"
    },
    "7074": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "AND",
      "path": "19"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7081": {
      "op": "SHL"
    },
    "7082": {
      "op": "SUB"
    },
    "7083": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7084": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7085": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7086": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "AND",
      "path": "19"
    },
    "7087": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7088": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7089": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7090": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "OR",
      "path": "19"
    },
    "7091": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7092": {
      "fn": "Celestial.setStake",
      "offset": [
        2513,
        2527
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7093": {
      "fn": "Celestial.setStake",
      "jump": "o",
      "offset": [
        2451,
        2534
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7094": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7095": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11559,
        11581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "7097": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11683,
        11684
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 71,
      "value": "0x0"
    },
    "7099": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11663,
        11680
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BC3"
    },
    "7102": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11673,
        11679
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7103": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11663,
        11672
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12CB"
    },
    "7106": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        11663,
        11680
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7107": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11663,
        11680
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7108": {
      "branch": 189,
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11663,
        11684
      ],
      "op": "GT",
      "path": "19"
    },
    "7109": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C10"
    },
    "7112": {
      "branch": 189,
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7113": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7115": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7122": {
      "op": "SHL"
    },
    "7123": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7124": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7127": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "7129": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7130": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "ADD",
      "path": "19"
    },
    "7131": {
      "op": "MSTORE"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7136": {
      "op": "DUP3"
    },
    "7137": {
      "op": "ADD"
    },
    "7138": {
      "op": "MSTORE"
    },
    "7139": {
      "op": "PUSH32",
      "value": "0x7468657265206973206E6F206E667420696E20796F75722062616C616E636500"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7174": {
      "op": "DUP3"
    },
    "7175": {
      "op": "ADD"
    },
    "7176": {
      "op": "MSTORE"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7179": {
      "op": "ADD"
    },
    "7180": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "7183": {
      "op": "JUMP"
    },
    "7184": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11655,
        11720
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7185": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7187": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7188": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7189": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11786,
        11787
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7191": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7192": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7193": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7194": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC0"
    },
    "7196": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7197": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "ADD",
      "path": "19"
    },
    "7198": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7199": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7200": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7201": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11730,
        11763
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7203": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11730,
        11763
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7204": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7205": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7207": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "ADD",
      "path": "19"
    },
    "7208": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7211": {
      "op": "DUP1"
    },
    "7212": {
      "op": "MLOAD"
    },
    "7213": {
      "op": "DUP1"
    },
    "7214": {
      "op": "DUP3"
    },
    "7215": {
      "op": "ADD"
    },
    "7216": {
      "op": "SWAP1"
    },
    "7217": {
      "op": "SWAP2"
    },
    "7218": {
      "op": "MSTORE"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7221": {
      "op": "DUP1"
    },
    "7222": {
      "op": "DUP3"
    },
    "7223": {
      "op": "MSTORE"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7226": {
      "op": "DUP3"
    },
    "7227": {
      "op": "ADD"
    },
    "7228": {
      "op": "MSTORE"
    },
    "7229": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7230": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7231": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7233": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "ADD",
      "path": "19"
    },
    "7234": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7235": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "7237": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7238": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "SUB",
      "path": "19"
    },
    "7239": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7240": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7241": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C28"
    },
    "7244": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7245": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7246": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11766,
        11788
      ],
      "op": "POP",
      "path": "19"
    },
    "7247": {
      "op": "POP"
    },
    "7248": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11730,
        11788
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7249": {
      "op": "POP"
    },
    "7250": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11798,
        11816
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7252": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11819,
        11828
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C5E"
    },
    "7255": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11819,
        11824
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7256": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11827,
        11828
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7258": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11819,
        11828
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3551"
    },
    "7261": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        11819,
        11828
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7262": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11819,
        11828
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7263": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11798,
        11828
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7264": {
      "op": "POP"
    },
    "7265": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11838,
        11854
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7267": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11857,
        11871
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C6D"
    },
    "7270": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11798,
        11828
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7271": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11870,
        11871
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "7273": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11857,
        11871
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "7276": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        11857,
        11871
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7277": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11857,
        11871
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7278": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11838,
        11871
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7279": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11838,
        11871
      ],
      "op": "POP",
      "path": "19"
    },
    "7280": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11897,
        11914
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C78"
    },
    "7283": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11907,
        11913
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7284": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11897,
        11906
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12CB"
    },
    "7287": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        11897,
        11914
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7288": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11897,
        11914
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7289": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11886,
        11894
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7290": {
      "branch": 190,
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11886,
        11914
      ],
      "op": "GT",
      "path": "19"
    },
    "7291": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11882,
        11969
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7292": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11882,
        11969
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C8B"
    },
    "7295": {
      "branch": 190,
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11882,
        11969
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7296": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11941,
        11958
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 72,
      "value": "0x1C88"
    },
    "7299": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11951,
        11957
      ],
      "op": "DUP7",
      "path": "19"
    },
    "7300": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11941,
        11950
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12CB"
    },
    "7303": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        11941,
        11958
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7304": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11941,
        11958
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7305": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11930,
        11958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7306": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11930,
        11958
      ],
      "op": "POP",
      "path": "19"
    },
    "7307": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11882,
        11969
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7308": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11995,
        12005
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7309": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11978,
        12297
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7310": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12011,
        12019
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7311": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12007,
        12008
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7312": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12007,
        12019
      ],
      "op": "LT",
      "path": "19"
    },
    "7313": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11978,
        12297
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7314": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11978,
        12297
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CFC"
    },
    "7317": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11978,
        12297
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7318": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12040,
        12055
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7320": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CA1"
    },
    "7323": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12078,
        12084
      ],
      "op": "DUP9",
      "path": "19"
    },
    "7324": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12086,
        12087
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7325": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12058,
        12077
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFBC"
    },
    "7328": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12058,
        12088
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7329": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12058,
        12088
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7330": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12040,
        12088
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7331": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12040,
        12088
      ],
      "op": "POP",
      "path": "19"
    },
    "7332": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 73,
      "value": "0x40"
    },
    "7334": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7335": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7336": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7338": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "ADD",
      "path": "19"
    },
    "7339": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7341": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7342": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7343": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12212,
        12219
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7344": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7345": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7346": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7348": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "ADD",
      "path": "19"
    },
    "7349": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "7351": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7353": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12263,
        12270
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7354": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7355": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7356": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7358": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "ADD",
      "path": "19"
    },
    "7359": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7360": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7361": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7362": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7364": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "ADD",
      "path": "19"
    },
    "7365": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7367": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "7368": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12252,
        12271
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7369": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7370": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7371": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12171,
        12286
      ],
      "op": "POP",
      "path": "19"
    },
    "7372": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12165
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7373": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12166,
        12167
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7374": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7375": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7376": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7377": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "LT",
      "path": "19"
    },
    "7378": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CDD"
    },
    "7381": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7382": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CDD"
    },
    "7385": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x360F"
    },
    "7388": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12155,
        12168
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7389": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7390": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7392": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "MUL",
      "path": "19"
    },
    "7393": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7395": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "ADD",
      "path": "19"
    },
    "7396": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12168
      ],
      "op": "ADD",
      "path": "19"
    },
    "7397": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12286
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7398": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12286
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7399": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12286
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7400": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12155,
        12286
      ],
      "op": "POP",
      "path": "19"
    },
    "7401": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12026,
        12297
      ],
      "op": "POP",
      "path": "19"
    },
    "7402": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 74
    },
    "7403": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7404": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1CF4"
    },
    "7407": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7408": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x364E"
    },
    "7411": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "i",
      "offset": [
        12021,
        12024
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7412": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7413": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7414": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "POP",
      "path": "19"
    },
    "7415": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12021,
        12024
      ],
      "op": "POP",
      "path": "19"
    },
    "7416": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11978,
        12297
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C8D"
    },
    "7419": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11978,
        12297
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7420": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11978,
        12297
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7421": {
      "op": "POP"
    },
    "7422": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12313,
        12323
      ],
      "op": "SWAP2",
      "path": "19",
      "statement": 75
    },
    "7423": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        12313,
        12323
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "7424": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "offset": [
        11450,
        12330
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "7425": {
      "op": "POP"
    },
    "7426": {
      "op": "POP"
    },
    "7427": {
      "op": "POP"
    },
    "7428": {
      "op": "POP"
    },
    "7429": {
      "op": "POP"
    },
    "7430": {
      "fn": "Celestial.bachedCelestialsOfOwner",
      "jump": "o",
      "offset": [
        11450,
        12330
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7432": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7434": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7441": {
      "op": "SHL"
    },
    "7442": {
      "op": "SUB"
    },
    "7443": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "7444": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7445": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "7446": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D31"
    },
    "7449": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7450": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7452": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7459": {
      "op": "SHL"
    },
    "7460": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7461": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7462": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7464": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "7465": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "7468": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7469": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3589"
    },
    "7472": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7473": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7480": {
      "op": "SHL"
    },
    "7481": {
      "op": "SUB"
    },
    "7482": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 76
    },
    "7483": {
      "branch": 226,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "7484": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "7487": {
      "branch": 226,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7488": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7490": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7497": {
      "op": "SHL"
    },
    "7498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7499": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "7506": {
      "op": "MSTORE"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7511": {
      "op": "DUP3"
    },
    "7512": {
      "op": "ADD"
    },
    "7513": {
      "op": "MSTORE"
    },
    "7514": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7549": {
      "op": "DUP3"
    },
    "7550": {
      "op": "ADD"
    },
    "7551": {
      "op": "MSTORE"
    },
    "7552": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7561": {
      "op": "SHL"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7564": {
      "op": "DUP3"
    },
    "7565": {
      "op": "ADD"
    },
    "7566": {
      "op": "MSTORE"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7569": {
      "op": "ADD"
    },
    "7570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "7573": {
      "op": "JUMP"
    },
    "7574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 77,
      "value": "0x1D9F"
    },
    "7578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21DF"
    },
    "7582": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "7585": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7586": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7587": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1598,
        1602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7595": {
      "op": "SHL"
    },
    "7596": {
      "op": "SUB"
    },
    "7597": {
      "op": "NOT"
    },
    "7598": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 78
    },
    "7599": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "AND",
      "path": "7"
    },
    "7600": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7607": {
      "op": "SHL"
    },
    "7608": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "EQ",
      "path": "7"
    },
    "7609": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7610": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DD3"
    },
    "7613": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7614": {
      "op": "POP"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7621": {
      "op": "SHL"
    },
    "7622": {
      "op": "SUB"
    },
    "7623": {
      "op": "NOT"
    },
    "7624": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7625": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "AND",
      "path": "7"
    },
    "7626": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "7631": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7633": {
      "op": "SHL"
    },
    "7634": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "EQ",
      "path": "7"
    },
    "7635": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7636": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7637": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA46"
    },
    "7640": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7641": {
      "op": "POP"
    },
    "7642": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7647": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7649": {
      "op": "SHL"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7656": {
      "op": "SHL"
    },
    "7657": {
      "op": "SUB"
    },
    "7658": {
      "op": "NOT"
    },
    "7659": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 79
    },
    "7660": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "17"
    },
    "7661": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "17"
    },
    "7662": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1753,
        1789
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA46"
    },
    "7665": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        763,
        918
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7666": {
      "fn": "ERC721._exists",
      "offset": [
        7222,
        7347
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7667": {
      "fn": "ERC721._exists",
      "offset": [
        7287,
        7291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7669": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 80
    },
    "7670": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7671": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7672": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "7674": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7676": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7677": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7679": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7680": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7681": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7688": {
      "op": "SHL"
    },
    "7689": {
      "op": "SUB"
    },
    "7690": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "7"
    },
    "7691": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7692": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7693": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7340
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7694": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7222,
        7347
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7695": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7696": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 81,
      "value": "0x0"
    },
    "7698": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7699": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7700": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7701": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11162
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7703": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7705": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7706": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7708": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7709": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7710": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7711": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7718": {
      "op": "SHL"
    },
    "7719": {
      "op": "SUB"
    },
    "7720": {
      "op": "NOT"
    },
    "7721": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "7"
    },
    "7722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7728": {
      "op": "SHL"
    },
    "7729": {
      "op": "SUB"
    },
    "7730": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7731": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "7"
    },
    "7732": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7733": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7734": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "OR",
      "path": "7"
    },
    "7735": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7736": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7737": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7738": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7739": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7740": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 82,
      "value": "0x1E44"
    },
    "7743": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7744": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11214
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1254"
    },
    "7747": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7748": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7755": {
      "op": "SHL"
    },
    "7756": {
      "op": "SUB"
    },
    "7757": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "AND",
      "path": "7"
    },
    "7758": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7791": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7793": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7794": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7796": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7797": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7798": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7799": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SUB",
      "path": "7"
    },
    "7800": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7801": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "LOG4",
      "path": "7"
    },
    "7802": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "7"
    },
    "7803": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "7"
    },
    "7804": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7805": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5684,
        6159
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7806": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5858,
        5867
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7808": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5853,
        5999
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7809": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5877,
        5880
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7810": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5873,
        5874
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7811": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5873,
        5880
      ],
      "op": "LT",
      "path": "19"
    },
    "7812": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5853,
        5999
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7813": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5853,
        5999
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EF1"
    },
    "7816": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5853,
        5999
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7817": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5921,
        5922
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 83,
      "value": "0x1"
    },
    "7819": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5917
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "7821": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5917
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7823": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7824": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7825": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7826": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E9B"
    },
    "7829": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7830": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7831": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "7834": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        5901,
        5922
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7835": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7836": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7837": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "POP",
      "path": "19"
    },
    "7838": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "POP",
      "path": "19"
    },
    "7839": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7840": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7841": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "7842": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5901,
        5922
      ],
      "op": "POP",
      "path": "19"
    },
    "7843": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5936,
        5988
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 84,
      "value": "0x1EDF"
    },
    "7846": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5953,
        5955
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7847": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5965
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7848": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5966,
        5967
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7849": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7850": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7851": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7852": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "LT",
      "path": "19"
    },
    "7853": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EB8"
    },
    "7856": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7857": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EB8"
    },
    "7860": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x360F"
    },
    "7863": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        5957,
        5968
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7864": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7865": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7867": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "MUL",
      "path": "19"
    },
    "7868": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7870": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "ADD",
      "path": "19"
    },
    "7871": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "ADD",
      "path": "19"
    },
    "7872": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5957,
        5968
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7873": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5984
      ],
      "op": "DUP6",
      "path": "19"
    },
    "7874": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5985,
        5986
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7875": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7876": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7877": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7878": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "LT",
      "path": "19"
    },
    "7879": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1ED2"
    },
    "7882": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "7883": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1ED2"
    },
    "7886": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x360F"
    },
    "7889": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        5970,
        5987
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7890": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7891": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7893": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "MUL",
      "path": "19"
    },
    "7894": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7896": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "ADD",
      "path": "19"
    },
    "7897": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "ADD",
      "path": "19"
    },
    "7898": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5970,
        5987
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7899": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5936,
        5952
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2425"
    },
    "7902": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        5936,
        5988
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7903": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5936,
        5988
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7904": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5882,
        5885
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 85
    },
    "7905": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5882,
        5885
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EE9"
    },
    "7908": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5882,
        5885
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7909": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5882,
        5885
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x364E"
    },
    "7912": {
      "fn": "Celestial._createCelestials",
      "jump": "i",
      "offset": [
        5882,
        5885
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7913": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5882,
        5885
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7914": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5882,
        5885
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7915": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5882,
        5885
      ],
      "op": "POP",
      "path": "19"
    },
    "7916": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5882,
        5885
      ],
      "op": "POP",
      "path": "19"
    },
    "7917": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5853,
        5999
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E80"
    },
    "7920": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5853,
        5999
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7921": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5853,
        5999
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7922": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5853,
        5999
      ],
      "op": "POP",
      "path": "19"
    },
    "7923": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5684,
        6159
      ],
      "op": "POP",
      "path": "19"
    },
    "7924": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5684,
        6159
      ],
      "op": "POP",
      "path": "19"
    },
    "7925": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5684,
        6159
      ],
      "op": "POP",
      "path": "19"
    },
    "7926": {
      "fn": "Celestial._createCelestials",
      "offset": [
        5684,
        6159
      ],
      "op": "POP",
      "path": "19"
    },
    "7927": {
      "fn": "Celestial._createCelestials",
      "jump": "o",
      "offset": [
        5684,
        6159
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7928": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7929": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7598,
        7602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7931": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7638
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 86,
      "value": "0x1F03"
    },
    "7934": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7630,
        7637
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7935": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7629
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DF2"
    },
    "7938": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7622,
        7638
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7939": {
      "branch": 210,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7622,
        7638
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7940": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F64"
    },
    "7943": {
      "branch": 210,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7944": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7946": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7947": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7953": {
      "op": "SHL"
    },
    "7954": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7955": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7958": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7960": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7961": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "ADD",
      "path": "7"
    },
    "7962": {
      "op": "MSTORE"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7967": {
      "op": "DUP3"
    },
    "7968": {
      "op": "ADD"
    },
    "7969": {
      "op": "MSTORE"
    },
    "7970": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8005": {
      "op": "DUP3"
    },
    "8006": {
      "op": "ADD"
    },
    "8007": {
      "op": "MSTORE"
    },
    "8008": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8023": {
      "op": "SHL"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8026": {
      "op": "DUP3"
    },
    "8027": {
      "op": "ADD"
    },
    "8028": {
      "op": "MSTORE"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8031": {
      "op": "ADD"
    },
    "8032": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "8035": {
      "op": "JUMP"
    },
    "8036": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8037": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8039": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F6F"
    },
    "8042": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7728,
        7735
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8043": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7727
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1254"
    },
    "8046": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8047": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8048": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8049": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "POP",
      "path": "7"
    },
    "8050": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7765,
        7770
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 87
    },
    "8051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8057": {
      "op": "SHL"
    },
    "8058": {
      "op": "SUB"
    },
    "8059": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "7"
    },
    "8060": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7761
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8067": {
      "op": "SHL"
    },
    "8068": {
      "op": "SUB"
    },
    "8069": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "7"
    },
    "8070": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "EQ",
      "path": "7"
    },
    "8071": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8072": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FAA"
    },
    "8075": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8076": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "POP",
      "path": "7"
    },
    "8077": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7798,
        7805
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8084": {
      "op": "SHL"
    },
    "8085": {
      "op": "SUB"
    },
    "8086": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "7"
    },
    "8087": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "8090": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7786,
        7793
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7785
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xADE"
    },
    "8094": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8095": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8102": {
      "op": "SHL"
    },
    "8103": {
      "op": "SUB"
    },
    "8104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "7"
    },
    "8105": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "EQ",
      "path": "7"
    },
    "8106": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8107": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8108": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FDA"
    },
    "8111": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8112": {
      "op": "POP"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8119": {
      "op": "SHL"
    },
    "8120": {
      "op": "SUB"
    },
    "8121": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8122": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8123": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "7"
    },
    "8124": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8126": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8127": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8128": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8129": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "8131": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8133": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8134": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8135": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8136": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8138": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8140": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8141": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP9",
      "path": "7"
    },
    "8143": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "7"
    },
    "8144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8145": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8146": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8147": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8148": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8149": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8150": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8151": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "8153": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "7"
    },
    "8154": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7809,
        7841
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8155": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7842
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8156": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8157": {
      "op": "POP"
    },
    "8158": {
      "op": "POP"
    },
    "8159": {
      "op": "POP"
    },
    "8160": {
      "op": "POP"
    },
    "8161": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8162": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8163": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10560
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 88
    },
    "8164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8170": {
      "op": "SHL"
    },
    "8171": {
      "op": "SUB"
    },
    "8172": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "7"
    },
    "8173": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FF5"
    },
    "8176": {
      "fn": "ERC721._transfer",
      "offset": [
        10544,
        10551
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8177": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10543
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1254"
    },
    "8180": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8181": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8188": {
      "op": "SHL"
    },
    "8189": {
      "op": "SUB"
    },
    "8190": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "7"
    },
    "8191": {
      "branch": 211,
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "EQ",
      "path": "7"
    },
    "8192": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x205D"
    },
    "8195": {
      "branch": 211,
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8196": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8198": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8205": {
      "op": "SHL"
    },
    "8206": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8207": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8210": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "8212": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8213": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "ADD",
      "path": "7"
    },
    "8214": {
      "op": "MSTORE"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8219": {
      "op": "DUP3"
    },
    "8220": {
      "op": "ADD"
    },
    "8221": {
      "op": "MSTORE"
    },
    "8222": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8257": {
      "op": "DUP3"
    },
    "8258": {
      "op": "ADD"
    },
    "8259": {
      "op": "MSTORE"
    },
    "8260": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "8272": {
      "op": "SHL"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8275": {
      "op": "DUP3"
    },
    "8276": {
      "op": "ADD"
    },
    "8277": {
      "op": "MSTORE"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8280": {
      "op": "ADD"
    },
    "8281": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "8284": {
      "op": "JUMP"
    },
    "8285": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8292": {
      "op": "SHL"
    },
    "8293": {
      "op": "SUB"
    },
    "8294": {
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 89
    },
    "8295": {
      "branch": 212,
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "AND",
      "path": "7"
    },
    "8296": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20BF"
    },
    "8299": {
      "branch": 212,
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8300": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8302": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8303": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8309": {
      "op": "SHL"
    },
    "8310": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8311": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8314": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "8316": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8317": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "ADD",
      "path": "7"
    },
    "8318": {
      "op": "MSTORE"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8321": {
      "op": "DUP1"
    },
    "8322": {
      "op": "DUP3"
    },
    "8323": {
      "op": "ADD"
    },
    "8324": {
      "op": "MSTORE"
    },
    "8325": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8360": {
      "op": "DUP3"
    },
    "8361": {
      "op": "ADD"
    },
    "8362": {
      "op": "MSTORE"
    },
    "8363": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8370": {
      "op": "SHL"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8373": {
      "op": "DUP3"
    },
    "8374": {
      "op": "ADD"
    },
    "8375": {
      "op": "MSTORE"
    },
    "8376": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8378": {
      "op": "ADD"
    },
    "8379": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "8382": {
      "op": "JUMP"
    },
    "8383": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8384": {
      "fn": "ERC721._transfer",
      "offset": [
        10692,
        10731
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 90,
      "value": "0x20CA"
    },
    "8387": {
      "fn": "ERC721._transfer",
      "offset": [
        10713,
        10717
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8388": {
      "fn": "ERC721._transfer",
      "offset": [
        10719,
        10721
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8389": {
      "fn": "ERC721._transfer",
      "offset": [
        10723,
        10730
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8390": {
      "fn": "ERC721._transfer",
      "offset": [
        10692,
        10712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26A6"
    },
    "8393": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10692,
        10731
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8394": {
      "fn": "ERC721._transfer",
      "offset": [
        10692,
        10731
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8395": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 91,
      "value": "0x20D5"
    },
    "8398": {
      "fn": "ERC721._transfer",
      "offset": [
        10810,
        10811
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8400": {
      "fn": "ERC721._transfer",
      "offset": [
        10814,
        10821
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8401": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10801
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E0F"
    },
    "8404": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8405": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8412": {
      "op": "SHL"
    },
    "8413": {
      "op": "SUB"
    },
    "8414": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 92
    },
    "8415": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "AND",
      "path": "7"
    },
    "8416": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8418": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8419": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8420": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8421": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10842
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "8423": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8425": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8426": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8428": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8429": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8430": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8431": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8432": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8434": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8435": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8436": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20FE"
    },
    "8439": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8440": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8441": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8442": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34E0"
    },
    "8445": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8446": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8447": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8448": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8449": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8450": {
      "op": "POP"
    },
    "8451": {
      "op": "POP"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8458": {
      "op": "SHL"
    },
    "8459": {
      "op": "SUB"
    },
    "8460": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 93
    },
    "8461": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "AND",
      "path": "7"
    },
    "8462": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8464": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8465": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8466": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8467": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10872
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "8469": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8471": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8472": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8474": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8475": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8476": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8477": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8478": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8480": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8481": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8482": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212C"
    },
    "8485": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8486": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8487": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8488": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34F7"
    },
    "8491": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8492": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8493": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8494": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8495": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8496": {
      "op": "POP"
    },
    "8497": {
      "op": "POP"
    },
    "8498": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 94,
      "value": "0x0"
    },
    "8500": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8501": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8502": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8503": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10898
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "8505": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8507": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8508": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8510": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8511": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8512": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8513": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8514": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8521": {
      "op": "SHL"
    },
    "8522": {
      "op": "SUB"
    },
    "8523": {
      "op": "NOT"
    },
    "8524": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "7"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8531": {
      "op": "SHL"
    },
    "8532": {
      "op": "SUB"
    },
    "8533": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP7",
      "path": "7"
    },
    "8534": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8535": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "7"
    },
    "8536": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8537": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8538": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "OR",
      "path": "7"
    },
    "8539": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8540": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8541": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8542": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 95
    },
    "8543": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8544": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8545": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8546": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8547": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "DUP8",
      "path": "7"
    },
    "8548": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "AND",
      "path": "7"
    },
    "8549": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8550": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8583": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8584": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "LOG4",
      "path": "7"
    },
    "8585": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "7"
    },
    "8586": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "7"
    },
    "8587": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "7"
    },
    "8588": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8589": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8590": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 96,
      "value": "0x40"
    },
    "8592": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8593": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8600": {
      "op": "SHL"
    },
    "8601": {
      "op": "SUB"
    },
    "8602": {
      "op": "DUP5"
    },
    "8603": {
      "op": "AND"
    },
    "8604": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8606": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8607": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "6"
    },
    "8608": {
      "op": "MSTORE"
    },
    "8609": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8611": {
      "op": "DUP1"
    },
    "8612": {
      "op": "DUP3"
    },
    "8613": {
      "op": "ADD"
    },
    "8614": {
      "op": "DUP5"
    },
    "8615": {
      "op": "SWAP1"
    },
    "8616": {
      "op": "MSTORE"
    },
    "8617": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8618": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8619": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8620": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8621": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "6"
    },
    "8622": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8623": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8624": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "6"
    },
    "8625": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8626": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8629": {
      "op": "SWAP1"
    },
    "8630": {
      "op": "SWAP2"
    },
    "8631": {
      "op": "ADD"
    },
    "8632": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8633": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8634": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8635": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8637": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8638": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "6"
    },
    "8639": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8640": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8647": {
      "op": "SHL"
    },
    "8648": {
      "op": "SUB"
    },
    "8649": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "6"
    },
    "8650": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8657": {
      "op": "SHL"
    },
    "8658": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "6"
    },
    "8659": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8660": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8661": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7B"
    },
    "8664": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8665": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8666": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8667": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x275E"
    },
    "8670": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8671": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8672": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8674": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8675": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8682": {
      "op": "SHL"
    },
    "8683": {
      "op": "SUB"
    },
    "8684": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 97
    },
    "8685": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8686": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "8687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8693": {
      "op": "SHL"
    },
    "8694": {
      "op": "SUB"
    },
    "8695": {
      "op": "NOT"
    },
    "8696": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8697": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "8698": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8699": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "8700": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8701": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8702": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8703": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 98,
      "value": "0x40"
    },
    "8705": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8706": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8707": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "8708": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8709": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8710": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8711": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8712": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8745": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8746": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8748": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8749": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8750": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "8751": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "8752": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8753": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8754": {
      "fn": "MerkleProof.verify",
      "offset": [
        898,
        902
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8756": {
      "fn": "MerkleProof.verify",
      "offset": [
        937,
        941
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8757": {
      "fn": "MerkleProof.verify",
      "offset": [
        898,
        902
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8758": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8759": {
      "fn": "MerkleProof.verify",
      "offset": [
        976,
        981
      ],
      "op": "DUP6",
      "path": "16"
    },
    "8760": {
      "fn": "MerkleProof.verify",
      "offset": [
        976,
        988
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8761": {
      "fn": "MerkleProof.verify",
      "offset": [
        972,
        973
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8762": {
      "fn": "MerkleProof.verify",
      "offset": [
        972,
        988
      ],
      "op": "LT",
      "path": "16"
    },
    "8763": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8764": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22D5"
    },
    "8767": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8768": {
      "fn": "MerkleProof.verify",
      "offset": [
        1009,
        1029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8770": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1037
      ],
      "op": "DUP7",
      "path": "16"
    },
    "8771": {
      "fn": "MerkleProof.verify",
      "offset": [
        1038,
        1039
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8772": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8773": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8774": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8775": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "LT",
      "path": "16"
    },
    "8776": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2253"
    },
    "8779": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8780": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2253"
    },
    "8783": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x360F"
    },
    "8786": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        1032,
        1040
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8787": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8788": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8790": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "MUL",
      "path": "16"
    },
    "8791": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8793": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "ADD",
      "path": "16"
    },
    "8794": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "ADD",
      "path": "16"
    },
    "8795": {
      "fn": "MerkleProof.verify",
      "offset": [
        1032,
        1040
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8796": {
      "fn": "MerkleProof.verify",
      "offset": [
        1009,
        1040
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8797": {
      "fn": "MerkleProof.verify",
      "offset": [
        1009,
        1040
      ],
      "op": "POP",
      "path": "16"
    },
    "8798": {
      "fn": "MerkleProof.verify",
      "offset": [
        1075,
        1087
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8799": {
      "fn": "MerkleProof.verify",
      "offset": [
        1059,
        1071
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8800": {
      "branch": 225,
      "fn": "MerkleProof.verify",
      "offset": [
        1059,
        1087
      ],
      "op": "GT",
      "path": "16"
    },
    "8801": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2295"
    },
    "8804": {
      "branch": 225,
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8805": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 99,
      "value": "0x40"
    },
    "8807": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8808": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8809": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8811": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8812": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "ADD",
      "path": "16"
    },
    "8813": {
      "op": "DUP6"
    },
    "8814": {
      "op": "SWAP1"
    },
    "8815": {
      "op": "MSTORE"
    },
    "8816": {
      "op": "SWAP1"
    },
    "8817": {
      "op": "DUP2"
    },
    "8818": {
      "op": "ADD"
    },
    "8819": {
      "op": "DUP3"
    },
    "8820": {
      "op": "SWAP1"
    },
    "8821": {
      "op": "MSTORE"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8824": {
      "op": "ADD"
    },
    "8825": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8827": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8828": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8830": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8831": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8832": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "SUB",
      "path": "16"
    },
    "8833": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "SUB",
      "path": "16"
    },
    "8834": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8835": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8836": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8837": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8839": {
      "fn": "MerkleProof.verify",
      "offset": [
        1210,
        1254
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8840": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8841": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8842": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8843": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8845": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "ADD",
      "path": "16"
    },
    "8846": {
      "fn": "MerkleProof.verify",
      "offset": [
        1200,
        1255
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "8847": {
      "fn": "MerkleProof.verify",
      "offset": [
        1185,
        1255
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8848": {
      "fn": "MerkleProof.verify",
      "offset": [
        1185,
        1255
      ],
      "op": "POP",
      "path": "16"
    },
    "8849": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22C2"
    },
    "8852": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8853": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8854": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 100,
      "value": "0x40"
    },
    "8856": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8857": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8858": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8860": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8861": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "ADD",
      "path": "16"
    },
    "8862": {
      "op": "DUP4"
    },
    "8863": {
      "op": "SWAP1"
    },
    "8864": {
      "op": "MSTORE"
    },
    "8865": {
      "op": "SWAP1"
    },
    "8866": {
      "op": "DUP2"
    },
    "8867": {
      "op": "ADD"
    },
    "8868": {
      "op": "DUP5"
    },
    "8869": {
      "op": "SWAP1"
    },
    "8870": {
      "op": "MSTORE"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8873": {
      "op": "ADD"
    },
    "8874": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8876": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8877": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8879": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8880": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8881": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "SUB",
      "path": "16"
    },
    "8882": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "SUB",
      "path": "16"
    },
    "8883": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8884": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8885": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8886": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8888": {
      "fn": "MerkleProof.verify",
      "offset": [
        1397,
        1441
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8889": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8890": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8891": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8892": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8894": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "ADD",
      "path": "16"
    },
    "8895": {
      "fn": "MerkleProof.verify",
      "offset": [
        1387,
        1442
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "8896": {
      "fn": "MerkleProof.verify",
      "offset": [
        1372,
        1442
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8897": {
      "fn": "MerkleProof.verify",
      "offset": [
        1372,
        1442
      ],
      "op": "POP",
      "path": "16"
    },
    "8898": {
      "fn": "MerkleProof.verify",
      "offset": [
        1055,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8899": {
      "op": "POP"
    },
    "8900": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 101
    },
    "8901": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CD"
    },
    "8904": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8905": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x364E"
    },
    "8908": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        990,
        993
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8909": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8910": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8911": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "POP",
      "path": "16"
    },
    "8912": {
      "fn": "MerkleProof.verify",
      "offset": [
        990,
        993
      ],
      "op": "POP",
      "path": "16"
    },
    "8913": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2236"
    },
    "8916": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8917": {
      "fn": "MerkleProof.verify",
      "offset": [
        952,
        1467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8918": {
      "op": "POP"
    },
    "8919": {
      "fn": "MerkleProof.verify",
      "offset": [
        1559,
        1579
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 102
    },
    "8920": {
      "fn": "MerkleProof.verify",
      "offset": [
        1559,
        1579
      ],
      "op": "EQ",
      "path": "16"
    },
    "8921": {
      "fn": "MerkleProof.verify",
      "offset": [
        1559,
        1579
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8922": {
      "op": "POP"
    },
    "8923": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8924": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8925": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8926": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "POP",
      "path": "16"
    },
    "8927": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "POP",
      "path": "16"
    },
    "8928": {
      "fn": "MerkleProof.verify",
      "offset": [
        777,
        1586
      ],
      "op": "POP",
      "path": "16"
    },
    "8929": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        777,
        1586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8930": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6919
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8931": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 103,
      "value": "0x22ED"
    },
    "8934": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6777
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8935": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6781
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8936": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6783,
        6790
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8937": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6772
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FE2"
    },
    "8940": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8941": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8942": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 104,
      "value": "0x22F9"
    },
    "8945": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6832,
        6836
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8946": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6838,
        6840
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8947": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6842,
        6849
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8948": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6851,
        6856
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8949": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2830"
    },
    "8952": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8953": {
      "branch": 213,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8954": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF06"
    },
    "8957": {
      "branch": 213,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8958": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8960": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8967": {
      "op": "SHL"
    },
    "8968": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8969": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8970": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "8972": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "ADD",
      "path": "7"
    },
    "8973": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "8976": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8977": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36B5"
    },
    "8980": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8981": {
      "fn": "Celestial._baseURI",
      "offset": [
        3019,
        3126
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "8982": {
      "fn": "Celestial._baseURI",
      "offset": [
        3079,
        3092
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "8984": {
      "fn": "Celestial._baseURI",
      "offset": [
        3111,
        3119
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 105,
      "value": "0xF"
    },
    "8986": {
      "fn": "Celestial._baseURI",
      "offset": [
        3104,
        3119
      ],
      "op": "DUP1",
      "path": "19"
    },
    "8987": {
      "fn": "Celestial._baseURI",
      "offset": [
        3104,
        3119
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "8988": {
      "fn": "Celestial._baseURI",
      "offset": [
        3104,
        3119
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA5B"
    },
    "8991": {
      "fn": "Celestial._baseURI",
      "offset": [
        3104,
        3119
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "8992": {
      "fn": "Celestial._baseURI",
      "offset": [
        3104,
        3119
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33DB"
    },
    "8995": {
      "fn": "Celestial._baseURI",
      "jump": "i",
      "offset": [
        3104,
        3119
      ],
      "op": "JUMP",
      "path": "19"
    },
    "8996": {
      "fn": "Strings.toString",
      "offset": [
        275,
        978
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8997": {
      "fn": "Strings.toString",
      "offset": [
        331,
        344
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8999": {
      "fn": "Strings.toString",
      "offset": [
        548,
        553
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9000": {
      "fn": "Strings.toString",
      "offset": [
        557,
        558
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9002": {
      "branch": 229,
      "fn": "Strings.toString",
      "offset": [
        548,
        558
      ],
      "op": "SUB",
      "path": "15"
    },
    "9003": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x234B"
    },
    "9006": {
      "branch": 229,
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9007": {
      "op": "POP"
    },
    "9008": {
      "op": "POP"
    },
    "9009": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 106,
      "value": "0x40"
    },
    "9011": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9012": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9013": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9014": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9015": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "15"
    },
    "9016": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9017": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9018": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9019": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9021": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9022": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9025": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "9027": {
      "op": "SHL"
    },
    "9028": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9030": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9031": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "15"
    },
    "9032": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9033": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9034": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        275,
        978
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9035": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9036": {
      "fn": "Strings.toString",
      "offset": [
        619,
        624
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9037": {
      "fn": "Strings.toString",
      "offset": [
        604,
        616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9039": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9040": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9041": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9042": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2375"
    },
    "9045": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9046": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 107
    },
    "9047": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x235F"
    },
    "9050": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9051": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x364E"
    },
    "9054": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        690,
        698
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9055": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9056": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9057": {
      "op": "POP"
    },
    "9058": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 108,
      "value": "0x236E"
    },
    "9061": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9062": {
      "op": "POP"
    },
    "9063": {
      "fn": "Strings.toString",
      "offset": [
        720,
        722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "9065": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9066": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x371D"
    },
    "9069": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        712,
        722
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9070": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9071": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9072": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "POP",
      "path": "15"
    },
    "9073": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x234F"
    },
    "9076": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9077": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9078": {
      "fn": "Strings.toString",
      "offset": [
        742,
        761
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9080": {
      "fn": "Strings.toString",
      "offset": [
        774,
        780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9081": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH8",
      "path": "15",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9090": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9091": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "GT",
      "path": "15"
    },
    "9092": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9093": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2390"
    },
    "9096": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9097": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2390"
    },
    "9100": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F52"
    },
    "9103": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        764,
        781
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9104": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9105": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9107": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9108": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9109": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9110": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9111": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9112": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9113": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "9115": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9116": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "9118": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "NOT",
      "path": "15"
    },
    "9119": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "AND",
      "path": "15"
    },
    "9120": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9122": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9123": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9124": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9125": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9127": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9128": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9129": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9130": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23BA"
    },
    "9133": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9134": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9136": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9137": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9138": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9139": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9140": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "9141": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9142": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "9143": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "15"
    },
    "9144": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9145": {
      "op": "POP"
    },
    "9146": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9147": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "POP",
      "path": "15"
    },
    "9148": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9149": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "POP",
      "path": "15"
    },
    "9150": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9151": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9152": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9153": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FDA"
    },
    "9156": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9157": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 109,
      "value": "0x23CF"
    },
    "9160": {
      "fn": "Strings.toString",
      "offset": [
        834,
        835
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9162": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9163": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34E0"
    },
    "9166": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        824,
        835
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9167": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9168": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9169": {
      "op": "POP"
    },
    "9170": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 110,
      "value": "0x23DC"
    },
    "9173": {
      "fn": "Strings.toString",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "9175": {
      "fn": "Strings.toString",
      "offset": [
        892,
        897
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9176": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3731"
    },
    "9179": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        892,
        902
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9180": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9181": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23E7"
    },
    "9184": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9185": {
      "fn": "Strings.toString",
      "offset": [
        879,
        881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x30"
    },
    "9187": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34F7"
    },
    "9190": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        879,
        903
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9191": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9192": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF8"
    },
    "9194": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "SHL",
      "path": "15"
    },
    "9195": {
      "fn": "Strings.toString",
      "offset": [
        849,
        855
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9196": {
      "fn": "Strings.toString",
      "offset": [
        856,
        862
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9197": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9198": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9199": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9200": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "LT",
      "path": "15"
    },
    "9201": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23FC"
    },
    "9204": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9205": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23FC"
    },
    "9208": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x360F"
    },
    "9211": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        849,
        863
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9212": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9213": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9215": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "15"
    },
    "9216": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "15"
    },
    "9217": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9224": {
      "op": "SHL"
    },
    "9225": {
      "op": "SUB"
    },
    "9226": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "NOT",
      "path": "15"
    },
    "9227": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "AND",
      "path": "15"
    },
    "9228": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9229": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9230": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9232": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "BYTE",
      "path": "15"
    },
    "9233": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9234": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "MSTORE8",
      "path": "15"
    },
    "9235": {
      "op": "POP"
    },
    "9236": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 111,
      "value": "0x241E"
    },
    "9239": {
      "fn": "Strings.toString",
      "offset": [
        928,
        930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "9241": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9242": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x371D"
    },
    "9245": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        930
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9246": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9247": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9248": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "POP",
      "path": "15"
    },
    "9249": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23BE"
    },
    "9252": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9253": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4666,
        5678
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9254": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4834,
        4873
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 112,
      "value": "0x2433"
    },
    "9257": {
      "offset": [
        1115,
        1121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A98"
    },
    "9260": {
      "offset": [
        1058,
        1064
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "9263": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4834,
        4873
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F7"
    },
    "9266": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        4834,
        4873
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9267": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4834,
        4873
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9268": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4814,
        4830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x15"
    },
    "9270": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4814,
        4830
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9271": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4814,
        4873
      ],
      "op": "GT",
      "path": "19"
    },
    "9272": {
      "branch": 191,
      "fn": "Celestial._createCelestial",
      "offset": [
        4814,
        4873
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9273": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2484"
    },
    "9276": {
      "branch": 191,
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9277": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9279": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9286": {
      "op": "SHL"
    },
    "9287": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9288": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9291": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9293": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9294": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "ADD",
      "path": "19"
    },
    "9295": {
      "op": "MSTORE"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "9298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9300": {
      "op": "DUP3"
    },
    "9301": {
      "op": "ADD"
    },
    "9302": {
      "op": "MSTORE"
    },
    "9303": {
      "op": "PUSH32",
      "value": "0x63616E6E6F74206D696E7420616E796D6F72652063656C65737469616C730000"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9338": {
      "op": "DUP3"
    },
    "9339": {
      "op": "ADD"
    },
    "9340": {
      "op": "MSTORE"
    },
    "9341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9343": {
      "op": "ADD"
    },
    "9344": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "9347": {
      "op": "JUMP"
    },
    "9348": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4793,
        4929
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9349": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4948,
        4964
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 113,
      "value": "0x248D"
    },
    "9352": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4956,
        4963
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9353": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4948,
        4955
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF2"
    },
    "9356": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        4948,
        4964
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9357": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4948,
        4964
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9358": {
      "branch": 192,
      "fn": "Celestial._createCelestial",
      "offset": [
        4947,
        4964
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9359": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24DA"
    },
    "9362": {
      "branch": 192,
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9363": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9365": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9372": {
      "op": "SHL"
    },
    "9373": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9374": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9377": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9379": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9380": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "ADD",
      "path": "19"
    },
    "9381": {
      "op": "DUP2"
    },
    "9382": {
      "op": "SWAP1"
    },
    "9383": {
      "op": "MSTORE"
    },
    "9384": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9386": {
      "op": "DUP3"
    },
    "9387": {
      "op": "ADD"
    },
    "9388": {
      "op": "MSTORE"
    },
    "9389": {
      "op": "PUSH32",
      "value": "0x746869732027746F6B656E49642720697320616C726561647920746F6F6B656E"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9424": {
      "op": "DUP3"
    },
    "9425": {
      "op": "ADD"
    },
    "9426": {
      "op": "MSTORE"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9429": {
      "op": "ADD"
    },
    "9430": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "9433": {
      "op": "JUMP"
    },
    "9434": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4939,
        5001
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9435": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5043,
        5044
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 114,
      "value": "0x1"
    },
    "9437": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5039
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9438": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5044
      ],
      "op": "LT",
      "path": "19"
    },
    "9439": {
      "branch": 193,
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5044
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9440": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5077
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9441": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5077
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9442": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5077
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24ED"
    },
    "9445": {
      "branch": 193,
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5077
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9446": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5077
      ],
      "op": "POP",
      "path": "19"
    },
    "9447": {
      "offset": [
        1058,
        1064
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "9450": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5048,
        5055
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9451": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5048,
        5077
      ],
      "op": "GT",
      "path": "19"
    },
    "9452": {
      "branch": 194,
      "fn": "Celestial._createCelestial",
      "offset": [
        5048,
        5077
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9453": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5032,
        5077
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9454": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2539"
    },
    "9457": {
      "branch": 194,
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9458": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9460": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9461": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9465": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9467": {
      "op": "SHL"
    },
    "9468": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9469": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9472": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9474": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9475": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "ADD",
      "path": "19"
    },
    "9476": {
      "op": "MSTORE"
    },
    "9477": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9481": {
      "op": "DUP3"
    },
    "9482": {
      "op": "ADD"
    },
    "9483": {
      "op": "MSTORE"
    },
    "9484": {
      "op": "PUSH32",
      "value": "0x27746F6B656E496427206D75737420626520696E207468652072616E67650000"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9519": {
      "op": "DUP3"
    },
    "9520": {
      "op": "ADD"
    },
    "9521": {
      "op": "MSTORE"
    },
    "9522": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9524": {
      "op": "ADD"
    },
    "9525": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "9528": {
      "op": "JUMP"
    },
    "9529": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5011,
        5133
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9530": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 115,
      "value": "0x0"
    },
    "9532": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9533": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9534": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9535": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5174
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "9537": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9539": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9540": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9542": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9543": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9544": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5183
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9545": {
      "branch": 195,
      "fn": "Celestial._createCelestial",
      "offset": [
        5164,
        5188
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "9546": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x25A4"
    },
    "9549": {
      "branch": 195,
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9550": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9552": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9559": {
      "op": "SHL"
    },
    "9560": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9561": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9564": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9566": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9567": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "ADD",
      "path": "19"
    },
    "9568": {
      "op": "MSTORE"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9573": {
      "op": "DUP3"
    },
    "9574": {
      "op": "ADD"
    },
    "9575": {
      "op": "MSTORE"
    },
    "9576": {
      "op": "PUSH32",
      "value": "0x7468617420746F6B656E277320747970652068617320616C7265616479206265"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9611": {
      "op": "DUP3"
    },
    "9612": {
      "op": "ADD"
    },
    "9613": {
      "op": "MSTORE"
    },
    "9614": {
      "op": "PUSH6",
      "value": "0x195B881CD95D"
    },
    "9621": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "9623": {
      "op": "SHL"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9626": {
      "op": "DUP3"
    },
    "9627": {
      "op": "ADD"
    },
    "9628": {
      "op": "MSTORE"
    },
    "9629": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9631": {
      "op": "ADD"
    },
    "9632": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "9635": {
      "op": "JUMP"
    },
    "9636": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5143,
        5252
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9637": {
      "offset": [
        1164,
        1165
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9639": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5296
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 116
    },
    "9640": {
      "branch": 196,
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5310
      ],
      "op": "EQ",
      "path": "19"
    },
    "9641": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5357
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9642": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5357
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x25B3"
    },
    "9645": {
      "branch": 196,
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5357
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9646": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5357
      ],
      "op": "POP",
      "path": "19"
    },
    "9647": {
      "offset": [
        1208,
        1209
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "9649": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5330,
        5343
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9650": {
      "branch": 197,
      "fn": "Celestial._createCelestial",
      "offset": [
        5330,
        5357
      ],
      "op": "EQ",
      "path": "19"
    },
    "9651": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5357
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9652": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5407
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9653": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5407
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x25BE"
    },
    "9656": {
      "branch": 197,
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5407
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9657": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5407
      ],
      "op": "POP",
      "path": "19"
    },
    "9658": {
      "offset": [
        1255,
        1256
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "9660": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5377,
        5390
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9661": {
      "branch": 198,
      "fn": "Celestial._createCelestial",
      "offset": [
        5377,
        5407
      ],
      "op": "EQ",
      "path": "19"
    },
    "9662": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5283,
        5407
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9663": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2603"
    },
    "9666": {
      "branch": 198,
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "9667": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9669": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9670": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9676": {
      "op": "SHL"
    },
    "9677": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9678": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9681": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "9683": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9684": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "ADD",
      "path": "19"
    },
    "9685": {
      "op": "MSTORE"
    },
    "9686": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "9688": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9690": {
      "op": "DUP3"
    },
    "9691": {
      "op": "ADD"
    },
    "9692": {
      "op": "MSTORE"
    },
    "9693": {
      "op": "PUSH22",
      "value": "0x696E76616C69642063656C65737469616C2074797065"
    },
    "9716": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9718": {
      "op": "SHL"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9721": {
      "op": "DUP3"
    },
    "9722": {
      "op": "ADD"
    },
    "9723": {
      "op": "MSTORE"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9726": {
      "op": "ADD"
    },
    "9727": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB46"
    },
    "9730": {
      "op": "JUMP"
    },
    "9731": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5262,
        5455
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9732": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 117,
      "value": "0x0"
    },
    "9734": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "DUP3",
      "path": "19"
    },
    "9735": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9736": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9737": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5475
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "9739": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "9741": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "9742": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9744": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9745": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5484
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "9746": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5500
      ],
      "op": "DUP2",
      "path": "19"
    },
    "9747": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5500
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9748": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5465,
        5500
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "9749": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5510,
        5532
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 118,
      "value": "0x261E"
    },
    "9752": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5520,
        5522
      ],
      "op": "DUP4",
      "path": "19"
    },
    "9753": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5476,
        5483
      ],
      "op": "DUP4",
      "path": "19"
    },
    "9754": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5510,
        5519
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2931"
    },
    "9757": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5510,
        5532
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9758": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5510,
        5532
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9759": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5560,
        5565
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 119,
      "value": "0xE"
    },
    "9761": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5560,
        5565
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "9762": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5542,
        5571
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2635"
    },
    "9765": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5542,
        5571
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9772": {
      "op": "SHL"
    },
    "9773": {
      "op": "SUB"
    },
    "9774": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5560,
        5565
      ],
      "op": "AND",
      "path": "19"
    },
    "9775": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5560,
        5565
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9777": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5542,
        5559
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x172B"
    },
    "9780": {
      "fn": "Celestial._createCelestial",
      "jump": "i",
      "offset": [
        5542,
        5571
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9781": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5542,
        5571
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9782": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 120,
      "value": "0x40"
    },
    "9784": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9785": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9786": {
      "op": "DUP4"
    },
    "9787": {
      "op": "DUP2"
    },
    "9788": {
      "op": "MSTORE"
    },
    "9789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9791": {
      "op": "DUP2"
    },
    "9792": {
      "op": "ADD"
    },
    "9793": {
      "op": "DUP4"
    },
    "9794": {
      "op": "SWAP1"
    },
    "9795": {
      "op": "MSTORE"
    },
    "9796": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC3446D569695AA78750F8132CE4941514489A02C8CA9A2078EE392DCCD96474E"
    },
    "9829": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9830": {
      "op": "ADD"
    },
    "9831": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9833": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9834": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9835": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9836": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "SUB",
      "path": "19"
    },
    "9837": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9838": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5586,
        5629
      ],
      "op": "LOG1",
      "path": "19"
    },
    "9839": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 121,
      "value": "0x40"
    },
    "9841": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9842": {
      "op": "DUP3"
    },
    "9843": {
      "op": "DUP2"
    },
    "9844": {
      "op": "MSTORE"
    },
    "9845": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xB0C73316550069520AA3BFFD50BE8C7989584DA8716295793EDA73DBCD1C154C"
    },
    "9878": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9881": {
      "op": "ADD"
    },
    "9882": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "9884": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "9885": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "DUP1",
      "path": "19"
    },
    "9886": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9887": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "SUB",
      "path": "19"
    },
    "9888": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9889": {
      "fn": "Celestial._createCelestial",
      "offset": [
        5644,
        5671
      ],
      "op": "LOG1",
      "path": "19"
    },
    "9890": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4666,
        5678
      ],
      "op": "POP",
      "path": "19"
    },
    "9891": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4666,
        5678
      ],
      "op": "POP",
      "path": "19"
    },
    "9892": {
      "fn": "Celestial._createCelestial",
      "offset": [
        4666,
        5678
      ],
      "op": "POP",
      "path": "19"
    },
    "9893": {
      "fn": "Celestial._createCelestial",
      "jump": "o",
      "offset": [
        4666,
        5678
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9894": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2544,
        3116
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9901": {
      "op": "SHL"
    },
    "9902": {
      "op": "SUB"
    },
    "9903": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2743,
        2761
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9904": {
      "branch": 220,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2743,
        2761
      ],
      "op": "AND",
      "path": "10"
    },
    "9905": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2701"
    },
    "9908": {
      "branch": 220,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9909": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2777,
        2817
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 122,
      "value": "0x26FC"
    },
    "9912": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2809,
        2816
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9913": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3925,
        3935
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 123,
      "value": "0x8"
    },
    "9915": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3925,
        3942
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9916": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3925,
        3942
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9917": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9919": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9920": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9921": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9922": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3913
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "9924": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9926": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9927": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9929": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9930": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3922
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9931": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3942
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9932": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3942
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9933": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3898,
        3942
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9934": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 124,
      "value": "0x1"
    },
    "9936": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9937": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "ADD",
      "path": "10"
    },
    "9938": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9939": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9940": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9941": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9942": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9943": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9944": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "9977": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "ADD",
      "path": "10"
    },
    "9978": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3952,
        3976
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9979": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3822,
        3983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9980": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2777,
        2817
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9981": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2724"
    },
    "9984": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9985": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2739,
        2922
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9986": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2846,
        2848
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9993": {
      "op": "SHL"
    },
    "9994": {
      "op": "SUB"
    },
    "9995": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2838,
        2848
      ],
      "op": "AND",
      "path": "10"
    },
    "9996": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2838,
        2842
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10003": {
      "op": "SHL"
    },
    "10004": {
      "op": "SUB"
    },
    "10005": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2838,
        2848
      ],
      "op": "AND",
      "path": "10"
    },
    "10006": {
      "branch": 221,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2838,
        2848
      ],
      "op": "EQ",
      "path": "10"
    },
    "10007": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2834,
        2922
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2724"
    },
    "10010": {
      "branch": 221,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2834,
        2922
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10011": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2864,
        2911
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 125,
      "value": "0x2724"
    },
    "10014": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2897,
        2901
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10015": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2903,
        2910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10016": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2864,
        2896
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x294F"
    },
    "10019": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2864,
        2911
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10020": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2864,
        2911
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10027": {
      "op": "SHL"
    },
    "10028": {
      "op": "SUB"
    },
    "10029": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2935,
        2951
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10030": {
      "branch": 222,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2935,
        2951
      ],
      "op": "AND",
      "path": "10"
    },
    "10031": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2931,
        3110
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x273B"
    },
    "10034": {
      "branch": 222,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2931,
        3110
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10035": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        3012
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 126,
      "value": "0xC7B"
    },
    "10038": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3004,
        3011
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10039": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        3003
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29EC"
    },
    "10042": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2967,
        3012
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10043": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2931,
        3110
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10044": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3039,
        3043
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10051": {
      "op": "SHL"
    },
    "10052": {
      "op": "SUB"
    },
    "10053": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3043
      ],
      "op": "AND",
      "path": "10"
    },
    "10054": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3035
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10061": {
      "op": "SHL"
    },
    "10062": {
      "op": "SUB"
    },
    "10063": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3043
      ],
      "op": "AND",
      "path": "10"
    },
    "10064": {
      "branch": 223,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3043
      ],
      "op": "EQ",
      "path": "10"
    },
    "10065": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3029,
        3110
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC7B"
    },
    "10068": {
      "branch": 223,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3029,
        3110
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10069": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3059,
        3099
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 127,
      "value": "0xC7B"
    },
    "10072": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3087,
        3089
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10073": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3091,
        3098
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10074": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3059,
        3086
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A9B"
    },
    "10077": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3059,
        3099
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10078": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10079": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10081": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27B3"
    },
    "10084": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10085": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10087": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10088": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10089": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10091": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "6"
    },
    "10092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10094": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10095": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10096": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10098": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10099": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10100": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10102": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "6"
    },
    "10103": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "10136": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10137": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10138": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "6"
    },
    "10139": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10146": {
      "op": "SHL"
    },
    "10147": {
      "op": "SUB"
    },
    "10148": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "6"
    },
    "10149": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ADF"
    },
    "10152": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10153": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10154": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10155": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10156": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "10161": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "6"
    },
    "10162": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10163": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10164": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10165": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10166": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10167": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10168": {
      "op": "POP"
    },
    "10169": {
      "branch": 227,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "10170": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7B"
    },
    "10173": {
      "branch": 227,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10174": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 128
    },
    "10175": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10176": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10178": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "6"
    },
    "10179": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10180": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10181": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10182": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "6"
    },
    "10183": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10184": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D1"
    },
    "10187": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10188": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10189": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3745"
    },
    "10192": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10193": {
      "branch": 228,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10194": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7B"
    },
    "10197": {
      "branch": 228,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10198": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10200": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10201": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10207": {
      "op": "SHL"
    },
    "10208": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10209": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10212": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10214": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10215": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "6"
    },
    "10216": {
      "op": "MSTORE"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10221": {
      "op": "DUP3"
    },
    "10222": {
      "op": "ADD"
    },
    "10223": {
      "op": "MSTORE"
    },
    "10224": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10259": {
      "op": "DUP3"
    },
    "10260": {
      "op": "ADD"
    },
    "10261": {
      "op": "MSTORE"
    },
    "10262": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "10273": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "10275": {
      "op": "SHL"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10278": {
      "op": "DUP3"
    },
    "10279": {
      "op": "ADD"
    },
    "10280": {
      "op": "MSTORE"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10283": {
      "op": "ADD"
    },
    "10284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB46"
    },
    "10287": {
      "op": "JUMP"
    },
    "10288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11947,
        11951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10297": {
      "op": "SHL"
    },
    "10298": {
      "op": "SUB"
    },
    "10299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "AND",
      "path": "7"
    },
    "10301": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "10302": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "13",
      "statement": 129
    },
    "10303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2926"
    },
    "10306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10310": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10317": {
      "op": "SHL"
    },
    "10318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10326": {
      "op": "SHL"
    },
    "10327": {
      "op": "SUB"
    },
    "10328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "DUP6",
      "path": "7"
    },
    "10329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "AND",
      "path": "7"
    },
    "10330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x150B7A02"
    },
    "10336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2874"
    },
    "10340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10341": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "14"
    },
    "10342": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10343": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "DUP10",
      "path": "7"
    },
    "10344": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "DUP9",
      "path": "7"
    },
    "10346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "DUP9",
      "path": "7"
    },
    "10348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "10351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "7"
    },
    "10352": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3762"
    },
    "10355": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10356": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10359": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10363": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10364": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SUB",
      "path": "7"
    },
    "10365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10366": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10368": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP8",
      "path": "7"
    },
    "10369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "GAS",
      "path": "7"
    },
    "10370": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "CALL",
      "path": "7"
    },
    "10371": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "7"
    },
    "10373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "7"
    },
    "10374": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "7"
    },
    "10375": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10377": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28AF"
    },
    "10380": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10381": {
      "op": "POP"
    },
    "10382": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "10388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10389": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10391": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "7"
    },
    "10392": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10394": {
      "op": "NOT"
    },
    "10395": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "AND",
      "path": "7"
    },
    "10396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "7"
    },
    "10398": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10399": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10400": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28AC"
    },
    "10404": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10405": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10406": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "7"
    },
    "10407": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10408": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x379F"
    },
    "10411": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10412": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10413": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "10415": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10416": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x290C"
    },
    "10419": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10420": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10421": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10422": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10423": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10424": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28DD"
    },
    "10427": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10428": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10430": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10431": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10432": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "7"
    },
    "10433": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "10435": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "NOT",
      "path": "7"
    },
    "10436": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "10438": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "7"
    },
    "10440": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "AND",
      "path": "7"
    },
    "10441": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10442": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "7"
    },
    "10443": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10445": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10446": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10448": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10449": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10450": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10452": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10454": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10455": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "7"
    },
    "10456": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "10457": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28E2"
    },
    "10460": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10461": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10462": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "10464": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10465": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "7"
    },
    "10466": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "7"
    },
    "10468": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12251
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10469": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12258
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10470": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12262,
        12263
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10472": {
      "branch": 214,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12263
      ],
      "op": "SUB",
      "path": "7"
    },
    "10473": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2904"
    },
    "10476": {
      "branch": 214,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10477": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 130,
      "value": "0x40"
    },
    "10479": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10486": {
      "op": "SHL"
    },
    "10487": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10488": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10489": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "10491": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "ADD",
      "path": "7"
    },
    "10492": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "10495": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10496": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36B5"
    },
    "10499": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12287,
        12347
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10500": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10501": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12459,
        12465
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10502": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12453,
        12466
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10503": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12444,
        12450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10504": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12440,
        12442
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10506": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12436,
        12451
      ],
      "op": "ADD",
      "path": "7"
    },
    "10507": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12429,
        12467
      ],
      "op": "REVERT",
      "path": "7"
    },
    "10508": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10515": {
      "op": "SHL"
    },
    "10516": {
      "op": "SUB"
    },
    "10517": {
      "op": "NOT"
    },
    "10518": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "AND",
      "path": "7",
      "statement": 131
    },
    "10519": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10524": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10526": {
      "op": "SHL"
    },
    "10527": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "EQ",
      "path": "7"
    },
    "10528": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10529": {
      "op": "POP"
    },
    "10530": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12179
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FDA"
    },
    "10533": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12179
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10534": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10535": {
      "op": "POP"
    },
    "10536": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12558,
        12562
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 132,
      "value": "0x1"
    },
    "10538": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "10539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "10540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "7"
    },
    "10541": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "7"
    },
    "10542": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "7"
    },
    "10543": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "7"
    },
    "10544": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11797,
        12579
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10545": {
      "fn": "ERC721._safeMint",
      "offset": [
        8179,
        8287
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10546": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 133,
      "value": "0x294B"
    },
    "10549": {
      "fn": "ERC721._safeMint",
      "offset": [
        8264,
        8266
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10550": {
      "fn": "ERC721._safeMint",
      "offset": [
        8268,
        8275
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10551": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10553": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10554": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10555": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10557": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "ADD",
      "path": "7"
    },
    "10558": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10560": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10561": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10562": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10564": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10565": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10566": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "POP",
      "path": "7"
    },
    "10567": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8263
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AEE"
    },
    "10570": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8254,
        8280
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10571": {
      "fn": "ERC721._safeMint",
      "offset": [
        8254,
        8280
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10572": {
      "fn": "ERC721._safeMint",
      "offset": [
        8179,
        8287
      ],
      "op": "POP",
      "path": "7"
    },
    "10573": {
      "fn": "ERC721._safeMint",
      "offset": [
        8179,
        8287
      ],
      "op": "POP",
      "path": "7"
    },
    "10574": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8179,
        8287
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10575": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4600,
        5570
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10576": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4862,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10578": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4912,
        4913
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "10580": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4909
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x295C"
    },
    "10583": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4904,
        4908
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10584": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4903
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12CB"
    },
    "10587": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4887,
        4909
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10588": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4909
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10589": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2966"
    },
    "10592": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10593": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10594": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34E0"
    },
    "10597": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4887,
        4913
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10598": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4887,
        4913
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10599": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4923,
        4941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10601": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10602": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10603": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10604": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "10606": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10608": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10609": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10611": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10612": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10613": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4944,
        4970
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10614": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4862,
        4913
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10615": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4862,
        4913
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10616": {
      "op": "POP"
    },
    "10617": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5074,
        5102
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10618": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5074,
        5102
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10619": {
      "branch": 224,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5074,
        5102
      ],
      "op": "EQ",
      "path": "10"
    },
    "10620": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5070,
        5393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29B9"
    },
    "10623": {
      "branch": 224,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5070,
        5393
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10630": {
      "op": "SHL"
    },
    "10631": {
      "op": "SUB"
    },
    "10632": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10633": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "AND",
      "path": "10"
    },
    "10634": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5118,
        5137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10636": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10637": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10638": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10639": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5152
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "10641": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10643": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10644": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10645": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10646": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10648": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10649": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10650": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5158
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10651": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP6",
      "path": "10"
    },
    "10652": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10653": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10654": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10655": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10656": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10657": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10658": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10659": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5140,
        5174
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10660": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 134
    },
    "10661": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10662": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10663": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10664": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10665": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5219
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10666": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5233
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10667": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10668": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5189,
        5233
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10669": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 135
    },
    "10670": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10671": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5322
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "10673": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10674": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10675": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10676": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10677": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5335
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10678": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5348
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10679": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5348
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10680": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5348
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10681": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5070,
        5393
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10682": {
      "op": "POP"
    },
    "10683": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 136,
      "value": "0x0"
    },
    "10685": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10686": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10687": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10688": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5503
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "10690": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10692": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10693": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10694": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10695": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10697": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10698": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10699": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5486,
        5512
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10700": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5479,
        5512
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10701": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5479,
        5512
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10702": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5479,
        5512
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10709": {
      "op": "SHL"
    },
    "10710": {
      "op": "SUB"
    },
    "10711": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 137
    },
    "10712": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "10713": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "AND",
      "path": "10"
    },
    "10714": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10715": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10716": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5541
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "10718": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10719": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10720": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10721": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10722": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5547
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10723": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10725": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10726": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10728": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10729": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5529,
        5563
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10730": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5522,
        5563
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10731": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4600,
        5570
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10732": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5858,
        6919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10733": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6142
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "10735": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6149
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10736": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6129
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10738": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6129
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10739": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6153
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "10742": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6153
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10743": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6152,
        6153
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "10745": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6152,
        6153
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10746": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6153
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34E0"
    },
    "10749": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6132,
        6153
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10750": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6132,
        6153
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10751": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6163,
        6181
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10753": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10754": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10755": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10756": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6199
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "10758": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10760": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10761": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10763": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10764": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10765": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10766": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6562
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "10768": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10769": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10770": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6153
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "10771": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6153
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "10772": {
      "op": "POP"
    },
    "10773": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10774": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6184,
        6208
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "10775": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6153
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10776": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6107,
        6153
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10777": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10778": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "LT",
      "path": "10"
    },
    "10779": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A26"
    },
    "10782": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10783": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A26"
    },
    "10786": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x360F"
    },
    "10789": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6552,
        6578
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10790": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10791": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10792": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10794": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10795": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10797": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10799": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10800": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "ADD",
      "path": "10"
    },
    "10801": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6552,
        6578
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10802": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6530,
        6578
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10803": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6530,
        6578
      ],
      "op": "POP",
      "path": "10"
    },
    "10804": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6614,
        6625
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 138
    },
    "10805": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6599
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "10807": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6600,
        6610
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10808": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10809": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10810": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10811": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "LT",
      "path": "10"
    },
    "10812": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A47"
    },
    "10815": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10816": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A47"
    },
    "10819": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x360F"
    },
    "10822": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6589,
        6611
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10823": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10824": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10826": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10827": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10828": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10829": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10831": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10832": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10833": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10834": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10835": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10836": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6611
      ],
      "op": "ADD",
      "path": "10"
    },
    "10837": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6625
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "10838": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6625
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10839": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6625
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "10840": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6589,
        6625
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10841": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 139
    },
    "10842": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10843": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10844": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "10846": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10847": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10848": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10849": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10851": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10852": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10853": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6721
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10854": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6734
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10855": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6734
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10856": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6693,
        6734
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10857": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 140
    },
    "10858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10859": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10860": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10861": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6862,
        6886
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10862": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6855,
        6886
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10863": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6906
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 141,
      "value": "0x8"
    },
    "10865": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10866": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10867": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10868": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A7F"
    },
    "10871": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10872": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A7F"
    },
    "10875": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37BC"
    },
    "10878": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6896,
        6912
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10879": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10880": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "10882": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10883": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SUB",
      "path": "10"
    },
    "10884": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10885": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10886": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10887": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10889": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10890": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10892": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10894": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "ADD",
      "path": "10"
    },
    "10896": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10898": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10899": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10900": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10901": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6896,
        6912
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10902": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5929,
        6919
      ],
      "op": "POP",
      "path": "10"
    },
    "10903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5929,
        6919
      ],
      "op": "POP",
      "path": "10"
    },
    "10904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5929,
        6919
      ],
      "op": "POP",
      "path": "10"
    },
    "10905": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5858,
        6919
      ],
      "op": "POP",
      "path": "10"
    },
    "10906": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5858,
        6919
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10907": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3410,
        3627
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10908": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3494,
        3508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10910": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3511,
        3531
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AA6"
    },
    "10913": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3528,
        3530
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10914": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3511,
        3527
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12CB"
    },
    "10917": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3511,
        3531
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10918": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3511,
        3531
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10925": {
      "op": "SHL"
    },
    "10926": {
      "op": "SUB"
    },
    "10927": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 142
    },
    "10928": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "10929": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "AND",
      "path": "10"
    },
    "10930": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10932": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10933": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10934": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10935": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3553
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "10937": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10939": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10940": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10941": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10942": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10944": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10945": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10946": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3557
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10947": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP7",
      "path": "10"
    },
    "10948": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10949": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10950": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10951": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10952": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10953": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10954": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3565
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10955": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3575
      ],
      "op": "DUP6",
      "path": "10"
    },
    "10956": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3575
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10957": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3541,
        3575
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10958": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP4",
      "path": "10",
      "statement": 143
    },
    "10959": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10960": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10961": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3602
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "10963": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10964": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10965": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10966": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10967": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10968": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3611
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10969": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3620
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10970": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3620
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10971": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3620
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10972": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3585,
        3620
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10973": {
      "op": "POP"
    },
    "10974": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3410,
        3627
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10975": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10976": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "10978": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 144,
      "value": "0x1FDA"
    },
    "10981": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10982": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10983": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10985": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10986": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B21"
    },
    "10989": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10990": {
      "fn": "ERC721._safeMint",
      "offset": [
        8508,
        8819
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10991": {
      "fn": "ERC721._safeMint",
      "offset": [
        8633,
        8651
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 145,
      "value": "0x2AF8"
    },
    "10994": {
      "fn": "ERC721._safeMint",
      "offset": [
        8639,
        8641
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10995": {
      "fn": "ERC721._safeMint",
      "offset": [
        8643,
        8650
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10996": {
      "fn": "ERC721._safeMint",
      "offset": [
        8633,
        8638
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C49"
    },
    "10999": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8633,
        8651
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11000": {
      "fn": "ERC721._safeMint",
      "offset": [
        8633,
        8651
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11001": {
      "fn": "ERC721._safeMint",
      "offset": [
        8682,
        8736
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 146,
      "value": "0x2B05"
    },
    "11004": {
      "fn": "ERC721._safeMint",
      "offset": [
        8713,
        8714
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11006": {
      "fn": "ERC721._safeMint",
      "offset": [
        8717,
        8719
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11007": {
      "fn": "ERC721._safeMint",
      "offset": [
        8721,
        8728
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11008": {
      "fn": "ERC721._safeMint",
      "offset": [
        8730,
        8735
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11009": {
      "fn": "ERC721._safeMint",
      "offset": [
        8682,
        8704
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2830"
    },
    "11012": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8682,
        8736
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11013": {
      "branch": 215,
      "fn": "ERC721._safeMint",
      "offset": [
        8682,
        8736
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11014": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC7B"
    },
    "11017": {
      "branch": 215,
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11018": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11020": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11027": {
      "op": "SHL"
    },
    "11028": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11029": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11030": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11032": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "ADD",
      "path": "7"
    },
    "11033": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "11036": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11037": {
      "fn": "ERC721._safeMint",
      "offset": [
        8661,
        8812
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36B5"
    },
    "11040": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8661,
        8812
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "11044": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 147
    },
    "11045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "13"
    },
    "11046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "13"
    },
    "11047": {
      "branch": 199,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B82"
    },
    "11051": {
      "branch": 199,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11061": {
      "op": "SHL"
    },
    "11062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "13"
    },
    "11070": {
      "op": "MSTORE"
    },
    "11071": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11075": {
      "op": "DUP3"
    },
    "11076": {
      "op": "ADD"
    },
    "11077": {
      "op": "MSTORE"
    },
    "11078": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "11111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11113": {
      "op": "DUP3"
    },
    "11114": {
      "op": "ADD"
    },
    "11115": {
      "op": "MSTORE"
    },
    "11116": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "11123": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "11125": {
      "op": "SHL"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11128": {
      "op": "DUP3"
    },
    "11129": {
      "op": "ADD"
    },
    "11130": {
      "op": "MSTORE"
    },
    "11131": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11133": {
      "op": "ADD"
    },
    "11134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB46"
    },
    "11137": {
      "op": "JUMP"
    },
    "11138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11139": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "13"
    },
    "11140": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "11141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 148,
      "value": "0x2BD0"
    },
    "11144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11154": {
      "op": "SHL"
    },
    "11155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "13"
    },
    "11163": {
      "op": "MSTORE"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "11166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11168": {
      "op": "DUP3"
    },
    "11169": {
      "op": "ADD"
    },
    "11170": {
      "op": "MSTORE"
    },
    "11171": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "11204": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11206": {
      "op": "DUP3"
    },
    "11207": {
      "op": "ADD"
    },
    "11208": {
      "op": "MSTORE"
    },
    "11209": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11211": {
      "op": "ADD"
    },
    "11212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB46"
    },
    "11215": {
      "op": "JUMP"
    },
    "11216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11227": {
      "op": "SHL"
    },
    "11228": {
      "op": "SUB"
    },
    "11229": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "13"
    },
    "11230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "13"
    },
    "11231": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "13"
    },
    "11232": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BEC"
    },
    "11238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11240": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x37D2"
    },
    "11243": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11250": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "13"
    },
    "11252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "13"
    },
    "11253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "13"
    },
    "11255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "13"
    },
    "11256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "13"
    },
    "11257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "13"
    },
    "11258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "11259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11264": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "13"
    },
    "11268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2C29"
    },
    "11271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "11279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "13"
    },
    "11280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "11282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "11284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "13"
    },
    "11285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "11287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "11298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "13"
    },
    "11299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "13"
    },
    "11300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "11301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2C2E"
    },
    "11304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "11308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "13"
    },
    "11316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 149,
      "value": "0x2C3E"
    },
    "11319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5007,
        5014
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5016,
        5026
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5028,
        5040
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5006
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D88"
    },
    "11325": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5041
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5041
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "11328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "11329": {
      "op": "POP"
    },
    "11330": {
      "op": "POP"
    },
    "11331": {
      "op": "POP"
    },
    "11332": {
      "op": "POP"
    },
    "11333": {
      "op": "POP"
    },
    "11334": {
      "op": "POP"
    },
    "11335": {
      "op": "POP"
    },
    "11336": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11337": {
      "fn": "ERC721._mint",
      "offset": [
        9141,
        9513
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11344": {
      "op": "SHL"
    },
    "11345": {
      "op": "SUB"
    },
    "11346": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9236
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 150
    },
    "11347": {
      "branch": 216,
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9236
      ],
      "op": "AND",
      "path": "7"
    },
    "11348": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C9F"
    },
    "11351": {
      "branch": 216,
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11352": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11354": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11361": {
      "op": "SHL"
    },
    "11362": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11363": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11366": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11368": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11369": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "ADD",
      "path": "7"
    },
    "11370": {
      "op": "DUP2"
    },
    "11371": {
      "op": "SWAP1"
    },
    "11372": {
      "op": "MSTORE"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11375": {
      "op": "DUP3"
    },
    "11376": {
      "op": "ADD"
    },
    "11377": {
      "op": "MSTORE"
    },
    "11378": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11413": {
      "op": "DUP3"
    },
    "11414": {
      "op": "ADD"
    },
    "11415": {
      "op": "MSTORE"
    },
    "11416": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11418": {
      "op": "ADD"
    },
    "11419": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "11422": {
      "op": "JUMP"
    },
    "11423": {
      "fn": "ERC721._mint",
      "offset": [
        9212,
        9273
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11424": {
      "fn": "ERC721._mint",
      "offset": [
        9292,
        9308
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 151,
      "value": "0x2CA8"
    },
    "11427": {
      "fn": "ERC721._mint",
      "offset": [
        9300,
        9307
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11428": {
      "fn": "ERC721._mint",
      "offset": [
        9292,
        9299
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DF2"
    },
    "11431": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9292,
        9308
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11432": {
      "fn": "ERC721._mint",
      "offset": [
        9292,
        9308
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11433": {
      "branch": 217,
      "fn": "ERC721._mint",
      "offset": [
        9291,
        9308
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "11434": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CF5"
    },
    "11437": {
      "branch": 217,
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11438": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11440": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11447": {
      "op": "SHL"
    },
    "11448": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11449": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11452": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11454": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11455": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "ADD",
      "path": "7"
    },
    "11456": {
      "op": "MSTORE"
    },
    "11457": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11459": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11461": {
      "op": "DUP3"
    },
    "11462": {
      "op": "ADD"
    },
    "11463": {
      "op": "MSTORE"
    },
    "11464": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11497": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11499": {
      "op": "DUP3"
    },
    "11500": {
      "op": "ADD"
    },
    "11501": {
      "op": "MSTORE"
    },
    "11502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11504": {
      "op": "ADD"
    },
    "11505": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB46"
    },
    "11508": {
      "op": "JUMP"
    },
    "11509": {
      "fn": "ERC721._mint",
      "offset": [
        9283,
        9341
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11510": {
      "fn": "ERC721._mint",
      "offset": [
        9352,
        9397
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 152,
      "value": "0x2D01"
    },
    "11513": {
      "fn": "ERC721._mint",
      "offset": [
        9381,
        9382
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11515": {
      "fn": "ERC721._mint",
      "offset": [
        9385,
        9387
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11516": {
      "fn": "ERC721._mint",
      "offset": [
        9389,
        9396
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11517": {
      "fn": "ERC721._mint",
      "offset": [
        9352,
        9372
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26A6"
    },
    "11520": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9352,
        9397
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11521": {
      "fn": "ERC721._mint",
      "offset": [
        9352,
        9397
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11528": {
      "op": "SHL"
    },
    "11529": {
      "op": "SUB"
    },
    "11530": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 153
    },
    "11531": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "AND",
      "path": "7"
    },
    "11532": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11534": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11535": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11536": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11537": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9417
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "11539": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "11541": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11542": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11544": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11545": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "11546": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11547": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "11548": {
      "fn": "ERC721._mint",
      "offset": [
        9425,
        9426
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "11550": {
      "fn": "ERC721._mint",
      "offset": [
        9425,
        9426
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "11551": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9421
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11552": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D2A"
    },
    "11555": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11556": {
      "fn": "ERC721._mint",
      "offset": [
        9425,
        9426
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11557": {
      "fn": "ERC721._mint",
      "offset": [
        9425,
        9426
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11558": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34F7"
    },
    "11561": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9408,
        9426
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11562": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11563": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11564": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11565": {
      "fn": "ERC721._mint",
      "offset": [
        9408,
        9426
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "11566": {
      "op": "POP"
    },
    "11567": {
      "op": "POP"
    },
    "11568": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 154,
      "value": "0x0"
    },
    "11570": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11571": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11572": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11573": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9443
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "11575": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "11577": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11578": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11580": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11581": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11582": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "11583": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11584": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "11585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11591": {
      "op": "SHL"
    },
    "11592": {
      "op": "SUB"
    },
    "11593": {
      "op": "NOT"
    },
    "11594": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "AND",
      "path": "7"
    },
    "11595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11601": {
      "op": "SHL"
    },
    "11602": {
      "op": "SUB"
    },
    "11603": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "DUP7",
      "path": "7"
    },
    "11604": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "AND",
      "path": "7"
    },
    "11605": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11606": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11607": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "OR",
      "path": "7"
    },
    "11608": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11609": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11610": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9457
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "11611": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 155
    },
    "11612": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11613": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11614": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "11615": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11616": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11649": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11650": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11651": {
      "fn": "ERC721._mint",
      "offset": [
        9436,
        9452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11652": {
      "fn": "ERC721._mint",
      "offset": [
        9473,
        9506
      ],
      "op": "LOG4",
      "path": "7"
    },
    "11653": {
      "fn": "ERC721._mint",
      "offset": [
        9141,
        9513
      ],
      "op": "POP",
      "path": "7"
    },
    "11654": {
      "fn": "ERC721._mint",
      "offset": [
        9141,
        9513
      ],
      "op": "POP",
      "path": "7"
    },
    "11655": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9141,
        9513
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11656": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11657": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7096,
        7108
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "11659": {
      "branch": 200,
      "fn": "Address._verifyCallResult",
      "offset": [
        7124,
        7131
      ],
      "op": "DUP4",
      "path": "13"
    },
    "11660": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11661": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D97"
    },
    "11664": {
      "branch": 200,
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11665": {
      "op": "POP"
    },
    "11666": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7154,
        7164
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 156
    },
    "11667": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x22DB"
    },
    "11670": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11671": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11672": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11673": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11674": {
      "branch": 201,
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7286
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11675": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DA7"
    },
    "11678": {
      "branch": 201,
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11679": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7459,
        7469
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11680": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7453,
        7470
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11681": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7519,
        7534
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11682": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7506,
        7516
      ],
      "op": "DUP5",
      "path": "13"
    },
    "11683": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7502,
        7504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "11685": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7498,
        7517
      ],
      "op": "ADD",
      "path": "13"
    },
    "11686": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7491,
        7535
      ],
      "op": "REVERT",
      "path": "13"
    },
    "11687": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11688": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7598,
        7610
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 157
    },
    "11689": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11691": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11698": {
      "op": "SHL"
    },
    "11699": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11700": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11701": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11703": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "ADD",
      "path": "13"
    },
    "11704": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB46"
    },
    "11707": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11708": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11709": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2EE5"
    },
    "11712": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7591,
        7611
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11713": {
      "op": "JUMPDEST"
    },
    "11714": {
      "op": "DUP3"
    },
    "11715": {
      "op": "DUP1"
    },
    "11716": {
      "op": "SLOAD"
    },
    "11717": {
      "op": "PUSH2",
      "value": "0x2DCD"
    },
    "11720": {
      "op": "SWAP1"
    },
    "11721": {
      "op": "PUSH2",
      "value": "0x33DB"
    },
    "11724": {
      "jump": "i",
      "op": "JUMP"
    },
    "11725": {
      "op": "JUMPDEST"
    },
    "11726": {
      "op": "SWAP1"
    },
    "11727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11729": {
      "op": "MSTORE"
    },
    "11730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11734": {
      "op": "KECCAK256"
    },
    "11735": {
      "op": "SWAP1"
    },
    "11736": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11738": {
      "op": "ADD"
    },
    "11739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11741": {
      "op": "SWAP1"
    },
    "11742": {
      "op": "DIV"
    },
    "11743": {
      "op": "DUP2"
    },
    "11744": {
      "op": "ADD"
    },
    "11745": {
      "op": "SWAP3"
    },
    "11746": {
      "op": "DUP3"
    },
    "11747": {
      "op": "PUSH2",
      "value": "0x2DEF"
    },
    "11750": {
      "op": "JUMPI"
    },
    "11751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11753": {
      "op": "DUP6"
    },
    "11754": {
      "op": "SSTORE"
    },
    "11755": {
      "op": "PUSH2",
      "value": "0x2E35"
    },
    "11758": {
      "op": "JUMP"
    },
    "11759": {
      "op": "JUMPDEST"
    },
    "11760": {
      "op": "DUP3"
    },
    "11761": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11763": {
      "op": "LT"
    },
    "11764": {
      "op": "PUSH2",
      "value": "0x2E08"
    },
    "11767": {
      "op": "JUMPI"
    },
    "11768": {
      "op": "DUP3"
    },
    "11769": {
      "op": "DUP1"
    },
    "11770": {
      "op": "ADD"
    },
    "11771": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11773": {
      "op": "NOT"
    },
    "11774": {
      "op": "DUP3"
    },
    "11775": {
      "op": "CALLDATALOAD"
    },
    "11776": {
      "op": "AND"
    },
    "11777": {
      "op": "OR"
    },
    "11778": {
      "op": "DUP6"
    },
    "11779": {
      "op": "SSTORE"
    },
    "11780": {
      "op": "PUSH2",
      "value": "0x2E35"
    },
    "11783": {
      "op": "JUMP"
    },
    "11784": {
      "op": "JUMPDEST"
    },
    "11785": {
      "op": "DUP3"
    },
    "11786": {
      "op": "DUP1"
    },
    "11787": {
      "op": "ADD"
    },
    "11788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11790": {
      "op": "ADD"
    },
    "11791": {
      "op": "DUP6"
    },
    "11792": {
      "op": "SSTORE"
    },
    "11793": {
      "op": "DUP3"
    },
    "11794": {
      "op": "ISZERO"
    },
    "11795": {
      "op": "PUSH2",
      "value": "0x2E35"
    },
    "11798": {
      "op": "JUMPI"
    },
    "11799": {
      "op": "SWAP2"
    },
    "11800": {
      "op": "DUP3"
    },
    "11801": {
      "op": "ADD"
    },
    "11802": {
      "op": "JUMPDEST"
    },
    "11803": {
      "op": "DUP3"
    },
    "11804": {
      "op": "DUP2"
    },
    "11805": {
      "op": "GT"
    },
    "11806": {
      "op": "ISZERO"
    },
    "11807": {
      "op": "PUSH2",
      "value": "0x2E35"
    },
    "11810": {
      "op": "JUMPI"
    },
    "11811": {
      "op": "DUP3"
    },
    "11812": {
      "op": "CALLDATALOAD"
    },
    "11813": {
      "op": "DUP3"
    },
    "11814": {
      "op": "SSTORE"
    },
    "11815": {
      "op": "SWAP2"
    },
    "11816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11818": {
      "op": "ADD"
    },
    "11819": {
      "op": "SWAP2"
    },
    "11820": {
      "op": "SWAP1"
    },
    "11821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11823": {
      "op": "ADD"
    },
    "11824": {
      "op": "SWAP1"
    },
    "11825": {
      "op": "PUSH2",
      "value": "0x2E1A"
    },
    "11828": {
      "op": "JUMP"
    },
    "11829": {
      "op": "JUMPDEST"
    },
    "11830": {
      "op": "POP"
    },
    "11831": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "11834": {
      "op": "SWAP3"
    },
    "11835": {
      "op": "SWAP2"
    },
    "11836": {
      "op": "POP"
    },
    "11837": {
      "op": "PUSH2",
      "value": "0x2E45"
    },
    "11840": {
      "jump": "i",
      "op": "JUMP"
    },
    "11841": {
      "op": "JUMPDEST"
    },
    "11842": {
      "op": "POP"
    },
    "11843": {
      "op": "SWAP1"
    },
    "11844": {
      "jump": "o",
      "op": "JUMP"
    },
    "11845": {
      "op": "JUMPDEST"
    },
    "11846": {
      "op": "JUMPDEST"
    },
    "11847": {
      "op": "DUP1"
    },
    "11848": {
      "op": "DUP3"
    },
    "11849": {
      "op": "GT"
    },
    "11850": {
      "op": "ISZERO"
    },
    "11851": {
      "op": "PUSH2",
      "value": "0x2E41"
    },
    "11854": {
      "op": "JUMPI"
    },
    "11855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11857": {
      "op": "DUP2"
    },
    "11858": {
      "op": "SSTORE"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11861": {
      "op": "ADD"
    },
    "11862": {
      "op": "PUSH2",
      "value": "0x2E46"
    },
    "11865": {
      "op": "JUMP"
    },
    "11866": {
      "op": "JUMPDEST"
    },
    "11867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11873": {
      "op": "SHL"
    },
    "11874": {
      "op": "SUB"
    },
    "11875": {
      "op": "NOT"
    },
    "11876": {
      "op": "DUP2"
    },
    "11877": {
      "op": "AND"
    },
    "11878": {
      "op": "DUP2"
    },
    "11879": {
      "op": "EQ"
    },
    "11880": {
      "op": "PUSH2",
      "value": "0x1D9F"
    },
    "11883": {
      "op": "JUMPI"
    },
    "11884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11886": {
      "op": "DUP1"
    },
    "11887": {
      "op": "REVERT"
    },
    "11888": {
      "op": "JUMPDEST"
    },
    "11889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11893": {
      "op": "DUP3"
    },
    "11894": {
      "op": "DUP5"
    },
    "11895": {
      "op": "SUB"
    },
    "11896": {
      "op": "SLT"
    },
    "11897": {
      "op": "ISZERO"
    },
    "11898": {
      "op": "PUSH2",
      "value": "0x2E82"
    },
    "11901": {
      "op": "JUMPI"
    },
    "11902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11904": {
      "op": "DUP1"
    },
    "11905": {
      "op": "REVERT"
    },
    "11906": {
      "op": "JUMPDEST"
    },
    "11907": {
      "op": "DUP2"
    },
    "11908": {
      "op": "CALLDATALOAD"
    },
    "11909": {
      "op": "PUSH2",
      "value": "0x22DB"
    },
    "11912": {
      "op": "DUP2"
    },
    "11913": {
      "op": "PUSH2",
      "value": "0x2E5A"
    },
    "11916": {
      "jump": "i",
      "op": "JUMP"
    },
    "11917": {
      "op": "JUMPDEST"
    },
    "11918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11920": {
      "op": "JUMPDEST"
    },
    "11921": {
      "op": "DUP4"
    },
    "11922": {
      "op": "DUP2"
    },
    "11923": {
      "op": "LT"
    },
    "11924": {
      "op": "ISZERO"
    },
    "11925": {
      "op": "PUSH2",
      "value": "0x2EA8"
    },
    "11928": {
      "op": "JUMPI"
    },
    "11929": {
      "op": "DUP2"
    },
    "11930": {
      "op": "DUP2"
    },
    "11931": {
      "op": "ADD"
    },
    "11932": {
      "op": "MLOAD"
    },
    "11933": {
      "op": "DUP4"
    },
    "11934": {
      "op": "DUP3"
    },
    "11935": {
      "op": "ADD"
    },
    "11936": {
      "op": "MSTORE"
    },
    "11937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11939": {
      "op": "ADD"
    },
    "11940": {
      "op": "PUSH2",
      "value": "0x2E90"
    },
    "11943": {
      "op": "JUMP"
    },
    "11944": {
      "op": "JUMPDEST"
    },
    "11945": {
      "op": "DUP4"
    },
    "11946": {
      "op": "DUP2"
    },
    "11947": {
      "op": "GT"
    },
    "11948": {
      "op": "ISZERO"
    },
    "11949": {
      "op": "PUSH2",
      "value": "0xF06"
    },
    "11952": {
      "op": "JUMPI"
    },
    "11953": {
      "op": "POP"
    },
    "11954": {
      "op": "POP"
    },
    "11955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11957": {
      "op": "SWAP2"
    },
    "11958": {
      "op": "ADD"
    },
    "11959": {
      "op": "MSTORE"
    },
    "11960": {
      "jump": "o",
      "op": "JUMP"
    },
    "11961": {
      "op": "JUMPDEST"
    },
    "11962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11964": {
      "op": "DUP2"
    },
    "11965": {
      "op": "MLOAD"
    },
    "11966": {
      "op": "DUP1"
    },
    "11967": {
      "op": "DUP5"
    },
    "11968": {
      "op": "MSTORE"
    },
    "11969": {
      "op": "PUSH2",
      "value": "0x2ED1"
    },
    "11972": {
      "op": "DUP2"
    },
    "11973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11975": {
      "op": "DUP7"
    },
    "11976": {
      "op": "ADD"
    },
    "11977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11979": {
      "op": "DUP7"
    },
    "11980": {
      "op": "ADD"
    },
    "11981": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "11984": {
      "jump": "i",
      "op": "JUMP"
    },
    "11985": {
      "op": "JUMPDEST"
    },
    "11986": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11988": {
      "op": "ADD"
    },
    "11989": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11991": {
      "op": "NOT"
    },
    "11992": {
      "op": "AND"
    },
    "11993": {
      "op": "SWAP3"
    },
    "11994": {
      "op": "SWAP1"
    },
    "11995": {
      "op": "SWAP3"
    },
    "11996": {
      "op": "ADD"
    },
    "11997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11999": {
      "op": "ADD"
    },
    "12000": {
      "op": "SWAP3"
    },
    "12001": {
      "op": "SWAP2"
    },
    "12002": {
      "op": "POP"
    },
    "12003": {
      "op": "POP"
    },
    "12004": {
      "jump": "o",
      "op": "JUMP"
    },
    "12005": {
      "op": "JUMPDEST"
    },
    "12006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12008": {
      "op": "DUP2"
    },
    "12009": {
      "op": "MSTORE"
    },
    "12010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12012": {
      "op": "PUSH2",
      "value": "0x22DB"
    },
    "12015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12017": {
      "op": "DUP4"
    },
    "12018": {
      "op": "ADD"
    },
    "12019": {
      "op": "DUP5"
    },
    "12020": {
      "op": "PUSH2",
      "value": "0x2EB9"
    },
    "12023": {
      "jump": "i",
      "op": "JUMP"
    },
    "12024": {
      "op": "JUMPDEST"
    },
    "12025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12029": {
      "op": "DUP3"
    },
    "12030": {
      "op": "DUP5"
    },
    "12031": {
      "op": "SUB"
    },
    "12032": {
      "op": "SLT"
    },
    "12033": {
      "op": "ISZERO"
    },
    "12034": {
      "op": "PUSH2",
      "value": "0x2F0A"
    },
    "12037": {
      "op": "JUMPI"
    },
    "12038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12040": {
      "op": "DUP1"
    },
    "12041": {
      "op": "REVERT"
    },
    "12042": {
      "op": "JUMPDEST"
    },
    "12043": {
      "op": "POP"
    },
    "12044": {
      "op": "CALLDATALOAD"
    },
    "12045": {
      "op": "SWAP2"
    },
    "12046": {
      "op": "SWAP1"
    },
    "12047": {
      "op": "POP"
    },
    "12048": {
      "jump": "o",
      "op": "JUMP"
    },
    "12049": {
      "op": "JUMPDEST"
    },
    "12050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12056": {
      "op": "SHL"
    },
    "12057": {
      "op": "SUB"
    },
    "12058": {
      "op": "DUP2"
    },
    "12059": {
      "op": "AND"
    },
    "12060": {
      "op": "DUP2"
    },
    "12061": {
      "op": "EQ"
    },
    "12062": {
      "op": "PUSH2",
      "value": "0x1D9F"
    },
    "12065": {
      "op": "JUMPI"
    },
    "12066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12068": {
      "op": "DUP1"
    },
    "12069": {
      "op": "REVERT"
    },
    "12070": {
      "op": "JUMPDEST"
    },
    "12071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12073": {
      "op": "DUP1"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12076": {
      "op": "DUP4"
    },
    "12077": {
      "op": "DUP6"
    },
    "12078": {
      "op": "SUB"
    },
    "12079": {
      "op": "SLT"
    },
    "12080": {
      "op": "ISZERO"
    },
    "12081": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "12084": {
      "op": "JUMPI"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12087": {
      "op": "DUP1"
    },
    "12088": {
      "op": "REVERT"
    },
    "12089": {
      "op": "JUMPDEST"
    },
    "12090": {
      "op": "DUP3"
    },
    "12091": {
      "op": "CALLDATALOAD"
    },
    "12092": {
      "op": "PUSH2",
      "value": "0x2F44"
    },
    "12095": {
      "op": "DUP2"
    },
    "12096": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "12099": {
      "jump": "i",
      "op": "JUMP"
    },
    "12100": {
      "op": "JUMPDEST"
    },
    "12101": {
      "op": "SWAP5"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12104": {
      "op": "SWAP4"
    },
    "12105": {
      "op": "SWAP1"
    },
    "12106": {
      "op": "SWAP4"
    },
    "12107": {
      "op": "ADD"
    },
    "12108": {
      "op": "CALLDATALOAD"
    },
    "12109": {
      "op": "SWAP4"
    },
    "12110": {
      "op": "POP"
    },
    "12111": {
      "op": "POP"
    },
    "12112": {
      "op": "POP"
    },
    "12113": {
      "jump": "o",
      "op": "JUMP"
    },
    "12114": {
      "op": "JUMPDEST"
    },
    "12115": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12122": {
      "op": "SHL"
    },
    "12123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12125": {
      "op": "MSTORE"
    },
    "12126": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12128": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12130": {
      "op": "MSTORE"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12135": {
      "op": "REVERT"
    },
    "12136": {
      "op": "JUMPDEST"
    },
    "12137": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12139": {
      "op": "MLOAD"
    },
    "12140": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12142": {
      "op": "DUP3"
    },
    "12143": {
      "op": "ADD"
    },
    "12144": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12146": {
      "op": "NOT"
    },
    "12147": {
      "op": "AND"
    },
    "12148": {
      "op": "DUP2"
    },
    "12149": {
      "op": "ADD"
    },
    "12150": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12159": {
      "op": "DUP2"
    },
    "12160": {
      "op": "GT"
    },
    "12161": {
      "op": "DUP3"
    },
    "12162": {
      "op": "DUP3"
    },
    "12163": {
      "op": "LT"
    },
    "12164": {
      "op": "OR"
    },
    "12165": {
      "op": "ISZERO"
    },
    "12166": {
      "op": "PUSH2",
      "value": "0x2F91"
    },
    "12169": {
      "op": "JUMPI"
    },
    "12170": {
      "op": "PUSH2",
      "value": "0x2F91"
    },
    "12173": {
      "op": "PUSH2",
      "value": "0x2F52"
    },
    "12176": {
      "jump": "i",
      "op": "JUMP"
    },
    "12177": {
      "op": "JUMPDEST"
    },
    "12178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12180": {
      "op": "MSTORE"
    },
    "12181": {
      "op": "SWAP2"
    },
    "12182": {
      "op": "SWAP1"
    },
    "12183": {
      "op": "POP"
    },
    "12184": {
      "jump": "o",
      "op": "JUMP"
    },
    "12185": {
      "op": "JUMPDEST"
    },
    "12186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12188": {
      "op": "DUP3"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12191": {
      "op": "DUP4"
    },
    "12192": {
      "op": "ADD"
    },
    "12193": {
      "op": "SLT"
    },
    "12194": {
      "op": "PUSH2",
      "value": "0x2FAA"
    },
    "12197": {
      "op": "JUMPI"
    },
    "12198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12200": {
      "op": "DUP1"
    },
    "12201": {
      "op": "REVERT"
    },
    "12202": {
      "op": "JUMPDEST"
    },
    "12203": {
      "op": "DUP2"
    },
    "12204": {
      "op": "CALLDATALOAD"
    },
    "12205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12207": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12216": {
      "op": "DUP3"
    },
    "12217": {
      "op": "GT"
    },
    "12218": {
      "op": "ISZERO"
    },
    "12219": {
      "op": "PUSH2",
      "value": "0x2FC6"
    },
    "12222": {
      "op": "JUMPI"
    },
    "12223": {
      "op": "PUSH2",
      "value": "0x2FC6"
    },
    "12226": {
      "op": "PUSH2",
      "value": "0x2F52"
    },
    "12229": {
      "jump": "i",
      "op": "JUMP"
    },
    "12230": {
      "op": "JUMPDEST"
    },
    "12231": {
      "op": "DUP2"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12234": {
      "op": "SHL"
    },
    "12235": {
      "op": "PUSH2",
      "value": "0x2FD5"
    },
    "12238": {
      "op": "DUP3"
    },
    "12239": {
      "op": "DUP3"
    },
    "12240": {
      "op": "ADD"
    },
    "12241": {
      "op": "PUSH2",
      "value": "0x2F68"
    },
    "12244": {
      "jump": "i",
      "op": "JUMP"
    },
    "12245": {
      "op": "JUMPDEST"
    },
    "12246": {
      "op": "SWAP3"
    },
    "12247": {
      "op": "DUP4"
    },
    "12248": {
      "op": "MSTORE"
    },
    "12249": {
      "op": "DUP5"
    },
    "12250": {
      "op": "DUP2"
    },
    "12251": {
      "op": "ADD"
    },
    "12252": {
      "op": "DUP3"
    },
    "12253": {
      "op": "ADD"
    },
    "12254": {
      "op": "SWAP3"
    },
    "12255": {
      "op": "DUP3"
    },
    "12256": {
      "op": "DUP2"
    },
    "12257": {
      "op": "ADD"
    },
    "12258": {
      "op": "SWAP1"
    },
    "12259": {
      "op": "DUP8"
    },
    "12260": {
      "op": "DUP6"
    },
    "12261": {
      "op": "GT"
    },
    "12262": {
      "op": "ISZERO"
    },
    "12263": {
      "op": "PUSH2",
      "value": "0x2FEF"
    },
    "12266": {
      "op": "JUMPI"
    },
    "12267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12269": {
      "op": "DUP1"
    },
    "12270": {
      "op": "REVERT"
    },
    "12271": {
      "op": "JUMPDEST"
    },
    "12272": {
      "op": "DUP4"
    },
    "12273": {
      "op": "DUP8"
    },
    "12274": {
      "op": "ADD"
    },
    "12275": {
      "op": "SWAP3"
    },
    "12276": {
      "op": "POP"
    },
    "12277": {
      "op": "JUMPDEST"
    },
    "12278": {
      "op": "DUP5"
    },
    "12279": {
      "op": "DUP4"
    },
    "12280": {
      "op": "LT"
    },
    "12281": {
      "op": "ISZERO"
    },
    "12282": {
      "op": "PUSH2",
      "value": "0x2C3E"
    },
    "12285": {
      "op": "JUMPI"
    },
    "12286": {
      "op": "DUP3"
    },
    "12287": {
      "op": "CALLDATALOAD"
    },
    "12288": {
      "op": "DUP3"
    },
    "12289": {
      "op": "MSTORE"
    },
    "12290": {
      "op": "SWAP2"
    },
    "12291": {
      "op": "DUP4"
    },
    "12292": {
      "op": "ADD"
    },
    "12293": {
      "op": "SWAP2"
    },
    "12294": {
      "op": "SWAP1"
    },
    "12295": {
      "op": "DUP4"
    },
    "12296": {
      "op": "ADD"
    },
    "12297": {
      "op": "SWAP1"
    },
    "12298": {
      "op": "PUSH2",
      "value": "0x2FF5"
    },
    "12301": {
      "op": "JUMP"
    },
    "12302": {
      "op": "JUMPDEST"
    },
    "12303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12305": {
      "op": "DUP1"
    },
    "12306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12310": {
      "op": "DUP5"
    },
    "12311": {
      "op": "DUP7"
    },
    "12312": {
      "op": "SUB"
    },
    "12313": {
      "op": "SLT"
    },
    "12314": {
      "op": "ISZERO"
    },
    "12315": {
      "op": "PUSH2",
      "value": "0x3023"
    },
    "12318": {
      "op": "JUMPI"
    },
    "12319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12321": {
      "op": "DUP1"
    },
    "12322": {
      "op": "REVERT"
    },
    "12323": {
      "op": "JUMPDEST"
    },
    "12324": {
      "op": "DUP4"
    },
    "12325": {
      "op": "CALLDATALOAD"
    },
    "12326": {
      "op": "SWAP3"
    },
    "12327": {
      "op": "POP"
    },
    "12328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12330": {
      "op": "DUP5"
    },
    "12331": {
      "op": "ADD"
    },
    "12332": {
      "op": "CALLDATALOAD"
    },
    "12333": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12342": {
      "op": "DUP1"
    },
    "12343": {
      "op": "DUP3"
    },
    "12344": {
      "op": "GT"
    },
    "12345": {
      "op": "ISZERO"
    },
    "12346": {
      "op": "PUSH2",
      "value": "0x3042"
    },
    "12349": {
      "op": "JUMPI"
    },
    "12350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12352": {
      "op": "DUP1"
    },
    "12353": {
      "op": "REVERT"
    },
    "12354": {
      "op": "JUMPDEST"
    },
    "12355": {
      "op": "PUSH2",
      "value": "0x304E"
    },
    "12358": {
      "op": "DUP8"
    },
    "12359": {
      "op": "DUP4"
    },
    "12360": {
      "op": "DUP9"
    },
    "12361": {
      "op": "ADD"
    },
    "12362": {
      "op": "PUSH2",
      "value": "0x2F99"
    },
    "12365": {
      "jump": "i",
      "op": "JUMP"
    },
    "12366": {
      "op": "JUMPDEST"
    },
    "12367": {
      "op": "SWAP4"
    },
    "12368": {
      "op": "POP"
    },
    "12369": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12371": {
      "op": "DUP7"
    },
    "12372": {
      "op": "ADD"
    },
    "12373": {
      "op": "CALLDATALOAD"
    },
    "12374": {
      "op": "SWAP2"
    },
    "12375": {
      "op": "POP"
    },
    "12376": {
      "op": "DUP1"
    },
    "12377": {
      "op": "DUP3"
    },
    "12378": {
      "op": "GT"
    },
    "12379": {
      "op": "ISZERO"
    },
    "12380": {
      "op": "PUSH2",
      "value": "0x3064"
    },
    "12383": {
      "op": "JUMPI"
    },
    "12384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12386": {
      "op": "DUP1"
    },
    "12387": {
      "op": "REVERT"
    },
    "12388": {
      "op": "JUMPDEST"
    },
    "12389": {
      "op": "POP"
    },
    "12390": {
      "op": "PUSH2",
      "value": "0x3071"
    },
    "12393": {
      "op": "DUP7"
    },
    "12394": {
      "op": "DUP3"
    },
    "12395": {
      "op": "DUP8"
    },
    "12396": {
      "op": "ADD"
    },
    "12397": {
      "op": "PUSH2",
      "value": "0x2F99"
    },
    "12400": {
      "jump": "i",
      "op": "JUMP"
    },
    "12401": {
      "op": "JUMPDEST"
    },
    "12402": {
      "op": "SWAP2"
    },
    "12403": {
      "op": "POP"
    },
    "12404": {
      "op": "POP"
    },
    "12405": {
      "op": "SWAP3"
    },
    "12406": {
      "op": "POP"
    },
    "12407": {
      "op": "SWAP3"
    },
    "12408": {
      "op": "POP"
    },
    "12409": {
      "op": "SWAP3"
    },
    "12410": {
      "jump": "o",
      "op": "JUMP"
    },
    "12411": {
      "op": "JUMPDEST"
    },
    "12412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12414": {
      "op": "DUP1"
    },
    "12415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12417": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12419": {
      "op": "DUP5"
    },
    "12420": {
      "op": "DUP7"
    },
    "12421": {
      "op": "SUB"
    },
    "12422": {
      "op": "SLT"
    },
    "12423": {
      "op": "ISZERO"
    },
    "12424": {
      "op": "PUSH2",
      "value": "0x3090"
    },
    "12427": {
      "op": "JUMPI"
    },
    "12428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12430": {
      "op": "DUP1"
    },
    "12431": {
      "op": "REVERT"
    },
    "12432": {
      "op": "JUMPDEST"
    },
    "12433": {
      "op": "DUP4"
    },
    "12434": {
      "op": "CALLDATALOAD"
    },
    "12435": {
      "op": "PUSH2",
      "value": "0x309B"
    },
    "12438": {
      "op": "DUP2"
    },
    "12439": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "12442": {
      "jump": "i",
      "op": "JUMP"
    },
    "12443": {
      "op": "JUMPDEST"
    },
    "12444": {
      "op": "SWAP3"
    },
    "12445": {
      "op": "POP"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12448": {
      "op": "DUP5"
    },
    "12449": {
      "op": "ADD"
    },
    "12450": {
      "op": "CALLDATALOAD"
    },
    "12451": {
      "op": "PUSH2",
      "value": "0x30AB"
    },
    "12454": {
      "op": "DUP2"
    },
    "12455": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "12458": {
      "jump": "i",
      "op": "JUMP"
    },
    "12459": {
      "op": "JUMPDEST"
    },
    "12460": {
      "op": "SWAP3"
    },
    "12461": {
      "op": "SWAP6"
    },
    "12462": {
      "op": "SWAP3"
    },
    "12463": {
      "op": "SWAP5"
    },
    "12464": {
      "op": "POP"
    },
    "12465": {
      "op": "POP"
    },
    "12466": {
      "op": "POP"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12469": {
      "op": "SWAP2"
    },
    "12470": {
      "op": "SWAP1"
    },
    "12471": {
      "op": "SWAP2"
    },
    "12472": {
      "op": "ADD"
    },
    "12473": {
      "op": "CALLDATALOAD"
    },
    "12474": {
      "op": "SWAP1"
    },
    "12475": {
      "jump": "o",
      "op": "JUMP"
    },
    "12476": {
      "op": "JUMPDEST"
    },
    "12477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12479": {
      "op": "DUP1"
    },
    "12480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12484": {
      "op": "DUP5"
    },
    "12485": {
      "op": "DUP7"
    },
    "12486": {
      "op": "SUB"
    },
    "12487": {
      "op": "SLT"
    },
    "12488": {
      "op": "ISZERO"
    },
    "12489": {
      "op": "PUSH2",
      "value": "0x30D1"
    },
    "12492": {
      "op": "JUMPI"
    },
    "12493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12495": {
      "op": "DUP1"
    },
    "12496": {
      "op": "REVERT"
    },
    "12497": {
      "op": "JUMPDEST"
    },
    "12498": {
      "op": "DUP4"
    },
    "12499": {
      "op": "CALLDATALOAD"
    },
    "12500": {
      "op": "PUSH2",
      "value": "0x30DC"
    },
    "12503": {
      "op": "DUP2"
    },
    "12504": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "12507": {
      "jump": "i",
      "op": "JUMP"
    },
    "12508": {
      "op": "JUMPDEST"
    },
    "12509": {
      "op": "SWAP3"
    },
    "12510": {
      "op": "POP"
    },
    "12511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12513": {
      "op": "DUP5"
    },
    "12514": {
      "op": "ADD"
    },
    "12515": {
      "op": "CALLDATALOAD"
    },
    "12516": {
      "op": "SWAP2"
    },
    "12517": {
      "op": "POP"
    },
    "12518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12520": {
      "op": "DUP5"
    },
    "12521": {
      "op": "ADD"
    },
    "12522": {
      "op": "CALLDATALOAD"
    },
    "12523": {
      "op": "PUSH2",
      "value": "0x30F3"
    },
    "12526": {
      "op": "DUP2"
    },
    "12527": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "12530": {
      "jump": "i",
      "op": "JUMP"
    },
    "12531": {
      "op": "JUMPDEST"
    },
    "12532": {
      "op": "DUP1"
    },
    "12533": {
      "op": "SWAP2"
    },
    "12534": {
      "op": "POP"
    },
    "12535": {
      "op": "POP"
    },
    "12536": {
      "op": "SWAP3"
    },
    "12537": {
      "op": "POP"
    },
    "12538": {
      "op": "SWAP3"
    },
    "12539": {
      "op": "POP"
    },
    "12540": {
      "op": "SWAP3"
    },
    "12541": {
      "jump": "o",
      "op": "JUMP"
    },
    "12542": {
      "op": "JUMPDEST"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12545": {
      "op": "DUP1"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12548": {
      "op": "DUP4"
    },
    "12549": {
      "op": "DUP6"
    },
    "12550": {
      "op": "SUB"
    },
    "12551": {
      "op": "SLT"
    },
    "12552": {
      "op": "ISZERO"
    },
    "12553": {
      "op": "PUSH2",
      "value": "0x3111"
    },
    "12556": {
      "op": "JUMPI"
    },
    "12557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12559": {
      "op": "DUP1"
    },
    "12560": {
      "op": "REVERT"
    },
    "12561": {
      "op": "JUMPDEST"
    },
    "12562": {
      "op": "DUP3"
    },
    "12563": {
      "op": "CALLDATALOAD"
    },
    "12564": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12573": {
      "op": "DUP1"
    },
    "12574": {
      "op": "DUP3"
    },
    "12575": {
      "op": "GT"
    },
    "12576": {
      "op": "ISZERO"
    },
    "12577": {
      "op": "PUSH2",
      "value": "0x3129"
    },
    "12580": {
      "op": "JUMPI"
    },
    "12581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12583": {
      "op": "DUP1"
    },
    "12584": {
      "op": "REVERT"
    },
    "12585": {
      "op": "JUMPDEST"
    },
    "12586": {
      "op": "DUP2"
    },
    "12587": {
      "op": "DUP6"
    },
    "12588": {
      "op": "ADD"
    },
    "12589": {
      "op": "SWAP2"
    },
    "12590": {
      "op": "POP"
    },
    "12591": {
      "op": "DUP6"
    },
    "12592": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12594": {
      "op": "DUP4"
    },
    "12595": {
      "op": "ADD"
    },
    "12596": {
      "op": "SLT"
    },
    "12597": {
      "op": "PUSH2",
      "value": "0x313D"
    },
    "12600": {
      "op": "JUMPI"
    },
    "12601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12603": {
      "op": "DUP1"
    },
    "12604": {
      "op": "REVERT"
    },
    "12605": {
      "op": "JUMPDEST"
    },
    "12606": {
      "op": "DUP2"
    },
    "12607": {
      "op": "CALLDATALOAD"
    },
    "12608": {
      "op": "DUP2"
    },
    "12609": {
      "op": "DUP2"
    },
    "12610": {
      "op": "GT"
    },
    "12611": {
      "op": "ISZERO"
    },
    "12612": {
      "op": "PUSH2",
      "value": "0x314C"
    },
    "12615": {
      "op": "JUMPI"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12618": {
      "op": "DUP1"
    },
    "12619": {
      "op": "REVERT"
    },
    "12620": {
      "op": "JUMPDEST"
    },
    "12621": {
      "op": "DUP7"
    },
    "12622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12624": {
      "op": "DUP3"
    },
    "12625": {
      "op": "DUP6"
    },
    "12626": {
      "op": "ADD"
    },
    "12627": {
      "op": "ADD"
    },
    "12628": {
      "op": "GT"
    },
    "12629": {
      "op": "ISZERO"
    },
    "12630": {
      "op": "PUSH2",
      "value": "0x315E"
    },
    "12633": {
      "op": "JUMPI"
    },
    "12634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12636": {
      "op": "DUP1"
    },
    "12637": {
      "op": "REVERT"
    },
    "12638": {
      "op": "JUMPDEST"
    },
    "12639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12641": {
      "op": "SWAP3"
    },
    "12642": {
      "op": "SWAP1"
    },
    "12643": {
      "op": "SWAP3"
    },
    "12644": {
      "op": "ADD"
    },
    "12645": {
      "op": "SWAP7"
    },
    "12646": {
      "op": "SWAP2"
    },
    "12647": {
      "op": "SWAP6"
    },
    "12648": {
      "op": "POP"
    },
    "12649": {
      "op": "SWAP1"
    },
    "12650": {
      "op": "SWAP4"
    },
    "12651": {
      "op": "POP"
    },
    "12652": {
      "op": "POP"
    },
    "12653": {
      "op": "POP"
    },
    "12654": {
      "op": "POP"
    },
    "12655": {
      "jump": "o",
      "op": "JUMP"
    },
    "12656": {
      "op": "JUMPDEST"
    },
    "12657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12661": {
      "op": "DUP3"
    },
    "12662": {
      "op": "DUP5"
    },
    "12663": {
      "op": "SUB"
    },
    "12664": {
      "op": "SLT"
    },
    "12665": {
      "op": "ISZERO"
    },
    "12666": {
      "op": "PUSH2",
      "value": "0x3182"
    },
    "12669": {
      "op": "JUMPI"
    },
    "12670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12672": {
      "op": "DUP1"
    },
    "12673": {
      "op": "REVERT"
    },
    "12674": {
      "op": "JUMPDEST"
    },
    "12675": {
      "op": "DUP2"
    },
    "12676": {
      "op": "CALLDATALOAD"
    },
    "12677": {
      "op": "PUSH2",
      "value": "0x22DB"
    },
    "12680": {
      "op": "DUP2"
    },
    "12681": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "12684": {
      "jump": "i",
      "op": "JUMP"
    },
    "12685": {
      "op": "JUMPDEST"
    },
    "12686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12688": {
      "op": "DUP1"
    },
    "12689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12691": {
      "op": "DUP1"
    },
    "12692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12694": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12696": {
      "op": "DUP7"
    },
    "12697": {
      "op": "DUP9"
    },
    "12698": {
      "op": "SUB"
    },
    "12699": {
      "op": "SLT"
    },
    "12700": {
      "op": "ISZERO"
    },
    "12701": {
      "op": "PUSH2",
      "value": "0x31A5"
    },
    "12704": {
      "op": "JUMPI"
    },
    "12705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12707": {
      "op": "DUP1"
    },
    "12708": {
      "op": "REVERT"
    },
    "12709": {
      "op": "JUMPDEST"
    },
    "12710": {
      "op": "DUP6"
    },
    "12711": {
      "op": "CALLDATALOAD"
    },
    "12712": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12721": {
      "op": "DUP1"
    },
    "12722": {
      "op": "DUP3"
    },
    "12723": {
      "op": "GT"
    },
    "12724": {
      "op": "ISZERO"
    },
    "12725": {
      "op": "PUSH2",
      "value": "0x31BD"
    },
    "12728": {
      "op": "JUMPI"
    },
    "12729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12731": {
      "op": "DUP1"
    },
    "12732": {
      "op": "REVERT"
    },
    "12733": {
      "op": "JUMPDEST"
    },
    "12734": {
      "op": "DUP2"
    },
    "12735": {
      "op": "DUP9"
    },
    "12736": {
      "op": "ADD"
    },
    "12737": {
      "op": "SWAP2"
    },
    "12738": {
      "op": "POP"
    },
    "12739": {
      "op": "DUP9"
    },
    "12740": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12742": {
      "op": "DUP4"
    },
    "12743": {
      "op": "ADD"
    },
    "12744": {
      "op": "SLT"
    },
    "12745": {
      "op": "PUSH2",
      "value": "0x31D1"
    },
    "12748": {
      "op": "JUMPI"
    },
    "12749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12751": {
      "op": "DUP1"
    },
    "12752": {
      "op": "REVERT"
    },
    "12753": {
      "op": "JUMPDEST"
    },
    "12754": {
      "op": "DUP2"
    },
    "12755": {
      "op": "CALLDATALOAD"
    },
    "12756": {
      "op": "DUP2"
    },
    "12757": {
      "op": "DUP2"
    },
    "12758": {
      "op": "GT"
    },
    "12759": {
      "op": "ISZERO"
    },
    "12760": {
      "op": "PUSH2",
      "value": "0x31E0"
    },
    "12763": {
      "op": "JUMPI"
    },
    "12764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12766": {
      "op": "DUP1"
    },
    "12767": {
      "op": "REVERT"
    },
    "12768": {
      "op": "JUMPDEST"
    },
    "12769": {
      "op": "DUP10"
    },
    "12770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12772": {
      "op": "DUP3"
    },
    "12773": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12775": {
      "op": "SHL"
    },
    "12776": {
      "op": "DUP6"
    },
    "12777": {
      "op": "ADD"
    },
    "12778": {
      "op": "ADD"
    },
    "12779": {
      "op": "GT"
    },
    "12780": {
      "op": "ISZERO"
    },
    "12781": {
      "op": "PUSH2",
      "value": "0x31F5"
    },
    "12784": {
      "op": "JUMPI"
    },
    "12785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12787": {
      "op": "DUP1"
    },
    "12788": {
      "op": "REVERT"
    },
    "12789": {
      "op": "JUMPDEST"
    },
    "12790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12792": {
      "op": "SWAP3"
    },
    "12793": {
      "op": "DUP4"
    },
    "12794": {
      "op": "ADD"
    },
    "12795": {
      "op": "SWAP8"
    },
    "12796": {
      "op": "POP"
    },
    "12797": {
      "op": "SWAP6"
    },
    "12798": {
      "op": "POP"
    },
    "12799": {
      "op": "SWAP1"
    },
    "12800": {
      "op": "DUP8"
    },
    "12801": {
      "op": "ADD"
    },
    "12802": {
      "op": "CALLDATALOAD"
    },
    "12803": {
      "op": "SWAP4"
    },
    "12804": {
      "op": "POP"
    },
    "12805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12807": {
      "op": "DUP8"
    },
    "12808": {
      "op": "ADD"
    },
    "12809": {
      "op": "CALLDATALOAD"
    },
    "12810": {
      "op": "SWAP1"
    },
    "12811": {
      "op": "DUP1"
    },
    "12812": {
      "op": "DUP3"
    },
    "12813": {
      "op": "GT"
    },
    "12814": {
      "op": "ISZERO"
    },
    "12815": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "12818": {
      "op": "JUMPI"
    },
    "12819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12821": {
      "op": "DUP1"
    },
    "12822": {
      "op": "REVERT"
    },
    "12823": {
      "op": "JUMPDEST"
    },
    "12824": {
      "op": "PUSH2",
      "value": "0x3223"
    },
    "12827": {
      "op": "DUP10"
    },
    "12828": {
      "op": "DUP4"
    },
    "12829": {
      "op": "DUP11"
    },
    "12830": {
      "op": "ADD"
    },
    "12831": {
      "op": "PUSH2",
      "value": "0x2F99"
    },
    "12834": {
      "jump": "i",
      "op": "JUMP"
    },
    "12835": {
      "op": "JUMPDEST"
    },
    "12836": {
      "op": "SWAP4"
    },
    "12837": {
      "op": "POP"
    },
    "12838": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12840": {
      "op": "DUP9"
    },
    "12841": {
      "op": "ADD"
    },
    "12842": {
      "op": "CALLDATALOAD"
    },
    "12843": {
      "op": "SWAP2"
    },
    "12844": {
      "op": "POP"
    },
    "12845": {
      "op": "DUP1"
    },
    "12846": {
      "op": "DUP3"
    },
    "12847": {
      "op": "GT"
    },
    "12848": {
      "op": "ISZERO"
    },
    "12849": {
      "op": "PUSH2",
      "value": "0x3239"
    },
    "12852": {
      "op": "JUMPI"
    },
    "12853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12855": {
      "op": "DUP1"
    },
    "12856": {
      "op": "REVERT"
    },
    "12857": {
      "op": "JUMPDEST"
    },
    "12858": {
      "op": "POP"
    },
    "12859": {
      "op": "PUSH2",
      "value": "0x3246"
    },
    "12862": {
      "op": "DUP9"
    },
    "12863": {
      "op": "DUP3"
    },
    "12864": {
      "op": "DUP10"
    },
    "12865": {
      "op": "ADD"
    },
    "12866": {
      "op": "PUSH2",
      "value": "0x2F99"
    },
    "12869": {
      "jump": "i",
      "op": "JUMP"
    },
    "12870": {
      "op": "JUMPDEST"
    },
    "12871": {
      "op": "SWAP2"
    },
    "12872": {
      "op": "POP"
    },
    "12873": {
      "op": "POP"
    },
    "12874": {
      "op": "SWAP3"
    },
    "12875": {
      "op": "SWAP6"
    },
    "12876": {
      "op": "POP"
    },
    "12877": {
      "op": "SWAP3"
    },
    "12878": {
      "op": "SWAP6"
    },
    "12879": {
      "op": "SWAP1"
    },
    "12880": {
      "op": "SWAP4"
    },
    "12881": {
      "op": "POP"
    },
    "12882": {
      "jump": "o",
      "op": "JUMP"
    },
    "12883": {
      "op": "JUMPDEST"
    },
    "12884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12886": {
      "op": "DUP1"
    },
    "12887": {
      "op": "DUP3"
    },
    "12888": {
      "op": "MSTORE"
    },
    "12889": {
      "op": "DUP3"
    },
    "12890": {
      "op": "MLOAD"
    },
    "12891": {
      "op": "DUP3"
    },
    "12892": {
      "op": "DUP3"
    },
    "12893": {
      "op": "ADD"
    },
    "12894": {
      "op": "DUP2"
    },
    "12895": {
      "op": "SWAP1"
    },
    "12896": {
      "op": "MSTORE"
    },
    "12897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12899": {
      "op": "SWAP2"
    },
    "12900": {
      "op": "SWAP1"
    },
    "12901": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12903": {
      "op": "SWAP1"
    },
    "12904": {
      "op": "DUP2"
    },
    "12905": {
      "op": "DUP6"
    },
    "12906": {
      "op": "ADD"
    },
    "12907": {
      "op": "SWAP1"
    },
    "12908": {
      "op": "DUP7"
    },
    "12909": {
      "op": "DUP5"
    },
    "12910": {
      "op": "ADD"
    },
    "12911": {
      "op": "DUP6"
    },
    "12912": {
      "op": "JUMPDEST"
    },
    "12913": {
      "op": "DUP3"
    },
    "12914": {
      "op": "DUP2"
    },
    "12915": {
      "op": "LT"
    },
    "12916": {
      "op": "ISZERO"
    },
    "12917": {
      "op": "PUSH2",
      "value": "0x3295"
    },
    "12920": {
      "op": "JUMPI"
    },
    "12921": {
      "op": "DUP2"
    },
    "12922": {
      "op": "MLOAD"
    },
    "12923": {
      "op": "DUP1"
    },
    "12924": {
      "op": "MLOAD"
    },
    "12925": {
      "op": "DUP6"
    },
    "12926": {
      "op": "MSTORE"
    },
    "12927": {
      "op": "DUP7"
    },
    "12928": {
      "op": "ADD"
    },
    "12929": {
      "op": "MLOAD"
    },
    "12930": {
      "op": "DUP7"
    },
    "12931": {
      "op": "DUP6"
    },
    "12932": {
      "op": "ADD"
    },
    "12933": {
      "op": "MSTORE"
    },
    "12934": {
      "op": "SWAP3"
    },
    "12935": {
      "op": "DUP5"
    },
    "12936": {
      "op": "ADD"
    },
    "12937": {
      "op": "SWAP3"
    },
    "12938": {
      "op": "SWAP1"
    },
    "12939": {
      "op": "DUP6"
    },
    "12940": {
      "op": "ADD"
    },
    "12941": {
      "op": "SWAP1"
    },
    "12942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12944": {
      "op": "ADD"
    },
    "12945": {
      "op": "PUSH2",
      "value": "0x3270"
    },
    "12948": {
      "op": "JUMP"
    },
    "12949": {
      "op": "JUMPDEST"
    },
    "12950": {
      "op": "POP"
    },
    "12951": {
      "op": "SWAP2"
    },
    "12952": {
      "op": "SWAP8"
    },
    "12953": {
      "op": "SWAP7"
    },
    "12954": {
      "op": "POP"
    },
    "12955": {
      "op": "POP"
    },
    "12956": {
      "op": "POP"
    },
    "12957": {
      "op": "POP"
    },
    "12958": {
      "op": "POP"
    },
    "12959": {
      "op": "POP"
    },
    "12960": {
      "op": "POP"
    },
    "12961": {
      "jump": "o",
      "op": "JUMP"
    },
    "12962": {
      "op": "JUMPDEST"
    },
    "12963": {
      "op": "DUP1"
    },
    "12964": {
      "op": "ISZERO"
    },
    "12965": {
      "op": "ISZERO"
    },
    "12966": {
      "op": "DUP2"
    },
    "12967": {
      "op": "EQ"
    },
    "12968": {
      "op": "PUSH2",
      "value": "0x1D9F"
    },
    "12971": {
      "op": "JUMPI"
    },
    "12972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12974": {
      "op": "DUP1"
    },
    "12975": {
      "op": "REVERT"
    },
    "12976": {
      "op": "JUMPDEST"
    },
    "12977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12979": {
      "op": "DUP1"
    },
    "12980": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12982": {
      "op": "DUP4"
    },
    "12983": {
      "op": "DUP6"
    },
    "12984": {
      "op": "SUB"
    },
    "12985": {
      "op": "SLT"
    },
    "12986": {
      "op": "ISZERO"
    },
    "12987": {
      "op": "PUSH2",
      "value": "0x32C3"
    },
    "12990": {
      "op": "JUMPI"
    },
    "12991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12993": {
      "op": "DUP1"
    },
    "12994": {
      "op": "REVERT"
    },
    "12995": {
      "op": "JUMPDEST"
    },
    "12996": {
      "op": "DUP3"
    },
    "12997": {
      "op": "CALLDATALOAD"
    },
    "12998": {
      "op": "PUSH2",
      "value": "0x32CE"
    },
    "13001": {
      "op": "DUP2"
    },
    "13002": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "13005": {
      "jump": "i",
      "op": "JUMP"
    },
    "13006": {
      "op": "JUMPDEST"
    },
    "13007": {
      "op": "SWAP2"
    },
    "13008": {
      "op": "POP"
    },
    "13009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13011": {
      "op": "DUP4"
    },
    "13012": {
      "op": "ADD"
    },
    "13013": {
      "op": "CALLDATALOAD"
    },
    "13014": {
      "op": "PUSH2",
      "value": "0x32DE"
    },
    "13017": {
      "op": "DUP2"
    },
    "13018": {
      "op": "PUSH2",
      "value": "0x32A2"
    },
    "13021": {
      "jump": "i",
      "op": "JUMP"
    },
    "13022": {
      "op": "JUMPDEST"
    },
    "13023": {
      "op": "DUP1"
    },
    "13024": {
      "op": "SWAP2"
    },
    "13025": {
      "op": "POP"
    },
    "13026": {
      "op": "POP"
    },
    "13027": {
      "op": "SWAP3"
    },
    "13028": {
      "op": "POP"
    },
    "13029": {
      "op": "SWAP3"
    },
    "13030": {
      "op": "SWAP1"
    },
    "13031": {
      "op": "POP"
    },
    "13032": {
      "jump": "o",
      "op": "JUMP"
    },
    "13033": {
      "op": "JUMPDEST"
    },
    "13034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13036": {
      "op": "DUP1"
    },
    "13037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13039": {
      "op": "DUP1"
    },
    "13040": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13042": {
      "op": "DUP6"
    },
    "13043": {
      "op": "DUP8"
    },
    "13044": {
      "op": "SUB"
    },
    "13045": {
      "op": "SLT"
    },
    "13046": {
      "op": "ISZERO"
    },
    "13047": {
      "op": "PUSH2",
      "value": "0x32FF"
    },
    "13050": {
      "op": "JUMPI"
    },
    "13051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13053": {
      "op": "DUP1"
    },
    "13054": {
      "op": "REVERT"
    },
    "13055": {
      "op": "JUMPDEST"
    },
    "13056": {
      "op": "DUP5"
    },
    "13057": {
      "op": "CALLDATALOAD"
    },
    "13058": {
      "op": "PUSH2",
      "value": "0x330A"
    },
    "13061": {
      "op": "DUP2"
    },
    "13062": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "13065": {
      "jump": "i",
      "op": "JUMP"
    },
    "13066": {
      "op": "JUMPDEST"
    },
    "13067": {
      "op": "SWAP4"
    },
    "13068": {
      "op": "POP"
    },
    "13069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13071": {
      "op": "DUP6"
    },
    "13072": {
      "op": "DUP2"
    },
    "13073": {
      "op": "ADD"
    },
    "13074": {
      "op": "CALLDATALOAD"
    },
    "13075": {
      "op": "PUSH2",
      "value": "0x331B"
    },
    "13078": {
      "op": "DUP2"
    },
    "13079": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "13082": {
      "jump": "i",
      "op": "JUMP"
    },
    "13083": {
      "op": "JUMPDEST"
    },
    "13084": {
      "op": "SWAP4"
    },
    "13085": {
      "op": "POP"
    },
    "13086": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13088": {
      "op": "DUP7"
    },
    "13089": {
      "op": "ADD"
    },
    "13090": {
      "op": "CALLDATALOAD"
    },
    "13091": {
      "op": "SWAP3"
    },
    "13092": {
      "op": "POP"
    },
    "13093": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13095": {
      "op": "DUP7"
    },
    "13096": {
      "op": "ADD"
    },
    "13097": {
      "op": "CALLDATALOAD"
    },
    "13098": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13107": {
      "op": "DUP1"
    },
    "13108": {
      "op": "DUP3"
    },
    "13109": {
      "op": "GT"
    },
    "13110": {
      "op": "ISZERO"
    },
    "13111": {
      "op": "PUSH2",
      "value": "0x333F"
    },
    "13114": {
      "op": "JUMPI"
    },
    "13115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13117": {
      "op": "DUP1"
    },
    "13118": {
      "op": "REVERT"
    },
    "13119": {
      "op": "JUMPDEST"
    },
    "13120": {
      "op": "DUP2"
    },
    "13121": {
      "op": "DUP9"
    },
    "13122": {
      "op": "ADD"
    },
    "13123": {
      "op": "SWAP2"
    },
    "13124": {
      "op": "POP"
    },
    "13125": {
      "op": "DUP9"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13128": {
      "op": "DUP4"
    },
    "13129": {
      "op": "ADD"
    },
    "13130": {
      "op": "SLT"
    },
    "13131": {
      "op": "PUSH2",
      "value": "0x3353"
    },
    "13134": {
      "op": "JUMPI"
    },
    "13135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13137": {
      "op": "DUP1"
    },
    "13138": {
      "op": "REVERT"
    },
    "13139": {
      "op": "JUMPDEST"
    },
    "13140": {
      "op": "DUP2"
    },
    "13141": {
      "op": "CALLDATALOAD"
    },
    "13142": {
      "op": "DUP2"
    },
    "13143": {
      "op": "DUP2"
    },
    "13144": {
      "op": "GT"
    },
    "13145": {
      "op": "ISZERO"
    },
    "13146": {
      "op": "PUSH2",
      "value": "0x3365"
    },
    "13149": {
      "op": "JUMPI"
    },
    "13150": {
      "op": "PUSH2",
      "value": "0x3365"
    },
    "13153": {
      "op": "PUSH2",
      "value": "0x2F52"
    },
    "13156": {
      "jump": "i",
      "op": "JUMP"
    },
    "13157": {
      "op": "JUMPDEST"
    },
    "13158": {
      "op": "PUSH2",
      "value": "0x3377"
    },
    "13161": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13163": {
      "op": "DUP3"
    },
    "13164": {
      "op": "ADD"
    },
    "13165": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13167": {
      "op": "NOT"
    },
    "13168": {
      "op": "AND"
    },
    "13169": {
      "op": "DUP6"
    },
    "13170": {
      "op": "ADD"
    },
    "13171": {
      "op": "PUSH2",
      "value": "0x2F68"
    },
    "13174": {
      "jump": "i",
      "op": "JUMP"
    },
    "13175": {
      "op": "JUMPDEST"
    },
    "13176": {
      "op": "SWAP2"
    },
    "13177": {
      "op": "POP"
    },
    "13178": {
      "op": "DUP1"
    },
    "13179": {
      "op": "DUP3"
    },
    "13180": {
      "op": "MSTORE"
    },
    "13181": {
      "op": "DUP10"
    },
    "13182": {
      "op": "DUP5"
    },
    "13183": {
      "op": "DUP3"
    },
    "13184": {
      "op": "DUP6"
    },
    "13185": {
      "op": "ADD"
    },
    "13186": {
      "op": "ADD"
    },
    "13187": {
      "op": "GT"
    },
    "13188": {
      "op": "ISZERO"
    },
    "13189": {
      "op": "PUSH2",
      "value": "0x338D"
    },
    "13192": {
      "op": "JUMPI"
    },
    "13193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13195": {
      "op": "DUP1"
    },
    "13196": {
      "op": "REVERT"
    },
    "13197": {
      "op": "JUMPDEST"
    },
    "13198": {
      "op": "DUP1"
    },
    "13199": {
      "op": "DUP5"
    },
    "13200": {
      "op": "DUP5"
    },
    "13201": {
      "op": "ADD"
    },
    "13202": {
      "op": "DUP6"
    },
    "13203": {
      "op": "DUP5"
    },
    "13204": {
      "op": "ADD"
    },
    "13205": {
      "op": "CALLDATACOPY"
    },
    "13206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13208": {
      "op": "DUP5"
    },
    "13209": {
      "op": "DUP3"
    },
    "13210": {
      "op": "DUP5"
    },
    "13211": {
      "op": "ADD"
    },
    "13212": {
      "op": "ADD"
    },
    "13213": {
      "op": "MSTORE"
    },
    "13214": {
      "op": "POP"
    },
    "13215": {
      "op": "DUP1"
    },
    "13216": {
      "op": "SWAP4"
    },
    "13217": {
      "op": "POP"
    },
    "13218": {
      "op": "POP"
    },
    "13219": {
      "op": "POP"
    },
    "13220": {
      "op": "POP"
    },
    "13221": {
      "op": "SWAP3"
    },
    "13222": {
      "op": "SWAP6"
    },
    "13223": {
      "op": "SWAP2"
    },
    "13224": {
      "op": "SWAP5"
    },
    "13225": {
      "op": "POP"
    },
    "13226": {
      "op": "SWAP3"
    },
    "13227": {
      "op": "POP"
    },
    "13228": {
      "jump": "o",
      "op": "JUMP"
    },
    "13229": {
      "op": "JUMPDEST"
    },
    "13230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13232": {
      "op": "DUP1"
    },
    "13233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13235": {
      "op": "DUP4"
    },
    "13236": {
      "op": "DUP6"
    },
    "13237": {
      "op": "SUB"
    },
    "13238": {
      "op": "SLT"
    },
    "13239": {
      "op": "ISZERO"
    },
    "13240": {
      "op": "PUSH2",
      "value": "0x33C0"
    },
    "13243": {
      "op": "JUMPI"
    },
    "13244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13246": {
      "op": "DUP1"
    },
    "13247": {
      "op": "REVERT"
    },
    "13248": {
      "op": "JUMPDEST"
    },
    "13249": {
      "op": "DUP3"
    },
    "13250": {
      "op": "CALLDATALOAD"
    },
    "13251": {
      "op": "PUSH2",
      "value": "0x33CB"
    },
    "13254": {
      "op": "DUP2"
    },
    "13255": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "13258": {
      "jump": "i",
      "op": "JUMP"
    },
    "13259": {
      "op": "JUMPDEST"
    },
    "13260": {
      "op": "SWAP2"
    },
    "13261": {
      "op": "POP"
    },
    "13262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13264": {
      "op": "DUP4"
    },
    "13265": {
      "op": "ADD"
    },
    "13266": {
      "op": "CALLDATALOAD"
    },
    "13267": {
      "op": "PUSH2",
      "value": "0x32DE"
    },
    "13270": {
      "op": "DUP2"
    },
    "13271": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "13274": {
      "jump": "i",
      "op": "JUMP"
    },
    "13275": {
      "op": "JUMPDEST"
    },
    "13276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13278": {
      "op": "DUP2"
    },
    "13279": {
      "op": "DUP2"
    },
    "13280": {
      "op": "SHR"
    },
    "13281": {
      "op": "SWAP1"
    },
    "13282": {
      "op": "DUP3"
    },
    "13283": {
      "op": "AND"
    },
    "13284": {
      "op": "DUP1"
    },
    "13285": {
      "op": "PUSH2",
      "value": "0x33EF"
    },
    "13288": {
      "op": "JUMPI"
    },
    "13289": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13291": {
      "op": "DUP3"
    },
    "13292": {
      "op": "AND"
    },
    "13293": {
      "op": "SWAP2"
    },
    "13294": {
      "op": "POP"
    },
    "13295": {
      "op": "JUMPDEST"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13298": {
      "op": "DUP3"
    },
    "13299": {
      "op": "LT"
    },
    "13300": {
      "op": "DUP2"
    },
    "13301": {
      "op": "SUB"
    },
    "13302": {
      "op": "PUSH2",
      "value": "0x340F"
    },
    "13305": {
      "op": "JUMPI"
    },
    "13306": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13313": {
      "op": "SHL"
    },
    "13314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13316": {
      "op": "MSTORE"
    },
    "13317": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13319": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13321": {
      "op": "MSTORE"
    },
    "13322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13326": {
      "op": "REVERT"
    },
    "13327": {
      "op": "JUMPDEST"
    },
    "13328": {
      "op": "POP"
    },
    "13329": {
      "op": "SWAP2"
    },
    "13330": {
      "op": "SWAP1"
    },
    "13331": {
      "op": "POP"
    },
    "13332": {
      "jump": "o",
      "op": "JUMP"
    },
    "13333": {
      "op": "JUMPDEST"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13336": {
      "op": "DUP1"
    },
    "13337": {
      "op": "DUP3"
    },
    "13338": {
      "op": "MSTORE"
    },
    "13339": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13341": {
      "op": "SWAP1"
    },
    "13342": {
      "op": "DUP3"
    },
    "13343": {
      "op": "ADD"
    },
    "13344": {
      "op": "MSTORE"
    },
    "13345": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13362": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13364": {
      "op": "SHL"
    },
    "13365": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13367": {
      "op": "DUP3"
    },
    "13368": {
      "op": "ADD"
    },
    "13369": {
      "op": "MSTORE"
    },
    "13370": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13372": {
      "op": "ADD"
    },
    "13373": {
      "op": "SWAP1"
    },
    "13374": {
      "jump": "o",
      "op": "JUMP"
    },
    "13375": {
      "op": "JUMPDEST"
    },
    "13376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13378": {
      "op": "DUP1"
    },
    "13379": {
      "op": "DUP3"
    },
    "13380": {
      "op": "MSTORE"
    },
    "13381": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "13383": {
      "op": "SWAP1"
    },
    "13384": {
      "op": "DUP3"
    },
    "13385": {
      "op": "ADD"
    },
    "13386": {
      "op": "MSTORE"
    },
    "13387": {
      "op": "PUSH32",
      "value": "0x7175616E74697479206D7573742062652031206F722035206F72203130000000"
    },
    "13420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13422": {
      "op": "DUP3"
    },
    "13423": {
      "op": "ADD"
    },
    "13424": {
      "op": "MSTORE"
    },
    "13425": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13427": {
      "op": "ADD"
    },
    "13428": {
      "op": "SWAP1"
    },
    "13429": {
      "jump": "o",
      "op": "JUMP"
    },
    "13430": {
      "op": "JUMPDEST"
    },
    "13431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13433": {
      "op": "DUP1"
    },
    "13434": {
      "op": "DUP3"
    },
    "13435": {
      "op": "MSTORE"
    },
    "13436": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "13438": {
      "op": "SWAP1"
    },
    "13439": {
      "op": "DUP3"
    },
    "13440": {
      "op": "ADD"
    },
    "13441": {
      "op": "MSTORE"
    },
    "13442": {
      "op": "PUSH32",
      "value": "0x4C656E677468206F662074686520616D6F756E74206F6620746865206E667420"
    },
    "13475": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13477": {
      "op": "DUP3"
    },
    "13478": {
      "op": "ADD"
    },
    "13479": {
      "op": "MSTORE"
    },
    "13480": {
      "op": "PUSH20",
      "value": "0x6D75737420626520657175616C20746F20717479"
    },
    "13501": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13503": {
      "op": "SHL"
    },
    "13504": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13506": {
      "op": "DUP3"
    },
    "13507": {
      "op": "ADD"
    },
    "13508": {
      "op": "MSTORE"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13511": {
      "op": "ADD"
    },
    "13512": {
      "op": "SWAP1"
    },
    "13513": {
      "jump": "o",
      "op": "JUMP"
    },
    "13514": {
      "op": "JUMPDEST"
    },
    "13515": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13520": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13522": {
      "op": "SHL"
    },
    "13523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13525": {
      "op": "MSTORE"
    },
    "13526": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13528": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13530": {
      "op": "MSTORE"
    },
    "13531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13535": {
      "op": "REVERT"
    },
    "13536": {
      "op": "JUMPDEST"
    },
    "13537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13539": {
      "op": "DUP3"
    },
    "13540": {
      "op": "DUP3"
    },
    "13541": {
      "op": "LT"
    },
    "13542": {
      "op": "ISZERO"
    },
    "13543": {
      "op": "PUSH2",
      "value": "0x34F2"
    },
    "13546": {
      "op": "JUMPI"
    },
    "13547": {
      "op": "PUSH2",
      "value": "0x34F2"
    },
    "13550": {
      "op": "PUSH2",
      "value": "0x34CA"
    },
    "13553": {
      "jump": "i",
      "op": "JUMP"
    },
    "13554": {
      "op": "JUMPDEST"
    },
    "13555": {
      "op": "POP"
    },
    "13556": {
      "op": "SUB"
    },
    "13557": {
      "op": "SWAP1"
    },
    "13558": {
      "jump": "o",
      "op": "JUMP"
    },
    "13559": {
      "op": "JUMPDEST"
    },
    "13560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13562": {
      "op": "DUP3"
    },
    "13563": {
      "op": "NOT"
    },
    "13564": {
      "op": "DUP3"
    },
    "13565": {
      "op": "GT"
    },
    "13566": {
      "op": "ISZERO"
    },
    "13567": {
      "op": "PUSH2",
      "value": "0x350A"
    },
    "13570": {
      "op": "JUMPI"
    },
    "13571": {
      "op": "PUSH2",
      "value": "0x350A"
    },
    "13574": {
      "op": "PUSH2",
      "value": "0x34CA"
    },
    "13577": {
      "jump": "i",
      "op": "JUMP"
    },
    "13578": {
      "op": "JUMPDEST"
    },
    "13579": {
      "op": "POP"
    },
    "13580": {
      "op": "ADD"
    },
    "13581": {
      "op": "SWAP1"
    },
    "13582": {
      "jump": "o",
      "op": "JUMP"
    },
    "13583": {
      "op": "JUMPDEST"
    },
    "13584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13586": {
      "op": "DUP1"
    },
    "13587": {
      "op": "DUP3"
    },
    "13588": {
      "op": "MSTORE"
    },
    "13589": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13591": {
      "op": "SWAP1"
    },
    "13592": {
      "op": "DUP3"
    },
    "13593": {
      "op": "ADD"
    },
    "13594": {
      "op": "MSTORE"
    },
    "13595": {
      "op": "PUSH32",
      "value": "0x796F752063616E2774206D696E742074686174206D616E79207269676874206E"
    },
    "13628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13630": {
      "op": "DUP3"
    },
    "13631": {
      "op": "ADD"
    },
    "13632": {
      "op": "MSTORE"
    },
    "13633": {
      "op": "PUSH2",
      "value": "0x6F77"
    },
    "13636": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13638": {
      "op": "SHL"
    },
    "13639": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13641": {
      "op": "DUP3"
    },
    "13642": {
      "op": "ADD"
    },
    "13643": {
      "op": "MSTORE"
    },
    "13644": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13646": {
      "op": "ADD"
    },
    "13647": {
      "op": "SWAP1"
    },
    "13648": {
      "jump": "o",
      "op": "JUMP"
    },
    "13649": {
      "op": "JUMPDEST"
    },
    "13650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13652": {
      "op": "DUP2"
    },
    "13653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13655": {
      "op": "NOT"
    },
    "13656": {
      "op": "DIV"
    },
    "13657": {
      "op": "DUP4"
    },
    "13658": {
      "op": "GT"
    },
    "13659": {
      "op": "DUP3"
    },
    "13660": {
      "op": "ISZERO"
    },
    "13661": {
      "op": "ISZERO"
    },
    "13662": {
      "op": "AND"
    },
    "13663": {
      "op": "ISZERO"
    },
    "13664": {
      "op": "PUSH2",
      "value": "0x356B"
    },
    "13667": {
      "op": "JUMPI"
    },
    "13668": {
      "op": "PUSH2",
      "value": "0x356B"
    },
    "13671": {
      "op": "PUSH2",
      "value": "0x34CA"
    },
    "13674": {
      "jump": "i",
      "op": "JUMP"
    },
    "13675": {
      "op": "JUMPDEST"
    },
    "13676": {
      "op": "POP"
    },
    "13677": {
      "op": "MUL"
    },
    "13678": {
      "op": "SWAP1"
    },
    "13679": {
      "jump": "o",
      "op": "JUMP"
    },
    "13680": {
      "op": "JUMPDEST"
    },
    "13681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13685": {
      "op": "DUP3"
    },
    "13686": {
      "op": "DUP5"
    },
    "13687": {
      "op": "SUB"
    },
    "13688": {
      "op": "SLT"
    },
    "13689": {
      "op": "ISZERO"
    },
    "13690": {
      "op": "PUSH2",
      "value": "0x3582"
    },
    "13693": {
      "op": "JUMPI"
    },
    "13694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13696": {
      "op": "DUP1"
    },
    "13697": {
      "op": "REVERT"
    },
    "13698": {
      "op": "JUMPDEST"
    },
    "13699": {
      "op": "POP"
    },
    "13700": {
      "op": "MLOAD"
    },
    "13701": {
      "op": "SWAP2"
    },
    "13702": {
      "op": "SWAP1"
    },
    "13703": {
      "op": "POP"
    },
    "13704": {
      "jump": "o",
      "op": "JUMP"
    },
    "13705": {
      "op": "JUMPDEST"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13708": {
      "op": "DUP1"
    },
    "13709": {
      "op": "DUP3"
    },
    "13710": {
      "op": "MSTORE"
    },
    "13711": {
      "op": "DUP2"
    },
    "13712": {
      "op": "DUP2"
    },
    "13713": {
      "op": "ADD"
    },
    "13714": {
      "op": "MSTORE"
    },
    "13715": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13748": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13750": {
      "op": "DUP3"
    },
    "13751": {
      "op": "ADD"
    },
    "13752": {
      "op": "MSTORE"
    },
    "13753": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13755": {
      "op": "ADD"
    },
    "13756": {
      "op": "SWAP1"
    },
    "13757": {
      "jump": "o",
      "op": "JUMP"
    },
    "13758": {
      "op": "JUMPDEST"
    },
    "13759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13761": {
      "op": "DUP1"
    },
    "13762": {
      "op": "DUP3"
    },
    "13763": {
      "op": "MSTORE"
    },
    "13764": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13766": {
      "op": "SWAP1"
    },
    "13767": {
      "op": "DUP3"
    },
    "13768": {
      "op": "ADD"
    },
    "13769": {
      "op": "MSTORE"
    },
    "13770": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13803": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13805": {
      "op": "DUP3"
    },
    "13806": {
      "op": "ADD"
    },
    "13807": {
      "op": "MSTORE"
    },
    "13808": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13826": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13828": {
      "op": "SHL"
    },
    "13829": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13831": {
      "op": "DUP3"
    },
    "13832": {
      "op": "ADD"
    },
    "13833": {
      "op": "MSTORE"
    },
    "13834": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13836": {
      "op": "ADD"
    },
    "13837": {
      "op": "SWAP1"
    },
    "13838": {
      "jump": "o",
      "op": "JUMP"
    },
    "13839": {
      "op": "JUMPDEST"
    },
    "13840": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13847": {
      "op": "SHL"
    },
    "13848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13850": {
      "op": "MSTORE"
    },
    "13851": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13853": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13855": {
      "op": "MSTORE"
    },
    "13856": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13860": {
      "op": "REVERT"
    },
    "13861": {
      "op": "JUMPDEST"
    },
    "13862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13864": {
      "op": "DUP1"
    },
    "13865": {
      "op": "DUP3"
    },
    "13866": {
      "op": "MSTORE"
    },
    "13867": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "13869": {
      "op": "SWAP1"
    },
    "13870": {
      "op": "DUP3"
    },
    "13871": {
      "op": "ADD"
    },
    "13872": {
      "op": "MSTORE"
    },
    "13873": {
      "op": "PUSH15",
      "value": "0xDCDEE840CADCDEEACED04082AC82B"
    },
    "13889": {
      "op": "PUSH1",
      "value": "0x8B"
    },
    "13891": {
      "op": "SHL"
    },
    "13892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13894": {
      "op": "DUP3"
    },
    "13895": {
      "op": "ADD"
    },
    "13896": {
      "op": "MSTORE"
    },
    "13897": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13899": {
      "op": "ADD"
    },
    "13900": {
      "op": "SWAP1"
    },
    "13901": {
      "jump": "o",
      "op": "JUMP"
    },
    "13902": {
      "op": "JUMPDEST"
    },
    "13903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13907": {
      "op": "DUP3"
    },
    "13908": {
      "op": "ADD"
    },
    "13909": {
      "op": "PUSH2",
      "value": "0x3660"
    },
    "13912": {
      "op": "JUMPI"
    },
    "13913": {
      "op": "PUSH2",
      "value": "0x3660"
    },
    "13916": {
      "op": "PUSH2",
      "value": "0x34CA"
    },
    "13919": {
      "jump": "i",
      "op": "JUMP"
    },
    "13920": {
      "op": "JUMPDEST"
    },
    "13921": {
      "op": "POP"
    },
    "13922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13924": {
      "op": "ADD"
    },
    "13925": {
      "op": "SWAP1"
    },
    "13926": {
      "jump": "o",
      "op": "JUMP"
    },
    "13927": {
      "op": "JUMPDEST"
    },
    "13928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13930": {
      "op": "DUP4"
    },
    "13931": {
      "op": "MLOAD"
    },
    "13932": {
      "op": "PUSH2",
      "value": "0x3679"
    },
    "13935": {
      "op": "DUP2"
    },
    "13936": {
      "op": "DUP5"
    },
    "13937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13939": {
      "op": "DUP9"
    },
    "13940": {
      "op": "ADD"
    },
    "13941": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "13944": {
      "jump": "i",
      "op": "JUMP"
    },
    "13945": {
      "op": "JUMPDEST"
    },
    "13946": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "13948": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13950": {
      "op": "SHL"
    },
    "13951": {
      "op": "SWAP1"
    },
    "13952": {
      "op": "DUP4"
    },
    "13953": {
      "op": "ADD"
    },
    "13954": {
      "op": "SWAP1"
    },
    "13955": {
      "op": "DUP2"
    },
    "13956": {
      "op": "MSTORE"
    },
    "13957": {
      "op": "DUP4"
    },
    "13958": {
      "op": "MLOAD"
    },
    "13959": {
      "op": "PUSH2",
      "value": "0x3697"
    },
    "13962": {
      "op": "DUP2"
    },
    "13963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13965": {
      "op": "DUP5"
    },
    "13966": {
      "op": "ADD"
    },
    "13967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13969": {
      "op": "DUP9"
    },
    "13970": {
      "op": "ADD"
    },
    "13971": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "13974": {
      "jump": "i",
      "op": "JUMP"
    },
    "13975": {
      "op": "JUMPDEST"
    },
    "13976": {
      "op": "PUSH5",
      "value": "0x173539B7B7"
    },
    "13982": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "13984": {
      "op": "SHL"
    },
    "13985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13987": {
      "op": "SWAP3"
    },
    "13988": {
      "op": "SWAP1"
    },
    "13989": {
      "op": "SWAP2"
    },
    "13990": {
      "op": "ADD"
    },
    "13991": {
      "op": "SWAP2"
    },
    "13992": {
      "op": "DUP3"
    },
    "13993": {
      "op": "ADD"
    },
    "13994": {
      "op": "MSTORE"
    },
    "13995": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "13997": {
      "op": "ADD"
    },
    "13998": {
      "op": "SWAP5"
    },
    "13999": {
      "op": "SWAP4"
    },
    "14000": {
      "op": "POP"
    },
    "14001": {
      "op": "POP"
    },
    "14002": {
      "op": "POP"
    },
    "14003": {
      "op": "POP"
    },
    "14004": {
      "jump": "o",
      "op": "JUMP"
    },
    "14005": {
      "op": "JUMPDEST"
    },
    "14006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14008": {
      "op": "DUP1"
    },
    "14009": {
      "op": "DUP3"
    },
    "14010": {
      "op": "MSTORE"
    },
    "14011": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14013": {
      "op": "SWAP1"
    },
    "14014": {
      "op": "DUP3"
    },
    "14015": {
      "op": "ADD"
    },
    "14016": {
      "op": "MSTORE"
    },
    "14017": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14050": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14052": {
      "op": "DUP3"
    },
    "14053": {
      "op": "ADD"
    },
    "14054": {
      "op": "MSTORE"
    },
    "14055": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14074": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14076": {
      "op": "SHL"
    },
    "14077": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14079": {
      "op": "DUP3"
    },
    "14080": {
      "op": "ADD"
    },
    "14081": {
      "op": "MSTORE"
    },
    "14082": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14084": {
      "op": "ADD"
    },
    "14085": {
      "op": "SWAP1"
    },
    "14086": {
      "jump": "o",
      "op": "JUMP"
    },
    "14087": {
      "op": "JUMPDEST"
    },
    "14088": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14093": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14095": {
      "op": "SHL"
    },
    "14096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14098": {
      "op": "MSTORE"
    },
    "14099": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14101": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14103": {
      "op": "MSTORE"
    },
    "14104": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14108": {
      "op": "REVERT"
    },
    "14109": {
      "op": "JUMPDEST"
    },
    "14110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14112": {
      "op": "DUP3"
    },
    "14113": {
      "op": "PUSH2",
      "value": "0x372C"
    },
    "14116": {
      "op": "JUMPI"
    },
    "14117": {
      "op": "PUSH2",
      "value": "0x372C"
    },
    "14120": {
      "op": "PUSH2",
      "value": "0x3707"
    },
    "14123": {
      "jump": "i",
      "op": "JUMP"
    },
    "14124": {
      "op": "JUMPDEST"
    },
    "14125": {
      "op": "POP"
    },
    "14126": {
      "op": "DIV"
    },
    "14127": {
      "op": "SWAP1"
    },
    "14128": {
      "jump": "o",
      "op": "JUMP"
    },
    "14129": {
      "op": "JUMPDEST"
    },
    "14130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14132": {
      "op": "DUP3"
    },
    "14133": {
      "op": "PUSH2",
      "value": "0x3740"
    },
    "14136": {
      "op": "JUMPI"
    },
    "14137": {
      "op": "PUSH2",
      "value": "0x3740"
    },
    "14140": {
      "op": "PUSH2",
      "value": "0x3707"
    },
    "14143": {
      "jump": "i",
      "op": "JUMP"
    },
    "14144": {
      "op": "JUMPDEST"
    },
    "14145": {
      "op": "POP"
    },
    "14146": {
      "op": "MOD"
    },
    "14147": {
      "op": "SWAP1"
    },
    "14148": {
      "jump": "o",
      "op": "JUMP"
    },
    "14149": {
      "op": "JUMPDEST"
    },
    "14150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14154": {
      "op": "DUP3"
    },
    "14155": {
      "op": "DUP5"
    },
    "14156": {
      "op": "SUB"
    },
    "14157": {
      "op": "SLT"
    },
    "14158": {
      "op": "ISZERO"
    },
    "14159": {
      "op": "PUSH2",
      "value": "0x3757"
    },
    "14162": {
      "op": "JUMPI"
    },
    "14163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14165": {
      "op": "DUP1"
    },
    "14166": {
      "op": "REVERT"
    },
    "14167": {
      "op": "JUMPDEST"
    },
    "14168": {
      "op": "DUP2"
    },
    "14169": {
      "op": "MLOAD"
    },
    "14170": {
      "op": "PUSH2",
      "value": "0x22DB"
    },
    "14173": {
      "op": "DUP2"
    },
    "14174": {
      "op": "PUSH2",
      "value": "0x32A2"
    },
    "14177": {
      "jump": "i",
      "op": "JUMP"
    },
    "14178": {
      "op": "JUMPDEST"
    },
    "14179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14185": {
      "op": "SHL"
    },
    "14186": {
      "op": "SUB"
    },
    "14187": {
      "op": "DUP6"
    },
    "14188": {
      "op": "DUP2"
    },
    "14189": {
      "op": "AND"
    },
    "14190": {
      "op": "DUP3"
    },
    "14191": {
      "op": "MSTORE"
    },
    "14192": {
      "op": "DUP5"
    },
    "14193": {
      "op": "AND"
    },
    "14194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14196": {
      "op": "DUP3"
    },
    "14197": {
      "op": "ADD"
    },
    "14198": {
      "op": "MSTORE"
    },
    "14199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14201": {
      "op": "DUP2"
    },
    "14202": {
      "op": "ADD"
    },
    "14203": {
      "op": "DUP4"
    },
    "14204": {
      "op": "SWAP1"
    },
    "14205": {
      "op": "MSTORE"
    },
    "14206": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14208": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14210": {
      "op": "DUP3"
    },
    "14211": {
      "op": "ADD"
    },
    "14212": {
      "op": "DUP2"
    },
    "14213": {
      "op": "SWAP1"
    },
    "14214": {
      "op": "MSTORE"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14217": {
      "op": "SWAP1"
    },
    "14218": {
      "op": "PUSH2",
      "value": "0x3795"
    },
    "14221": {
      "op": "SWAP1"
    },
    "14222": {
      "op": "DUP4"
    },
    "14223": {
      "op": "ADD"
    },
    "14224": {
      "op": "DUP5"
    },
    "14225": {
      "op": "PUSH2",
      "value": "0x2EB9"
    },
    "14228": {
      "jump": "i",
      "op": "JUMP"
    },
    "14229": {
      "op": "JUMPDEST"
    },
    "14230": {
      "op": "SWAP7"
    },
    "14231": {
      "op": "SWAP6"
    },
    "14232": {
      "op": "POP"
    },
    "14233": {
      "op": "POP"
    },
    "14234": {
      "op": "POP"
    },
    "14235": {
      "op": "POP"
    },
    "14236": {
      "op": "POP"
    },
    "14237": {
      "op": "POP"
    },
    "14238": {
      "jump": "o",
      "op": "JUMP"
    },
    "14239": {
      "op": "JUMPDEST"
    },
    "14240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14244": {
      "op": "DUP3"
    },
    "14245": {
      "op": "DUP5"
    },
    "14246": {
      "op": "SUB"
    },
    "14247": {
      "op": "SLT"
    },
    "14248": {
      "op": "ISZERO"
    },
    "14249": {
      "op": "PUSH2",
      "value": "0x37B1"
    },
    "14252": {
      "op": "JUMPI"
    },
    "14253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14255": {
      "op": "DUP1"
    },
    "14256": {
      "op": "REVERT"
    },
    "14257": {
      "op": "JUMPDEST"
    },
    "14258": {
      "op": "DUP2"
    },
    "14259": {
      "op": "MLOAD"
    },
    "14260": {
      "op": "PUSH2",
      "value": "0x22DB"
    },
    "14263": {
      "op": "DUP2"
    },
    "14264": {
      "op": "PUSH2",
      "value": "0x2E5A"
    },
    "14267": {
      "jump": "i",
      "op": "JUMP"
    },
    "14268": {
      "op": "JUMPDEST"
    },
    "14269": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14276": {
      "op": "SHL"
    },
    "14277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14279": {
      "op": "MSTORE"
    },
    "14280": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14282": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14284": {
      "op": "MSTORE"
    },
    "14285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14289": {
      "op": "REVERT"
    },
    "14290": {
      "op": "JUMPDEST"
    },
    "14291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14293": {
      "op": "DUP3"
    },
    "14294": {
      "op": "MLOAD"
    },
    "14295": {
      "op": "PUSH2",
      "value": "0x37E4"
    },
    "14298": {
      "op": "DUP2"
    },
    "14299": {
      "op": "DUP5"
    },
    "14300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14302": {
      "op": "DUP8"
    },
    "14303": {
      "op": "ADD"
    },
    "14304": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "14307": {
      "jump": "i",
      "op": "JUMP"
    },
    "14308": {
      "op": "JUMPDEST"
    },
    "14309": {
      "op": "SWAP2"
    },
    "14310": {
      "op": "SWAP1"
    },
    "14311": {
      "op": "SWAP2"
    },
    "14312": {
      "op": "ADD"
    },
    "14313": {
      "op": "SWAP3"
    },
    "14314": {
      "op": "SWAP2"
    },
    "14315": {
      "op": "POP"
    },
    "14316": {
      "op": "POP"
    },
    "14317": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6fe53fe6fa3d1f33ac8d4546e7326074f9d6bb80",
  "source": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\nimport \"./Soul.sol\";\n\ncontract Celestial is ERC721Enumerable, Ownable, Pausable {\n    using SafeERC20 for IERC20;\n    using Strings for uint256;\n\n    struct CelestialInfo {\n        uint256 tokenId;\n        uint256 celestialType;\n    }\n    // CONSTANTS\n    uint256 public constant CELESTIAL_PRICE_AVAX = 0.0015 ether; // 1.5 in production\n    uint256 public constant CELESTIAL_PRICE_WHITELIST = 0.0013 ether; // 1.3 in roduction\n    //uint256 public constant WHITELIST_CELESTIAL = 1000;\n    uint256 public constant CELESTIAL_PER_SOUL_MINT_LEVEL = 5000;\n    //uint256 public constant MAXIMUM_MINTS_PER_WHITELIST_ADDRESS = 4;\n    uint256 public constant NUM_GEN0_CELESTIAL = 10_000;\n    uint256 public constant NUM_GEN1_CELESTIAL = 15_000;\n    uint256 public constant ANGLE_TYPE = 1;\n    uint256 public constant DEMON_TYPE = 2;\n    uint256 public constant NEPHILIM_TYPE = 3;\n\n    // SOUL mint price tracking\n    uint256 public currentSOULMintCost = 20_000 * 1e18;\n\n    // external contracts\n    Soul public soul;\n    address public celestialverseAddress;\n    address public Stake;\n\n    // metadata URI\n    string public BASE_URI;\n\n    // whitelist\n    bytes32 public merkleRoot;\n    mapping(address => uint256) public whitelistClaimed;\n\n    // mint tracking\n    uint256 public CelestialsMintedWithAVAX;\n    uint256 public CelestialsMintedWithSOUL;\n    uint256 public CelestialsMintedWhitelist;\n    uint256 public CelestialsMinted = 0;\n    // mint control timestamps\n    //uint256 public startTimeWhitelist;\n    uint256 public startTimeAVAX;\n    uint256 public startTimeSOUL;\n\n    // Celestial type definitions (ANGEL OR DEMON OR NEPHILIM)\n    mapping(uint256 => uint256) public tokenTypes; // maps tokenId to its type\n\n    // EVENTS\n\n    event onCelestialCreated(uint256 tokenId);\n    event onCelestialRevealed(uint256 tokenId, uint256 celestialType);\n\n    constructor(string memory _BASE_URI, Soul _soul)\n        ERC721(\"Celestial Verse Game\", \"CELESTIAL-VERSE-GAME\")\n    {\n        CelestialsMinted = 0;\n        BASE_URI = _BASE_URI;\n        soul = _soul;\n    }\n\n    function setStake(address _stake) external onlyOwner{\n        Stake = _stake;\n    }\n\n    function setStartTimeAVAX(uint256 _startTime) external onlyOwner {\n        require(\n            _startTime >= block.timestamp,\n            \"startTime cannot be in the past\"\n        );\n        startTimeAVAX = _startTime;\n    }\n\n    function setStartTimeSOUL(uint256 _startTime) external onlyOwner {\n        require(\n            _startTime >= block.timestamp,\n            \"startTime cannot be in the past\"\n        );\n        startTimeSOUL = _startTime;\n    }\n\n    // metadata\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return BASE_URI;\n    }\n\n    function setBaseURI(string calldata _BASE_URI) external onlyOwner {\n        BASE_URI = _BASE_URI;\n    }\n\n    function getType(uint256 _tokenId) public view returns (uint256) {\n        require(_exists(_tokenId), \"token does not exist\");\n        return tokenTypes[_tokenId];\n    }\n\n    //function mintingStartedWhitelist() public view returns (bool) {\n    //    return startTimeWhitelist != 0 && block.timestamp >= startTimeWhitelist;\n    //}\n\n    function mintingStartedAVAX() public view returns (bool) {\n        return startTimeAVAX != 0 && block.timestamp >= startTimeAVAX;\n    }\n\n    function mintingStartedSOUL() public view returns (bool) {\n        return startTimeSOUL != 0 && block.timestamp >= startTimeSOUL;\n    }\n\n    /**\n     * @dev allows owner to send ERC20s held by this contract to target\n     */\n    function forwardERC20s(\n        IERC20 _token,\n        uint256 _amount,\n        address target\n    ) external onlyOwner {\n        _token.safeTransfer(target, _amount);\n    }\n\n    /**\n     * @dev allows owner to withdraw AVAX\n     */\n    function withdrawAVAX(uint256 _amount) external payable onlyOwner {\n        require(address(this).balance >= _amount, \"not enough AVAX\");\n        address payable to = payable(_msgSender());\n        (bool sent, ) = to.call{value: _amount}(\"\");\n        require(sent, \"Failed to send AVAX\");\n    }\n\n    /**\n     * @dev merkle root for WL wallets\n     */\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    // MINTING\n\n    function _createCelestial(\n        address to,\n        uint256 tokenId,\n        uint256 celestialType\n    ) internal {\n        require(\n            CelestialsMinted <= NUM_GEN0_CELESTIAL + NUM_GEN1_CELESTIAL,\n            \"cannot mint anymore celestials\"\n        );\n        require(!_exists(tokenId), \"this 'tokenId' is already tooken\");\n        require(\n            tokenId >= 1 && tokenId <= NUM_GEN0_CELESTIAL,\n            \"'tokenId' must be in the range\"\n        );\n        require(\n            tokenTypes[tokenId] == 0,\n            \"that token's type has already been set\"\n        );\n        require(\n            celestialType == ANGLE_TYPE ||\n                celestialType == DEMON_TYPE ||\n                celestialType == NEPHILIM_TYPE,\n            \"invalid celestial type\"\n        );\n        tokenTypes[tokenId] = celestialType;\n        _safeMint(to, tokenId);\n        setApprovalForAll(Stake,true);\n        emit onCelestialRevealed(tokenId, celestialType);\n        emit onCelestialCreated(tokenId);\n    }\n\n    function _createCelestials(\n        uint256 qty,\n        uint256[] memory tokenIds,\n        uint256[] memory celestialTypes,\n        address to\n    ) internal {\n        for (uint256 i = 0; i < qty; i++) {\n            CelestialsMinted += 1;\n            _createCelestial(to, tokenIds[i], celestialTypes[i]);\n        }\n        // change parameters for percentages\n        // NumberOfAnglesLeft / NumberOfTotalNFTLeft * 100 == Angle chance percentage\n        // Server Side\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n        return\n            string(\n                abi.encodePacked(_baseURI(), \"/\", tokenId.toString(), \".json\")\n            );\n    }\n\n    /**\n     * @dev GEN0 minting\n     */\n    function mintCelestialWhitelist(\n        bytes32[] calldata _merkleProof,\n        uint256 qty,\n        uint256[] memory tokenIds,\n        uint256[] memory celestialTypes\n    ) external payable whenNotPaused {\n        // check most basic requirements\n        require(merkleRoot != 0, \"missing root\");\n        //require(mintingStartedWhitelist(), \"cannot mint right now\");\n        //require(!mintingStartedAVAX(), \"whitelist minting is closed\");\n\n        // check if address belongs in whitelist\n        bytes32 leaf = keccak256(abi.encodePacked(_msgSender()));\n        require(\n            MerkleProof.verify(_merkleProof, merkleRoot, leaf),\n            \"this address does not have permission\"\n        );\n\n        // check more advanced requirements\n        require(\n            qty == 1 || qty == 5 || qty == 10,\n            \"quantity must be 1 or 5 or 10\"\n        );\n        require(\n            qty == tokenIds.length && qty == celestialTypes.length,\n            \"Length of the amount of the nft must be equal to qty\"\n        );\n        //require(\n        //    (celestialsMintedWhitelist + qty) <= WHITELIST_CELESTIAL,\n        //    \"you can't mint that many right now\"\n        //);\n\n        //require(\n        //    (whitelistClaimed[_msgSender()] + qty) <=\n        //        MAXIMUM_MINTS_PER_WHITELIST_ADDRESS,\n        //    \"this address can't mint any more whitelist celestials\"\n        //);\n\n        // check price\n        require(\n            msg.value >= CELESTIAL_PRICE_WHITELIST * qty,\n            \"not enough AVAX\"\n        );\n\n        CelestialsMintedWhitelist += qty;\n        whitelistClaimed[_msgSender()] += qty;\n\n        // mint celestials\n        _createCelestials(qty, tokenIds, celestialTypes, _msgSender());\n    }\n\n    /**\n     * @dev GEN0 minting\n     */\n    function mintCelestialWithAVAX(\n        uint256 qty,\n        uint256[] memory tokenIds,\n        uint256[] memory celestialTypes\n    ) external payable whenNotPaused {\n        //require(mintingStartedAVAX(), \"cannot mint right now\");\n        require(\n            qty == 1 || qty == 5 || qty == 10,\n            \"quantity must be 1 or 5 or 10\"\n        );\n        require(\n            qty == tokenIds.length && qty == celestialTypes.length,\n            \"Length of the amount of the nft must be equal to qty\"\n        );\n        require(\n            (CelestialsMintedWithAVAX + qty) <=\n                (NUM_GEN0_CELESTIAL - CelestialsMintedWhitelist),\n            \"you can't mint that many right now\"\n        );\n\n        // calculate the transaction cost\n        uint256 transactionCost = CELESTIAL_PRICE_AVAX * qty;\n        require(msg.value >= transactionCost, \"not enough AVAX\");\n\n        CelestialsMintedWithAVAX += qty;\n\n        // mint Celestials\n        _createCelestials(qty, tokenIds, celestialTypes, _msgSender());\n    }\n\n    /**\n     * @dev GEN0 minting\n     */\n    function mintCelestialWithSoul(\n        uint256 qty,\n        uint256[] memory tokenIds,\n        uint256[] memory celestialTypes\n    ) external whenNotPaused {\n        //require(mintingStartedSOUL(), \"cannot mint right now\");\n        require(\n            qty == 1 || qty == 5 || qty == 10,\n            \"quantity must be 1 or 5 or 10\"\n        );\n        require(\n            qty == tokenIds.length && qty == celestialTypes.length,\n            \"Length of the amount of the nft must be equal to qty\"\n        );\n        require(\n            (CelestialsMintedWithAVAX + qty) <=\n                (NUM_GEN0_CELESTIAL - CelestialsMintedWhitelist),\n            \"you can't mint that many right now\"\n        );\n\n        // calculate transaction costs\n        uint256 transactionCostSOUL = currentSOULMintCost * qty;\n        require(\n            soul.balanceOf(_msgSender()) >= transactionCostSOUL,\n            \"not enough SOUL\"\n        );\n\n        if (\n            CelestialsMintedWithSOUL <= CELESTIAL_PER_SOUL_MINT_LEVEL &&\n            CelestialsMintedWithSOUL + qty > CELESTIAL_PER_SOUL_MINT_LEVEL\n        ) {\n            currentSOULMintCost = currentSOULMintCost * 2;\n        }\n\n        CelestialsMintedWithSOUL += qty;\n        // spend SOUL\n        soul.burnFrom(_msgSender(), transactionCostSOUL);\n\n        // mint celestial\n        _createCelestials(qty, tokenIds, celestialTypes, _msgSender());\n    }\n\n    function CelestialsOfOwner(address _owner)\n        external\n        view\n        returns (CelestialInfo[] memory)\n    {\n        require(balanceOf(_owner) > 0, \"there is no nft in your balance\");\n        uint256 balance = balanceOf(_owner);\n        CelestialInfo[] memory res = new CelestialInfo[](balance);\n        for (uint256 i = 0; i < balance; i++) {\n            uint256 tokenId = tokenOfOwnerByIndex(_owner, i);\n            res[i] = CelestialInfo({\n                tokenId: tokenId,\n                celestialType: tokenTypes[tokenId]\n            });\n        }\n        return res;\n    }\n\n    function bachedCelestialsOfOwner(address _owner, uint256 _page)\n        public\n        view\n        returns (CelestialInfo[] memory)\n    {\n        require(_page >= 0, \"there is no negetive page\");\n        require(balanceOf(_owner) > 0, \"there is no nft in your balance\");\n        CelestialInfo[] memory celestials = new CelestialInfo[](5);\n        uint256 StartPoint = _page * 5;\n        uint256 EndPoint = StartPoint + 5;\n\n        if (EndPoint > balanceOf(_owner)) {\n            EndPoint = balanceOf(_owner);\n        }\n        for (uint256 i = StartPoint; i < EndPoint; i++) {\n            uint256 tokenId = tokenOfOwnerByIndex(_owner, i); // tokenOfOwnerByIndex comes from IERC721Enumerable\n\n            celestials[i] = CelestialInfo({\n                tokenId: tokenId,\n                celestialType: tokenTypes[tokenId]\n            });\n        }\n        return celestials;\n    }\n}\n",
  "sourceMap": "408:11924:19:-:0;;;1332:13;1295:50;;1815:1;1781:35;;2240:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1316:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:5;1382;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1405:17:7;;;;:7;;:17;;;;;:::i;:::-;;1316:113;;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;:23::i;:::-;924:7:1;:15;;-1:-1:-1;;;;924:15:1;;;934:5;2366:16:19::1;:20:::0;2396;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2426:4:19::1;:12:::0;;-1:-1:-1;;;;;;2426:12:19::1;-1:-1:-1::0;;;;;2426:12:19;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;408:11924:19;;586:96:14;665:10;;586:96::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;408:11924:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;408:11924:19;;;-1:-1:-1;408:11924:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:22;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:183;231:13;;-1:-1:-1;;;;;273:31:22;;263:42;;253:70;;319:1;316;309:12;253:70;146:183;;;:::o;334:1193::-;436:6;444;497:2;485:9;476:7;472:23;468:32;465:52;;;513:1;510;503:12;465:52;540:16;;-1:-1:-1;;;;;605:14:22;;;602:34;;;632:1;629;622:12;602:34;670:6;659:9;655:22;645:32;;715:7;708:4;704:2;700:13;696:27;686:55;;737:1;734;727:12;686:55;766:2;760:9;788:2;784;781:10;778:36;;;794:18;;:::i;:::-;869:2;863:9;837:2;923:13;;-1:-1:-1;;919:22:22;;;943:2;915:31;911:40;899:53;;;967:18;;;987:22;;;964:46;961:72;;;1013:18;;:::i;:::-;1053:10;1049:2;1042:22;1088:2;1080:6;1073:18;1110:4;1100:14;;1151:7;1146:2;1141;1137;1133:11;1129:20;1126:33;1123:53;;;1172:1;1169;1162:12;1123:53;1194:1;1185:10;;1204:129;1218:2;1215:1;1212:9;1204:129;;;1306:10;;;1302:19;;1296:26;1275:14;;;1271:23;;1264:59;1229:10;;;;1204:129;;;1351:2;1348:1;1345:9;1342:80;;;1410:1;1405:2;1400;1392:6;1388:15;1384:24;1377:35;1342:80;1441:6;-1:-1:-1;1466:55:22;;-1:-1:-1;;1502:18:22;;;1466:55;:::i;:::-;1456:65;;;;334:1193;;;;;:::o;1532:380::-;1611:1;1607:12;;;;1654;;;1675:61;;1729:4;1721:6;1717:17;1707:27;;1675:61;1782:2;1774:6;1771:14;1751:18;1748:38;1745:161;;1828:10;1823:3;1819:20;1816:1;1809:31;1863:4;1860:1;1853:15;1891:4;1888:1;1881:15;1745:161;;1532:380;;;:::o;:::-;408:11924:19;;;;;;",
  "sourcePath": "contracts/Celestial.sol",
  "type": "contract"
}